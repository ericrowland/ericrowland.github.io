(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1569645,      36318]
NotebookOptionsPosition[   1488073,      34923]
NotebookOutlinePosition[   1488593,      34943]
CellTagsIndexPosition[   1488550,      34940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ListTricks 2.52", "Title",ExpressionUUID->"7c438206-6530-4633-a7ec-83d9559a89bd"],

Cell["documentation notebook", "Subtitle",ExpressionUUID->"70993ec9-fb93-45fa-8e2b-b66b44cf6616"],

Cell[TextData[{
 "Eric Rowland\n",
 ButtonBox["https://ericrowland.github.io/packages.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["https://ericrowland.github.io/packages.html"], None}]
}], "Subsubtitle",ExpressionUUID->"75433290-58f5-488f-97e1-09222949c6ce"],

Cell[CellGroupData[{

Cell["Introduction", "Section",ExpressionUUID->"78234cc0-b5e0-41f0-bf7c-01e25a30a08e"],

Cell["\<\
ListTricks is a collection of about 50 structure manipulation, \
classification, and searching tools that can be thought of as extending the \
core Wolfram Language.
This introduction gets you started with a few features of the package; the \
next section provides a complete list of package symbols along with their \
usage messages and further examples.\
\>", "Text",ExpressionUUID->"eef61d25-b272-484a-acdb-25daec421d77"],

Cell[TextData[{
 "To use ListTricks, first you will need to load the package by evaluating \
the following cell.  (If you need help, see ",
 ButtonBox["loading a package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://people.hofstra.edu/Eric_Rowland/packages/loading_a_package.\
html"], None},
  ButtonNote->
   "http://people.hofstra.edu/Eric_Rowland/packages/loading_a_package.html"],
 ".)"
}], "Text",ExpressionUUID->"d40b2b82-9dcd-47fa-81a5-7da2dd0ee5a1"],

Cell[BoxData[
 RowBox[{"<<", "ListTricks`"}]], "Code",ExpressionUUID->"51a07dfd-7bf3-4849-86dc-fb43cfdb3e7a"],

Cell[CellGroupData[{

Cell["Structure manipulation", "Subsection",ExpressionUUID->"21d87200-ad8b-47a2-a4f0-7c627971d956"],

Cell[TextData[{
 "Most functions in ListTricks are for manipulating the structure of lists \
and arrays.  Several of these perform geometric operations on two-dimensional \
arrays; these include ",
 StyleBox["RotateClockwise", "Input"],
 ", ",
 StyleBox["Shear", "Input"],
 ", and ",
 StyleBox["Tile", "Input"],
 "."
}], "Text",ExpressionUUID->"1e8dc1a8-1333-4818-af5b-2a9c304ec5ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"array", "=", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", 
         FractionBox["1", "2"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", "127"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"ArrayPlot", "/@", 
    RowBox[{"{", 
     RowBox[{"array", ",", 
      RowBox[{"RotateClockwise", "[", "array", "]"}], ",", 
      RowBox[{"Shear", "[", "array", "]"}], ",", 
      RowBox[{"Tile", "[", 
       RowBox[{"array", ",", 
        RowBox[{"{", 
         RowBox[{"400", ",", "400"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"73e9bbde-83dc-4a72-ab22-6a7e4f6bda9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJzFV4FtxEAI47pJV+oIXaArdPSq6Tf9cM05xBgSIYSQ8Z2QZd3r+8fb+4uZ
fT6i/RvNv43eGM3xvYLOvJ2iMf+kvjya868Mu+rH31bb3y5a6jGeTtNQ2/Np
GurDaRrqY1lfj+ba23F13/3lfTtGed9Fed/5cXn/car/dlPSt2Mu77tc3j/R
ZVn/RJdl/RNdlvXH+W5K+ovdlPSXpyvor9v6/rqt74MPwHk8+OV4W4ccD0KO
d/6M/Dod7/wZ+XU63tZZjgdZjnc6varbNLzT6VXdpuGdTq/qNg0/jru6qts0
vNtVZHcpeHfayO5S8Lau5XhQy/FBv07HB/06HR/063S8i3J80K/T8UG/TscH
/Tod73I5/qZu0/A3dZuGv6nbNPy4v7sUPLG7FDx1+gQ8B+fxHJzHkx9JP/l3
9Kf5jQv+/lzQ/M6/o5nmd/4dzTS/cZnmJzPN73QcrWl+p+NoTfM7HUdrmn8c
dxmtaX63y2hN87vbRGua37ia5idrmh/4ebbfT/OBn2f7/TQf+Hm230/zXUT7
ND/w82y/n+YDP8/2+2k+8PNsv5/muxzt0/xA1yrd7/OBrlW63+cDXat0v88f
692qdL/PB7tV7n6bD26n3P02H4zX3h7vVkwP3/9i+snf1X4/8ds65Pwg5Pzi
9z3kP3nXV+x+47F1lvODLOcXv+8hv/h9D/nF73vIP7Tve8gvft9DfvH7HvKL
3/eQH9Ry/mK/n/iL/X7iL/b7id9FOX+x30/8xX4/8Rf7/cTvcjl/k+53/ibd
7/xNut/5R9/uN/7G3W/8rbfv3f3G30s/vgBoOjoe
     "], {{0, 0}, {128, 128}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzFmNFNBjEMg3NswkqMwAKswOi8HA+/Jc5U1uf0FEVR8J+WNHXa98+vj8+3
mfm+Za7dsT2BuXYnsJ2CuWUt/uzugbm/tfj3WIsvuh5/XnU9/r3yrT3wm/ut
PTAi9fjzKvX48tXjy6jHNzYef55tPL6suL0HNOftPaB13z4HtO7b54DWffsc
0LpvnwPK/+1+QPm/3Q8o/7f7AeX/dj+g/N/uB5T/2/2A8n+7H1D+b/cDLgA9
AbdC+j/gckzvAZdjeg+4OqfPAVfn9Dng6pw+B1yd0+eA43u6H3B8T/cDju/p
fsDxPd0POL6n+wHH93Q/4Pie7gcc39P9gLv/0+8D7v5Pvw+4+z/9PuDu//T7
gLv/0+8D7v5Pvw+4+z/9PuDu//T7gPL7qY7jT6bj+H/c+/+r4/jm/u90HD+U
OP5kEscPv3z92cjXv4wPfyDGhyuI8WEOY/yV5TDGh3Uc48M6jvFhHcd40XV8
yOcxPuTzGB/yeYwXqeNDPo/xIZ/H+JDPY7yxcfw82zheZnyawxgvOTvNYYy/
XnN2WscxXur2tI5jvNTtaR3HeKnb0zqO8Ubj+HnWOF74+5TPY7zw9ymfx3gj
OH6eBcebD8ebgeO3/eYPcL+ZIe43OcL913OOcL+pU9xv6hT3mzrF/aLrfsPX
uN/wNe43fI37Rep+w9e43/A17jd8jfu37Vm2ZUZ1W3JSt6/XnNRtqcu6LXVZ
t6Uu6/a2nmV9z2RNCz/X9bbMsmx/y+MHRlU6Hg==
     "], {{0, 0}, {128, 128}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzFV4GNw0AIu/tNfqUfoQv8Ch39v1F7akCJS4wh1RUhapwrsiy+b78/t68x
xv152p/Z+5mj9/x/t55HeEyhL47nezTFsf6FlvjM2uIrfamxJ19q7MlfemzK
37TYkb/PpSEfu3crz/fvVp6banluy9ada+vOnWvr1p+L68Oc4rr15+K69efi
uvXn4vowsbh+pNei+pFei+pHei2qH+m1qH42t4L62dwK6ufvLq8DtLyO4OAR
4+H2rsVbv0b+noy3fo38PRlv/Rr5ezIe7e9iPNrfxXjr18jfk/FWn5/qPQmP
9ncxHu3vYrzV56d6T8LbOUXmnoBH+7sYj/Z3Md7+OurfJD7q78n4qL8n46P+
noyP+nsyPurvyfiovyfjo/6ejI/6ezL+qt6T8Ff1noS/qvck/FW9J+GZuSfg
mbkn4Lm703iSncaz9OTD0pMf+vbcoW/PHZbe+H00svTG76ORpR9cZOnJyNIb
/UZzlt7oN5qz9Ea/0Zyln/s5RnOW3swxmrP05i7RnKUfXM7SkzlLD/w72d9d
e+Dfyf7u2gP/TvZ3196caJ2lB/6d7O+uPfDvZH937YF/J/u7a29itM7SAz2L
9L7aAz2L9L7aAz2L9L7az/O5ivS+2oO5Cue+tQd3E859aw+6S++O56plh/u9
lt35udjfHf04P2p6cNT02v0d0h/s7QVz32jGeVTTg6im1+7vkF67v0N67f4O
6ad0f4f02v0d0mv3d0iv3d8hPcjV9LX+7uhr/d3R1/q7ozenmr7W3x19rb87
+lp/d/QmVtP36H3R9+h90ffofdHPtrlv9H1z3+g77946942+lX3OPxkXOh4=

     "], {{0, 0}, {128, 128}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztmYHNJCsOhOEyuZQuhE3gUnkhP+3+3bNj0+ChbUxL89FClmXKVRIjj2X+
++v///v1n1LKP/Vn61WTF/xagPzS9cAvv1LFTtcDv9xV7nQ98Mt91MwdtfOd
F/7DHr+KHbUT/pb//FXs+XXAr/lPGZvkwK/tpr77pQd+wb+r74b/mn9X3w3/
Nf+uvhv+a/6dtRP+ln9n7YS/5d/764Bf82+WA7/2Wc9a7QSeb+en5+/svbuy
H7XLzz889iH2z61gH2N/DPYptmIfZc+2F/8Z/vHhP8Qvf2sX/gP8Wt9uB3+7
X95vB3+7L24Hf7svXfzdfsV/lK9WJb41fva/ug9+nSeeGj/7X90Hv84TT43/
PvK+m/PEU+NnTbuqbZV4evysaVe1jXh+/Ly169sjnh0/j3WOE0+O9/riSnxL
vNcXE98T7/XFxPfES+3XNuL58VFtI54fH9U24vnx8e0Rz44bx4knx4uxjHTg
o/F1/Jn5wMfiSx1uMx/4WHwdbzMf+Fj8UeN61swHPhZ/3GLPmvnAx+IPWM+a
+cDH4uvYmvnAx+JVn/xp39w7D96Jr7JP/rRvBr8IX2St+7RvBr8IX2Wt076Z
D3wsXtW6mdoHfgFe3eZM7QO/AK/gc7cLPhyv43PpwEfj1ZpMBz4YPzuvb/KB
D8Xr+ft0PvCh+LP/ne2bX/nAh+LPmnen9r3jwMfgZ+f1TT7wofjZeX2TD3wo
/kxzMx34YPzdvvmVD3wo/m7fDH4N/m7fDH4N/m7fDH4N3lP7wMfjPbUPfDze
d7vgo/HOdOCD8c38fXI55cDfJPR9bj3wy69U13brgX/4/jG73Xrgl7uo+fuk
deuBX+Y9bvmudeuBX9oj7V3r1gO/tNVn3Xrgl1b10bO+Ww/8Mn+VffSs79YD
v8xfZC2c9d164Jf5q6yFs75bD/wyv6qFs75bD/wyv7rtWd+tB37pq/SzvlsP
/NLX8UnfrQd+6avVnDfibj3wK4LxPD963j+b/9v49fy9OW/E3Xrgl7vK3Zw3
4m498Mtd5Py9OW/E3XrgF/mteX70vH82/7fxW/P86Hn/bP5v4z9penRW3K0H
fmmNvnpV3/1p/m/jt/rqVX03/Nf5rb56Vd8N/3V+q69e1XfDf53fqo0rayf8
bX6rNq6snfC3+a3bX/vrgN96/2jOL1MC/1X+Zv6ux/Gr9cCvCMffcj3wy6/U
4V6uB/7h+4fey/XAL3dR83dll+uBX/Iev4KeXa4HfmkP2p5drgd+aevYLtcD
v7Sqz87qu3t8X8+v+uysvhv+Dr/qs7P6bvg7/FXWyqy+G/4Ov6qVmbUT/gt+
9WvIrJ3wX/Ar+txfB/zW+0eyHPi1nzzvb/TArwTkzvsbPfDLr1Sx0/XAP3z/
SNcDv9zJ8/5GD/yCP3ve3+iBX9pDxp5fB/zW+0f2gl/ZTX33Sw/8w/ePdD3w
D98/0vXAP3z/yF7wj98/shf84/eP7AX/+P0je8Gv/D0y4O/wN/N31t7VTuD5
dn56/s7euyv7Ubv8/MNjH2L/3Ar2MfbHYJ9iK/ZR9mx78Z/hHx/+Q/zyt3bh
P8Cv9e128Lf75f128Lf74nbwt/vSxd/tV/xH+WpV4lvjZ/+r++DXeeKp8bP/
1X3w6zzx1PjvI++7OU88NX7WtKvaVomnx8+adlXbiOfHz1u7vj3i2fHzWOc4
8eR4ry+uxLfEe30x8T3xXl9MfE+81H5tI54fH9U24vnxUW0jnh8f3x7x7Lhx
nHhyvBjLSAc+Gl/Hn5kPfCy+1OE284GPxdfxNvOBj8UfNa5nzXzgY/HHLfas
mQ98LP6A9ayZD3wsvo6tmQ98LF71yZ/2zb3z4J34KvvkT/tm8IvwRda6T/tm
8IvwVdY67Zv5wMfiVa2bqX3gF+DVbc7UPvAL8Ao+d7vgw/E6PpcOfDRercl0
4IPxs/P6Jh/4ULyev0/nAx+KP/vf2b75lQ98KP6seXdq3zsOfAx+dl7f5AMf
ip+d1zf5wIfizzQ304EPxt/tm1/5wIfi7/bN4Nfg7/bN4Nfg7/bN4NfgPbUP
fDzeU/vAx+N9tws+Gu9MBz4Y38zfJ5dTDvxNQt/n1gO//Ep1bbce+IfvH7Pb
rQd+uYuav09atx74Zd7jlu9atx74pT3S3rVuPfBLW33WrQd+aVUfPeu79cAv
81fZR8/6bj3wy/xF1sJZ360Hfpm/ylo467v1wC/zq1o467v1wC/zq9ue9d16
4Je+Sj/ru/XAL30dn/TdeuCXvlrNeSPu1gO/IhjP86Pn/bP5v41fz9+b80bc
rQd+uavczXkj7tYDv9xFzt+b80bcrQd+kd+a50fP+2fzfxu/Nc+PnvfP5v82
/pOmR2fF3Xrgl9boq1f13Z/m/zZ+q69e1XfDf53f6qtX9d3wX+e3+upVfTf8
1/mt2riydsLf5rdq48raCX+b37r9tb8O+K33j+b8MiXwX+Vv5u96HL9aD/yK
cPwt1wO//Eod7uV64B++f+i9XA/8chc1f1d2uR74Je/xK+jZ5Xrgl/ag7dnl
euCXto7tcj3wS6v67Ky+u8f39fyqz87qu+Hv8Ks+O6vvhr/DX2WtzOq74e/w
q1qZWTvhv+BXv4bM2gn/Bb+iz/11wG+9fyTLgV/7yfP+Rg/8SkDuvL/RA7/8
ShU7XQ/8w/ePdD3wy50872/0wC/4s+f9jR74pT1k7Pl1wG+9f2Qv+JXd1He/
9MA/fP9I1wP/8P0jXQ/8w/eP7AX/+P0je8E/fv/IXvCP3z+yF/zK3yMD/g5/
M39n7V3tBJ5v56fn7+y9u7IftcvPPzz2IfbPrWAfY38M9im2Yh9lz7YX/xn+
8eE/xC9/axf+A/xa324Hf7tf3m8Hf7svbgd/uy9d/N1+xX+Ur1YlvjV+9r+6
D36dJ54aP/tf3Qe/zhNPjf8+8r6b88RT42dNu6ptlXh6/KxpV7WNeH78vLXr
2yOeHT+PdY4TT473+uJKfEu81xcT3xPv9cXE98RL7dc24vnxUW0jnh8f1Tbi
+fHx7RHPjhvHiSfHi7GMdOCj8XX8mfnAx+JLHW4zH/hYfB1vMx/4WPxR43rW
zAc+Fn/cYs+a+cDH4g9Yz5r5wMfi69ia+cDH4lWf/Gnf3DsP3omvsk/+tG8G
vwhfZK37tG8GvwhfZa3TvpkPfCxe1bqZ2gd+AV7d5kztA78Ar+Bztws+HK/j
c+nAR+PVmkwHPhg/O69v8oEPxev5+3Q+8KH4s/+d7Ztf+cCH4s+ad6f2vePA
x+Bn5/VNPvCh+Nl5fZMPfCj+THMzHfhg/N2++ZUPfCj+bt8Mfg3+bt8Mfg3+
bt8Mfg3eU/vAx+M9tQ98PN53u+Cj8c504IPxzfx9cjnlwN8k9H1uPfDLr1TX
duuBf/j+MbvdeuCXu6j5+6R164Ff5j1u+a5164Ff2iPtXevWA7+01WfdeuCX
VvXRs75bD/wyf5V99Kzv1gO/zF9kLZz13Xrgl/mrrIWzvlsP/DK/qoWzvlsP
/DK/uu1Z360Hfumr9LO+Ww/80tfxSd+tB37pq9WcN+JuPfArgvE8P3reP5v/
2/j1/L05b8TdeuCXu8rdnDfibj3wy13k/L05b8TdeuAX+a15fvS8fzb/t/Fb
8/zoef9s/m/jP2l6dFbcrQd+aY2+elXf/Wn+b+O3+upVfTf81/mtvnpV3w3/
dX6rr17Vd8N/nd+qjStrJ/xtfqs2rqyd8Lf5rdtf++uA33r/aM4vUwL/Vf5m
/q7H8av1wK8Ix99yPfDLr9ThXq4H/uH7h97L9cAvd1Hzd2WX64Ff8h6/gp5d
rgd+aQ/anl2uB35p69gu1wO/tKrPzuq7e3xfz6/67Ky+G/4Ov+qzs/pu+Dv8
VdbKrL4b/g6/qpWZtRP+C371a8isnfBf8Cv63F8H/Nb7R7Ic+LWfPO9v9MCv
BOTO+xs98MuvVLHT9cA/fP9I1wO/3Mnz/kYP/II/e97f6IFf2kPGnl8H/Nb7
R/aCX9lNffdLD/zD9490PfAP3z/S9cA/fP/IXvCP3z+yF/zj94/sBf/4/SN7
wa/8PTLg7/D/C9yZHio=
     "], {{0, 0}, {400, 400}}, {0, 1}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",ExpressionUUID->\
"c6e04a8d-343e-4feb-90e6-01f77c6d1cac"]
}, Open  ]],

Cell[TextData[{
 "Several ListTricks symbols provide new ways of extracting structural \
elements.  ",
 StyleBox["Portion", "Input"],
 " lets you extract the first half, third, fourth, etc. of a list:"
}], "Text",ExpressionUUID->"09ebc347-ca27-4785-94f7-91f6157bda5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Alphabet", "[", "]"}]], "Input",ExpressionUUID->"e4effeab-c2d9-48cb-909b-0656719ef983"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"j\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>", 
   ",", "\<\"m\"\>", ",", "\<\"n\"\>", ",", "\<\"o\"\>", ",", "\<\"p\"\>", 
   ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", 
   ",", "\<\"u\"\>", ",", "\<\"v\"\>", ",", "\<\"w\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]], "Output",ExpressionUUID->\
"205b3bdd-2218-471d-9260-d0a4d3d46336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{"%", ",", 
   RowBox[{"1", "/", "3"}]}], "]"}]], "Input",ExpressionUUID->"18858a39-3a80-\
4137-a979-0ac11247fc48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>"}], "}"}]], "Output",ExpressionUUID->"fb377456-6eeb-48aa-\
b4fd-92837f2d20dd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Period", "Input"],
 " extracts the repeating part of a list:"
}], "Text",ExpressionUUID->"a3d5425e-e404-48eb-b7e9-25a465121a97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{
   RowBox[{"5", "/", "17"}], ",", "10", ",", "50"}], "]"}]], "Input",Expressio\
nUUID->"211fc87d-1506-4138-b6c2-0bbac18b85f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2", ",", "9", ",", "4", ",", "1", ",", "1", ",", "7", ",", "6", ",", "4",
      ",", "7", ",", "0", ",", "5", ",", "8", ",", "8", ",", "2", ",", "3", 
     ",", "5", ",", "2", ",", "9", ",", "4", ",", "1", ",", "1", ",", "7", 
     ",", "6", ",", "4", ",", "7", ",", "0", ",", "5", ",", "8", ",", "8", 
     ",", "2", ",", "3", ",", "5", ",", "2", ",", "9", ",", "4", ",", "1", 
     ",", "1", ",", "7", ",", "6", ",", "4", ",", "7", ",", "0", ",", "5", 
     ",", "8", ",", "8", ",", "2", ",", "3", ",", "5", ",", "2", ",", "9"}], 
    "}"}], ",", "0"}], "}"}]], "Output",ExpressionUUID->"4937773c-bfa0-4304-\
bfb5-9c42ab5803c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Period", "[", 
  RowBox[{"First", "[", "%", "]"}], "]"}]], "Input",ExpressionUUID->"5b65cac9-\
52ba-4437-9664-0c9f2c74574a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "9", ",", "4", ",", "1", ",", "1", ",", "7", ",", "6", ",", "4", 
   ",", "7", ",", "0", ",", "5", ",", "8", ",", "8", ",", "2", ",", "3", ",", 
   "5"}], "}"}]], "Output",ExpressionUUID->"3558767f-d55d-486c-b424-\
d518f7e75d8e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapping", "Subsection",ExpressionUUID->"a7871398-d392-426a-b21b-90a2d76cd9a7"],

Cell["ListTricks adds a few mapping functions.", "Text",ExpressionUUID->"af44f1a0-d2b9-4088-9269-6cbecea0f8ae"],

Cell[TextData[{
 StyleBox["MapAcross", "Input"],
 " maps a list of functions onto a list of elements of the same length:"
}], "Text",ExpressionUUID->"1256fd6e-0069-484f-8449-c3a37ac98b4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAcross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"IntegerQ", ",", "PrimeQ", ",", "EvenQ"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "2", ",", "6"}], "}"}]}], "]"}]], "Input",ExpressionUU\
ID->"e8ad88a6-9369-4cf1-a568-a675e475f03a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "True"}], "}"}]], "Output",ExpressionUUID\
->"3f0d3740-3532-46a9-af92-46f7714d08fc"]
}, Open  ]],

Cell[TextData[{
 StyleBox["MapList", "Input"],
 " maps a function onto each element of a list independently:"
}], "Text",ExpressionUUID->"462f1442-0f35-4871-a962-05240035c3ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "/@", 
  RowBox[{"MapList", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"letter", ",", 
      RowBox[{"FromCharacterCode", "[", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", "\"\<z\>\"", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ToCharacterCode", "[", "letter", "]"}], "-", 
          RowBox[{"ToCharacterCode", "[", "\"\<a\>\"", "]"}]}], ")"}]}], 
       "]"}]}], "]"}], ",", 
    RowBox[{"Characters", "[", "\"\<example\>\"", "]"}]}], "]"}]}]], "Input",E\
xpressionUUID->"b7be621b-b08d-42a4-8d68-b44064e52eb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"vxample\"\>", ",", "\<\"ecample\"\>", ",", "\<\"exzmple\"\>", 
   ",", "\<\"exanple\"\>", ",", "\<\"examkle\"\>", ",", "\<\"exampoe\"\>", 
   ",", "\<\"examplv\"\>"}], "}"}]], "Output",ExpressionUUID->"d58ac278-c78a-\
4e60-bddc-a0353f0dca88"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Classification", "Subsection",ExpressionUUID->"fbab26af-ac75-4682-a637-479ef42b4d4b"],

Cell["\<\
Part of manipulating objects is putting them in canonical form.  ListTricks \
contains several functions for this sort of operation.\
\>", "Text",ExpressionUUID->"2f8478ab-9ba6-4157-9cbf-446c445b0afc"],

Cell[TextData[{
 StyleBox["FirstSortedRotation", "Input"],
 " returns the rotation of a list that occurs first in a sorted listing of \
all rotations."
}], "Text",ExpressionUUID->"3ec6033b-7622-48b6-bce6-3bf5ef3bd0de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "40"}], "]"}]], "Input",ExpressionUUI\
D->"0041e2e8-1242-4125-b681-ff647a9348a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1"}], "}"}]], "Output",ExpressionUUID->"d105b6e5-355f-45c1-\
b8f7-40ef1eee513d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstSortedRotation", "[", "%", "]"}]], "Input",ExpressionUUID->"b7045cfd-1d08-4456-81a4-2725719a2a95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1"}], "}"}]], "Output",ExpressionUUID->"ef06b0b6-6bfe-47f0-\
af84-ca17dd8a68e0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["OrbitRepresentatives", "Input"],
 " finds representatives of a list under the orbit of several functions.\n\
Here we \"mod out\" by reversal and complementation, leaving a list of tuples \
that are distinct under these operations:"
}], "Text",ExpressionUUID->"eb5a6c4d-a523-4029-b71f-a2b4fb32096b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}]], "Input",ExpressionUUID\
->"9750250d-71b2-4b65-8967-9663848164e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"c75673ef-9d40-4fa1-9894-2f44c6720c92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Reverse", ",", 
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}]}], "}"}], ",", "%"}], "]"}]], "Input",Exp\
ressionUUID->"ae7a663a-6c34-448f-8465-552f1d914245"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"ff1a14b1-5065-4013-80cb-6f1cb3694829"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Searching", "Subsection",ExpressionUUID->"f282be1c-249e-4aa8-a6cf-f82814d92de5"],

Cell["\<\
ListTricks also includes some functions for searching and selecting.\
\>", "Text",ExpressionUUID->"bb5bd02f-e494-46c9-bde8-761bc776e727"],

Cell[TextData[{
 StyleBox["Occurrence", "Input"],
 " is a generalization of ",
 StyleBox["FirstPosition", "Input"],
 "; it returns the position of the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "63d8e82b-8fe3-4e59-a22a-1c19021b4d2e"],
 "th match."
}], "Text",ExpressionUUID->"bb56df11-862c-4c53-aca5-099d323ae990"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer", ",", 
   "\"\<not that many integers!\>\"", ",", "2"}], "]"}]], "Input",ExpressionUU\
ID->"f2e726b9-360c-4a66-a89b-c9bec875d7f1"],

Cell[BoxData["4"], "Output",ExpressionUUID->"dbdec0a7-3eb1-4763-bf8a-637b641a4f4d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Sift", "Input"],
 " repeatedly generates a random object until it finds one satisfying a \
certain condition."
}], "Text",ExpressionUUID->"d6523f91-ee53-466a-b309-44635dc06eed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sift", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", "100000", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"FactorInteger", "[", "#", "]"}], "]"}], "\[Equal]", "2"}], 
    "&"}]}], "]"}]], "Input",ExpressionUUID->"59669fa1-3c18-4fed-b0ab-\
d3c10c1eada0"],

Cell[BoxData["75002"], "Output",ExpressionUUID->"7d3aaa39-b72b-4527-9412-917ed979a860"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorInteger", "[", "%", "]"}]], "Input",ExpressionUUID->"78dce720-80e0-444d-9713-90bcdaf200f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37501", ",", "1"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"4376408f-c653-424c-9cab-9ee97c47d7f4"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Examples", "Input"],
 " searches through a range of values specified like ",
 StyleBox["Table", "Input"],
 ", identifying examples of a claim.\nIt is similar to ",
 StyleBox["Select", "Input"],
 ", but instead of requiring you to generate all candidates before testing, \
it generates them one at a time (using ",
 StyleBox["Do", "Input"],
 ").  This is useful for large searches."
}], "Text",ExpressionUUID->"18dfd97d-8548-4034-a61e-6e3bb081f645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Examples", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"IntegerDigits", "[", "n", "]"}], "]"}], "\[Equal]", "37"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "50000"}], "}"}]}], "]"}]], "Input",Expression\
UUID->"ecc15c0e-0a76-4c6b-a3df-4380997cc606"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "19999", "}"}], ",", 
   RowBox[{"{", "28999", "}"}], ",", 
   RowBox[{"{", "29899", "}"}], ",", 
   RowBox[{"{", "29989", "}"}], ",", 
   RowBox[{"{", "29998", "}"}], ",", 
   RowBox[{"{", "37999", "}"}], ",", 
   RowBox[{"{", "38899", "}"}], ",", 
   RowBox[{"{", "38989", "}"}], ",", 
   RowBox[{"{", "38998", "}"}], ",", 
   RowBox[{"{", "39799", "}"}], ",", 
   RowBox[{"{", "39889", "}"}], ",", 
   RowBox[{"{", "39898", "}"}], ",", 
   RowBox[{"{", "39979", "}"}], ",", 
   RowBox[{"{", "39988", "}"}], ",", 
   RowBox[{"{", "39997", "}"}], ",", 
   RowBox[{"{", "46999", "}"}], ",", 
   RowBox[{"{", "47899", "}"}], ",", 
   RowBox[{"{", "47989", "}"}], ",", 
   RowBox[{"{", "47998", "}"}], ",", 
   RowBox[{"{", "48799", "}"}], ",", 
   RowBox[{"{", "48889", "}"}], ",", 
   RowBox[{"{", "48898", "}"}], ",", 
   RowBox[{"{", "48979", "}"}], ",", 
   RowBox[{"{", "48988", "}"}], ",", 
   RowBox[{"{", "48997", "}"}], ",", 
   RowBox[{"{", "49699", "}"}], ",", 
   RowBox[{"{", "49789", "}"}], ",", 
   RowBox[{"{", "49798", "}"}], ",", 
   RowBox[{"{", "49879", "}"}], ",", 
   RowBox[{"{", "49888", "}"}], ",", 
   RowBox[{"{", "49897", "}"}], ",", 
   RowBox[{"{", "49969", "}"}], ",", 
   RowBox[{"{", "49978", "}"}], ",", 
   RowBox[{"{", "49987", "}"}], ",", 
   RowBox[{"{", "49996", "}"}]}], "}"}]], "Output",ExpressionUUID->"a7e31f18-\
3854-4f29-8bce-1597ea366f07"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Presentation", "Subsection",ExpressionUUID->"46716cdf-7534-456d-97bd-c0c7999be602"],

Cell[TextData[{
 "Often it\[CloseCurlyQuote]s useful to format data for visualization.  ",
 StyleBox["ColumnWrap", "Input"],
 " and ",
 StyleBox["MulticolumnArrayPlot", "Input"],
 " break up multi-row arrays into several shorter arrays."
}], "Text",ExpressionUUID->"ce8f741c-954e-4e50-b8db-9adbe1077da8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnWrap", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "32"}], "}"}]}], "}"}], "]"}]], "Input",ExpressionUUID->\
"664116a6-ce1d-49b9-91af-8c34d2a10410"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "4", "16"},
    {"2", "4", "5", "32"},
    {"3", "8", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}},
   GridBoxSpacings->{
    "Columns" -> {Automatic, {Automatic, 3}, Automatic}, 
     "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"332cd88d-91a3-43a5-b390-0ac42b979d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MulticolumnArrayPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"n", ",", "2", ",", "6"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", 
       RowBox[{
        SuperscriptBox["2", "6"], "-", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PixelConstrained", "\[Rule]", "4"}]}], "]"}]], "Input",ExpressionU\
UID->"36e4c70d-b3a8-499c-9348-dfeb9746fac3"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxdkMERgDAIBDmL8K0tWYIN2P/PSILAZiZj3JDjuPN+rnszs2PsfWzZt/Qv
m/8dRpHfdCqvFWr9I+guBF25rqAr9edBxX7TK6tXc+edkiksLRuFrhvoBkIt
VVMN+SqjBE0vhdJXBoN8lSODShgjxkK+SsOVpjXQ9igos6mNoPtLgOaxUKYb
4AXW0gPf
   "], {{0, 0}, Offset[{88, 128}, {0, 0}]}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{88, 128},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{0, 88}, {0, 128}},
  PlotRangeClipping->True]], "Output",ExpressionUUID->"224c7551-18d4-401e-\
ad4b-514815d81d01"]
}, Open  ]],

Cell[TextData[{
 StyleBox["IndentedExport", "Input"],
 " exports data with indentation to show the structure:"
}], "Text",ExpressionUUID->"034a83e3-b505-47bc-b8a1-853530d45180"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"IndentedExport", "[", 
   RowBox[{"\"\<temp.m\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<California\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Abbreviation\>\"", "\[Rule]", "\"\<CA\>\""}], ",", 
         RowBox[{"\"\<Capital\>\"", "\[Rule]", 
          TemplateBox[{"\"Sacramento\"",RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Sacramento\"", ",", "\"California\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}],
            "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
           "Entity"]}]}], "}"}]}], ",", 
      RowBox[{"\"\<Nevada\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Abbreviation\>\"", "\[Rule]", "\"\<NV\>\""}], ",", 
         RowBox[{"\"\<Capital\>\"", "\[Rule]", 
          TemplateBox[{"\"Carson City\"",RowBox[{"Entity", "[", 
              RowBox[{"\"City\"", ",", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "\"Carson\"", ",", "\"Nevada\"", ",", "\"UnitedStates\""}],
                   "}"}]}], "]"}],
            "\"Entity[\\\"City\\\", {\\\"Carson\\\", \\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
           "Entity"]}]}], "}"}]}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  RowBox[{"\"\<temp.m\>\"", ",", "\"\<Text\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteFile", "[", "\"\<temp.m\>\"", "]"}]}], "Input",ExpressionUUID->\
"f7834980-9d92-46d8-88f6-5cbd04507ff8"],

Cell[BoxData["\<\"{\\n\\t\\\"California\\\" -> {\\n\\t\\t\\\"Abbreviation\\\" \
-> \\\"CA\\\",\\n\\t\\t\\\"Capital\\\" -> Entity[\\\"City\\\", \
{\\\"Sacramento\\\", \\\"California\\\", \\\"UnitedStates\\\"}]\\n\\t},\\n\\t\
\\\"Nevada\\\" -> {\\n\\t\\t\\\"Abbreviation\\\" -> \
\\\"NV\\\",\\n\\t\\t\\\"Capital\\\" -> Entity[\\\"City\\\", {\\\"Carson\\\", \
\\\"Nevada\\\", \\\"UnitedStates\\\"}]\\n\\t}\\n}\"\>"], "Output",ExpressionUU\
ID->"193f4d9b-196a-4c44-bbfe-e98ae83b4529"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package symbols", "Section",ExpressionUUID->"d3848e77-ac24-4812-bfc4-535ff40430b4"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Accrete", "Input"],
 StyleBox[" (a generalization of ", "Text",
  FontWeight->"Plain"],
 StyleBox["Accumulate", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"7d802f07-a77d-4e6b-b9d5-962e9be5a79d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Accrete"}]], "Input",ExpressionUUID->"8d2733b2-49ab-4afb-baf0-3998de992165"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Accrete\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives a list of the \
successive accumulated totals of elements in \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Accrete\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\
\\\"{\\\", RowBox[List[RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", RowBox[List[StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \
\\\",\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], "]"}], ":=", 
                    RowBox[{
                    "Accumulate", "[", "ListTricks`Private`list", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "]"}]}], ",", "_"}], "]"}], ":=", 
                    "ListTricks`Private`list"}]},
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", "Plus"}], "]"}], ":=", 
                    RowBox[{
                    "Accumulate", "[", "ListTricks`Private`list", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", "List"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Head", "[", "ListTricks`Private`list", "]"}], "@@", 
                    RowBox[{"FoldList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sequence", "@@", "#1"}], ",", "#2"}], "}"}], 
                    "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}], 
                    "}"}], ",", 
                    RowBox[{"Rest", "[", "ListTricks`Private`list", "]"}]}], 
                    "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`f", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"List", ",", "_Symbol"}], "]"}]}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Attributes", "[", "ListTricks`Private`f", "]"}], 
                    ",", "Flat"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Head", "[", "ListTricks`Private`list", "]"}], "@@", 
                    RowBox[{"FoldList", "[", 
                    RowBox[{"ListTricks`Private`f", ",", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Rest", "[", "ListTricks`Private`list", "]"}]}], 
                    "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"Accrete", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    "ListTricks`Private`f_"}], "]"}], ":=", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"ListTricks`Private`f", ",", 
                    RowBox[{"Accrete", "[", 
                    RowBox[{"ListTricks`Private`list", ",", "List"}], "]"}], 
                    ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Accrete", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Accrete] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Accrete\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Accrete\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives a list of the \
successive accumulated totals of elements in \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Accrete\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\
\\\"{\\\", RowBox[List[RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"[\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", RowBox[List[StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \
\\\",\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Accrete\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"]]\) gives a list of the successive accumulated totals of elements in \!\
\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Accrete\", \"[\", \
RowBox[List[RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"3\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \
\"TR\"]]], \"}\"]], \",\", StyleBox[\"f\", \"TI\"]]], \"]\"]]\) gives \
\!\(\*RowBox[List[\"{\", RowBox[List[RowBox[List[StyleBox[\"f\", \"TI\"], \"[\
\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \"]\"]], \
\",\", RowBox[List[StyleBox[\"f\", \"TI\"], \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]]]], \
\"]\"]], \",\", RowBox[List[StyleBox[\"f\", \"TI\"], \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"3\", \"TR\"]]]], \"]\"]], \
\",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\).", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Accrete, {ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]]] :> Accumulate[ListTricks`Private`list], 
       ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][]], 
         Blank[]] :> ListTricks`Private`list, ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], Plus] :> Accumulate[ListTricks`Private`list], 
       ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], List] :> Apply[
         Head[ListTricks`Private`list], 
         FoldList[{
           Apply[Sequence, #], #2}& , {
           First[ListTricks`Private`list]}, 
          Rest[ListTricks`Private`list]]], ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], 
         Condition[
          Pattern[ListTricks`Private`f, 
           Except[List, 
            Blank[Symbol]]], 
          MemberQ[
           Attributes[ListTricks`Private`f], Flat]]] :> Apply[
         Head[ListTricks`Private`list], 
         FoldList[ListTricks`Private`f, 
          ListTricks`Private`f[
           First[ListTricks`Private`list]], 
          Rest[ListTricks`Private`list]]], ListTricks`Accrete[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], 
         Pattern[ListTricks`Private`f, 
          Blank[]]] :> Apply[ListTricks`Private`f, 
         ListTricks`Accrete[ListTricks`Private`list, List], {1}]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Accrete, {
      SyntaxInformation[ListTricks`Accrete] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Accrete"], False]]], "Output",ExpressionUUID->"df92bb3e-9839-\
4e3f-a985-eba2dfbb0d73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",ExpressionUUID->\
"96564500-a897-425f-b386-a242698b806c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55"}], "}"}]], "Output",ExpressionUUID->"83ed14b0-\
057b-4e18-a24e-70b08c04fee2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "Plus"}], "]"}]], "Input",Expressio\
nUUID->"3193e646-1361-420e-8fbf-f89278b6de76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55"}], "}"}]], "Output",ExpressionUUID->"f99ff706-\
e15d-41f6-9104-27477eb58dac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "Times"}], "]"}]], "Input",Expressi\
onUUID->"aea499d1-6c85-4bcc-b0f7-c2b1db10b671"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "24", ",", "120", ",", "720", ",", "5040", 
   ",", "40320", ",", "362880", ",", "3628800"}], "}"}]], "Output",ExpressionU\
UID->"d99f87a1-6fea-43c2-ac5e-1c4dcec1ad37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "LCM"}], "]"}]], "Input",Expression\
UUID->"9c021e74-8828-46b0-a4b7-91bfbc099a98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "6", ",", "12", ",", "60", ",", "60", ",", "420", ",", 
   "840", ",", "2520", ",", "2520"}], "}"}]], "Output",ExpressionUUID->\
"9d375892-fdb7-466c-8574-b205ccf7c750"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "List"}], "]"}]], "Input",Expressio\
nUUID->"21db99aa-43e7-4de3-ab63-03ac3bb8167b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"afdf643b-b4d2-4760-bf1d-5e66f7bdf195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"List", "/@", 
    RowBox[{"Range", "[", "10", "]"}]}], ",", "Join"}], "]"}]], "Input",Expres\
sionUUID->"bad8f126-cf0c-4d87-b9e4-62e31baf1c59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"6e39fde4-4a3f-4a51-b012-9033ea59d76b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}]}]], "Input",ExpressionUUID->\
"e5b8c682-963e-4293-b168-b85ea2ff7a72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "9", ",", "3", ",", "7", ",", "6", ",", "4", ",", "2", ",", "5", 
   ",", "1", ",", "10"}], "}"}]], "Output",ExpressionUUID->"e7f8f3ca-43a9-\
49cc-831b-5842b2f3d965"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{"data", ",", "Max"}], "]"}]], "Input",ExpressionUUID->"07c134fe-\
4b7e-4551-bc6b-51bffe841d8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9", ",", "10"}], "}"}]], "Output",ExpressionUUID->"c872d038-53b5-\
4bf6-b10d-b4f31aeda44e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "data", "]"}]], "Input",ExpressionUUID->"b0a6c085-e598-4348-9dd1-4e63cf51c4e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "f"}], "]"}]], "Input",ExpressionUU\
ID->"25155634-5384-4f81-8e0c-78780f833b3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "]"}], 
   ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "]"}]}], "}"}]], "Output",ExpressionUUID->\
"6e13524c-8743-4d3a-93f1-323c7286da2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accrete", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "Sequence"}], "]"}]], "Input",Expre\
ssionUUID->"1016b74d-6de0-4d7a-a35d-28d71aeb5468"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "3", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", 
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "1", ",", "2", ",", 
   "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "1", ",", "2", 
   ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", 
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",ExpressionUUID->"ca74c651-39e8-\
4877-b213-1393c1d0da9a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["AgreementLength", "Input"]], "Subsubsection",ExpressionUUID->"55d736bd-c8eb-45bf-b58a-3eb4af01f4eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AgreementLength"}]], "Input",ExpressionUUID->"75de8a2e-a861-4b9e-b228-7123cecb6e3e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"AgreementLength\\\", \\\"[\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]]\\) gives the number of beginning \
entries for which several lists agree.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"AgreementLength", "[", 
                    RowBox[{"ListTricks`Private`lists__", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Depth", "[", "#1", "]"}], "\[GreaterEqual]", 
                    "2"}], "&"}], ")"}]}], "]"}], ":=", 
                    RowBox[{"LengthWhile", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"Apply", "[", 
                    RowBox[{"List", ",", 
                    RowBox[{"{", "ListTricks`Private`lists", "}"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "ListTricks`Private`lists", "}"}], "]"}], 
                    ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", 
                    RowBox[{"{", "ListTricks`Private`lists", "}"}]}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"Unique", "[", "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"SameQ", "@@", "#1"}], "&"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "AgreementLength", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`AgreementLength] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`AgreementLength\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"AgreementLength\\\", \\\"[\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]]\\) gives the number of beginning \
entries for which several lists agree.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"AgreementLength\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]]\) gives the \
number of beginning entries for which several lists agree.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`AgreementLength, {ListTricks`AgreementLength[
         PatternTest[
          Pattern[ListTricks`Private`lists, 
           BlankSequence[]], Depth[#] >= 2& ]] :> LengthWhile[
         Transpose[
          PadRight[
           Apply[List, {ListTricks`Private`lists}, {1}], {
            Length[{ListTricks`Private`lists}], 
            Max[
             Map[Length, {ListTricks`Private`lists}]]}, 
           Unique[]]], Apply[SameQ, #]& ]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`AgreementLength, {
      SyntaxInformation[ListTricks`AgreementLength] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`AgreementLength"], False]]], "Output",ExpressionUUID->\
"5aacb28f-939c-4bad-bdec-313f95d5f39c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AgreementLength", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "e"}], "}"}]}], "]"}]], "Input",Expr\
essionUUID->"4a634125-03b9-4805-8159-04761a05ed29"],

Cell[BoxData["3"], "Output",ExpressionUUID->"3d1cdb4e-e52c-4995-97d6-d134a5d5a96c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AgreementLength", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", "1072934", "]"}], ",", 
   RowBox[{"IntegerDigits", "[", "1072", "]"}]}], "]"}]], "Input",ExpressionUU\
ID->"63ccc9e8-43d1-4036-837f-6c8a68de4209"],

Cell[BoxData["4"], "Output",ExpressionUUID->"9a7e5fca-7ef8-444a-9c1d-0769b21baa5f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ArrayMap", "Input"]], "Subsubsection",ExpressionUUID->"3499c31a-8dd4-41ab-b1f4-5e849e68b8d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ArrayMap"}]], "Input",ExpressionUUID->"b91ee513-a9ce-4d3c-9ad4-0449ec6c814d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ArrayMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
StyleBox[\\\"level\\\", \\\"TI\\\"], \\\"}\\\"]]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to the subarrays of \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) specified by \
\\!\\(\\*StyleBox[\\\"level\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"ArrayMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
StyleBox[\\\"level\\\", \\\"TI\\\"], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"d\\\
\", \\\"TI\\\"]]], \\\"]\\\"]]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\
\\\"]\\) along direction \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"ArrayMap", "[", 
                    RowBox[{
                    "ListTricks`Private`f_", ",", 
                    "ListTricks`Private`array_List", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}], 
                    "}"}], ",", 
                    RowBox[{"ListTricks`Private`direction", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "1"}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    "ListTricks`Private`direction", "\[LessEqual]", 
                    "ListTricks`Private`level", "\[LessEqual]", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}]}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`perm", ",", 
                    "ListTricks`Private`result"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`perm", "=", 
                    RowBox[{"RotateRight", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"ListTricks`Private`level", ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"ListTricks`Private`direction", "-", "1"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"ListTricks`Private`result", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{"ListTricks`Private`f", ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`perm"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`level", "-", "1"}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    "ListTricks`Private`result", ",", 
                    "ListTricks`Private`perm"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`level", "\[LessEqual]", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`result", "]"}]}], "||", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"ArrayMap", "::", "tperm"}], "MessageName"], ",", 
                    "ListTricks`Private`result", ",", 
                    "ListTricks`Private`perm"}], "]"}]}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ArrayMap", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", 
                    RowBox[{"{", "_", "}"}], ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`ArrayMap] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], {
                    Blank[]}, 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`ArrayMap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ArrayMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
StyleBox[\\\"level\\\", \\\"TI\\\"], \\\"}\\\"]]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to the subarrays of \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) specified by \
\\!\\(\\*StyleBox[\\\"level\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"ArrayMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
StyleBox[\\\"level\\\", \\\"TI\\\"], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"d\\\
\", \\\"TI\\\"]]], \\\"]\\\"]]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\
\\\"]\\) along direction \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"ArrayMap\", \"[\", RowBox[List[StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"array\", \"TI\"], \",\", RowBox[List[\"{\", \
StyleBox[\"level\", \"TI\"], \"}\"]]]], \"]\"]]\) applies \
\!\(\*StyleBox[\"f\", \"TI\"]\) to the subarrays of \!\(\*StyleBox[\"array\", \
\"TI\"]\) specified by \!\(\*StyleBox[\"level\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"ArrayMap\", \"[\", RowBox[List[StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"array\", \"TI\"], \",\", RowBox[List[\"{\", \
StyleBox[\"level\", \"TI\"], \"}\"]], \",\", StyleBox[\"d\", \"TI\"]]], \
\"]\"]]\) applies \!\(\*StyleBox[\"f\", \"TI\"]\) along direction \
\!\(\*StyleBox[\"d\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`ArrayMap, {Condition[
         ListTricks`ArrayMap[
          Pattern[ListTricks`Private`f, 
           Blank[]], 
          Pattern[ListTricks`Private`array, 
           Blank[List]], {
           PatternTest[
            Pattern[ListTricks`Private`level, 
             Blank[Integer]], Positive]}, 
          Optional[
           Pattern[ListTricks`Private`direction, 
            PatternTest[
             Blank[Integer], Positive]], 1]], ListTricks`Private`direction <= 
         ListTricks`Private`level <= ArrayDepth[ListTricks`Private`array]] :> 
       Module[{ListTricks`Private`perm, ListTricks`Private`result}, 
         ListTricks`Private`perm = RotateRight[
            Range[ListTricks`Private`level, 1, -1], 
            ListTricks`Private`direction - 1]; 
         ListTricks`Private`result = Map[ListTricks`Private`f, 
            Transpose[ListTricks`Private`array, ListTricks`Private`perm], {
            ListTricks`Private`level - 1}]; Condition[
           Transpose[ListTricks`Private`result, ListTricks`Private`perm], 
           Or[
           ListTricks`Private`level <= ArrayDepth[ListTricks`Private`result], 
            Message[
             MessageName[ListTricks`ArrayMap, "tperm"], 
             ListTricks`Private`result, ListTricks`Private`perm]]]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`ArrayMap, {
      SyntaxInformation[ListTricks`ArrayMap] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], {
            Blank[]}, 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`ArrayMap"], False]]], "Output",ExpressionUUID->"64a9988b-89f7-\
409c-98f6-6b99b0ef7eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"n", ",", "m"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",Expres\
sionUUID->"659a5408-5971-4d41-a285-365d3e0f098b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", "0", "0", "0"},
    {"1", "1", "0", "0", "0", "0"},
    {"1", "2", "1", "0", "0", "0"},
    {"1", "3", "3", "1", "0", "0"},
    {"1", "4", "6", "4", "1", "0"},
    {"1", "5", "10", "10", "5", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"79c183fc-93b2-4feb-a2e0-f00b78ac5af4"]
}, Open  ]],

Cell["In a two-dimensional array, level 2 corresponds to columns.", "Text",ExpressionUUID->"b1935520-47c2-49ad-855f-8ed69c96b6e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"ArrayMap", "[", 
   RowBox[{"RotateLeftTo", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"e6b856ba-63ff-49c5-9051-632259b06546"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1"},
    {"1", "2", "3", "4", "5", "0"},
    {"1", "3", "6", "10", "0", "0"},
    {"1", "4", "10", "0", "0", "0"},
    {"1", "5", "0", "0", "0", "0"},
    {"1", "0", "0", "0", "0", "0"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"8f5e21ed-6252-4a8d-ae2a-8aa1ecc24fcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", "=", "2"}], "}"}], ",", 
    RowBox[{"ArrayMap", "[", 
     RowBox[{"Most", ",", 
      RowBox[{"Apply", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "##1"], "&"}], ",", 
        RowBox[{"Outer", "[", 
         RowBox[{"List", ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "2"}], "]"}], ",", 
             RowBox[{"{", "d", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", "d", "}"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}], ",", "1"}], "]"}]}], "]"}], "]"}]], "Input",Exp\
ressionUUID->"c100c23b-6efc-47ca-85a0-253b79f74611"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     SubscriptBox["a", 
      RowBox[{"0", ",", "0"}]], 
     SubscriptBox["a", 
      RowBox[{"0", ",", "1"}]], 
     SubscriptBox["a", 
      RowBox[{"0", ",", "2"}]]},
    {
     SubscriptBox["a", 
      RowBox[{"1", ",", "0"}]], 
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]], 
     SubscriptBox["a", 
      RowBox[{"1", ",", "2"}]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"28158391-4a28-4de7-95b9-ffe0626ab3a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", "=", "2"}], "}"}], ",", 
    RowBox[{"ArrayMap", "[", 
     RowBox[{"Most", ",", 
      RowBox[{"Apply", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "##1"], "&"}], ",", 
        RowBox[{"Outer", "[", 
         RowBox[{"List", ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "2"}], "]"}], ",", 
             RowBox[{"{", "d", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", "d", "}"}]}], "]"}], ",", 
      RowBox[{"{", "2", "}"}], ",", "2"}], "]"}]}], "]"}], "]"}]], "Input",Exp\
ressionUUID->"fc2ea69b-7b2f-4a90-94ed-6145a69bdc81"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     SubscriptBox["a", 
      RowBox[{"0", ",", "0"}]], 
     SubscriptBox["a", 
      RowBox[{"0", ",", "1"}]]},
    {
     SubscriptBox["a", 
      RowBox[{"1", ",", "0"}]], 
     SubscriptBox["a", 
      RowBox[{"1", ",", "1"}]]},
    {
     SubscriptBox["a", 
      RowBox[{"2", ",", "0"}]], 
     SubscriptBox["a", 
      RowBox[{"2", ",", "1"}]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"77482d41-f9a8-4915-8491-3e516fa54042"]
}, Open  ]],

Cell[TextData[{
 "The fourth argument is the dimension affected by ",
 StyleBox["ArrayMap", "Input"],
 "."
}], "Text",ExpressionUUID->"eabfd978-662f-48ca-bc61-4d6239331ca5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "=", "6"}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"ArrayMap", "[", 
        RowBox[{"Most", ",", 
         RowBox[{"Outer", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1"}], "]"}], ",", 
              RowBox[{"{", "d", "}"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", "d", "}"}], ",", "#1"}], "]"}], "]"}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", "d", "]"}]}]}], "]"}]], "Input",ExpressionUUID->\
"b9eaa80a-610f-4d85-8317-6ecf39d6f95e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"87aac3a8-80bf-4c68-ace7-02495572de60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", "=", "6"}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"ArrayMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "}"}], "&"}], ",", 
         RowBox[{"Outer", "[", 
          RowBox[{"a", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1"}], "]"}], ",", 
              RowBox[{"{", "d", "}"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", "d", "}"}], ",", "#1"}], "]"}], "]"}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", "d", "]"}]}]}], "]"}]], "Input",ExpressionUUID->\
"c94b546f-74b3-40f9-8fbd-3b6e96ffd988"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "0"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"fd574b50-1d4b-4c1d-8eaa-85ed97fb1fa9"]
}, Open  ]],

Cell[TextData[{
 "Some ",
 StyleBox["ArrayMap", "Input"],
 " functionality can be achieved by ",
 StyleBox["MapThread", "Input"],
 ":"
}], "Text",ExpressionUUID->"e6f92be6-8571-4641-bae9-b8b1bbbaf87f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{"ArrayMap", "[", 
   RowBox[{"RotateLeftTo", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RotateLeftTo", "[", 
      RowBox[{"{", "##", "}"}], "]"}], "&"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"n", ",", "m"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]}], "Input",ExpressionUUID->"31fb2dd5-ef58-443e-9a40-eed7e588cb9c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1"},
    {"1", "2", "3", "4", "5", "0"},
    {"1", "3", "6", "10", "0", "0"},
    {"1", "4", "10", "0", "0", "0"},
    {"1", "5", "0", "0", "0", "0"},
    {"1", "0", "0", "0", "0", "0"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"14edcc20-1d7e-4559-bfe4-45405cd99eb9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1"},
    {"1", "2", "3", "4", "5", "0"},
    {"1", "3", "6", "10", "0", "0"},
    {"1", "4", "10", "0", "0", "0"},
    {"1", "5", "0", "0", "0", "0"},
    {"1", "0", "0", "0", "0", "0"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"25a8a92f-fb20-4ea7-9de6-81f3434314e5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ColumnMap", "Input"],
 StyleBox[" (a variant of ", "Text",
  FontWeight->"Plain"],
 StyleBox["MapThread", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"2e87d494-96b9-4f7e-bcbd-3312795c96a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ColumnMap"}]], "Input",ExpressionUUID->"8f56c036-6502-4d42-8053-9d37ad5dc4da"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ColumnMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) maps \\!\\(\\*StyleBox[\
\\\"f\\\", \\\"TI\\\"]\\) onto each column of a two\[Hyphen]dimensional \
ragged array, giving as the second argument the row index of the first \
element in the column.\\n\\!\\(\\*RowBox[List[\\\"ColumnMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"offset\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) indexes rows starting with \\!\\(\\*StyleBox[\\\
\"offset\\\", \\\"TI\\\"]\\) rather than 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ColumnMap", "[", 
                    RowBox[{"ListTricks`Private`f_", ",", 
                    RowBox[{"ListTricks`Private`grid", ":", 
                    RowBox[{"{", "___List", "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`offset", ":", 
                    RowBox[{"Except", "[", "_Rule", "]"}], ":", "1"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`p", "=", 
                    RowBox[{"OptionValue", "[", "DefaultElement", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`length", "=", 
                    RowBox[{"MatchLength", "[", 
                    RowBox[{"#1", ",", "ListTricks`Private`p"}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{"#1", ",", "ListTricks`Private`length"}], "]"}], 
                    ",", "ListTricks`Private`p"}], "]"}], ",", 
                    RowBox[{
                    "ListTricks`Private`length", "+", 
                    "ListTricks`Private`offset"}]}], "]"}]}], "]"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{"ListTricks`Private`grid", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`grid", "]"}], 
                    ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "ListTricks`Private`grid"}], 
                    "]"}]}], "}"}], ",", "ListTricks`Private`p"}], "]"}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ColumnMap", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`ColumnMap] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"DefaultElement", "\[Rule]", "Null"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`ColumnMap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ColumnMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) maps \\!\\(\\*StyleBox[\
\\\"f\\\", \\\"TI\\\"]\\) onto each column of a two\[Hyphen]dimensional \
ragged array, giving as the second argument the row index of the first \
element in the column.\\n\\!\\(\\*RowBox[List[\\\"ColumnMap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"offset\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) indexes rows starting with \\!\\(\\*StyleBox[\\\
\"offset\\\", \\\"TI\\\"]\\) rather than 1.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"ColumnMap\", \"[\", RowBox[List[StyleBox[\"f\", \"TI\
\"], \",\", StyleBox[\"array\", \"TI\"]]], \"]\"]]\) maps \
\!\(\*StyleBox[\"f\", \"TI\"]\) onto each column of a two\[Hyphen]dimensional \
ragged array, giving as the second argument the row index of the first \
element in the column.\n\!\(\*RowBox[List[\"ColumnMap\", \"[\", \
RowBox[List[StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"array\", \"TI\"], \
\",\", StyleBox[\"offset\", \"TI\"]]], \"]\"]]\) indexes rows starting with \
\!\(\*StyleBox[\"offset\", \"TI\"]\) rather than 1.", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`ColumnMap, {ListTricks`ColumnMap[
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Pattern[ListTricks`Private`grid, {
           BlankNullSequence[List]}], 
         Optional[
          Pattern[ListTricks`Private`offset, 
           Except[
            Blank[Rule]]], 1], 
         OptionsPattern[]] :> 
       Module[{ListTricks`Private`p = OptionValue[DefaultElement]}, 
         Map[
         With[{ListTricks`Private`length = 
            ListTricks`MatchLength[#, ListTricks`Private`p]}, 
           ListTricks`Private`f[
            ListTricks`UnpadRight[
             Drop[#, ListTricks`Private`length], ListTricks`Private`p], 
            ListTricks`Private`length + ListTricks`Private`offset]]& , 
          Transpose[
           PadRight[ListTricks`Private`grid, {
             Length[ListTricks`Private`grid], 
             Max[
              Map[Length, ListTricks`Private`grid]]}, 
            ListTricks`Private`p]]]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`ColumnMap, {
      SyntaxInformation[ListTricks`ColumnMap] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {DefaultElement -> Null}, "Attributes" -> {Protected}, 
    "FullName" -> "ListTricks`ColumnMap"], False]]], "Output",ExpressionUUID->\
"d7af5ea2-857b-412e-b652-ed7b600cb235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "f", ",", "g"}], "}"}]}], "}"}]}], "]"}]], "Input",Exp\
ressionUUID->"54892767-9ffe-4acb-9a77-378206f4ba61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "e"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "f"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "g", "}"}], ",", "3"}], "]"}]}], "}"}]], "Output",Expression\
UUID->"417e3058-42ea-4779-bdcd-8579efa322b0"]
}, Open  ]],

Cell["\<\
Interpolate a polynomial down each column of Pascal's triangle:\
\>", "Text",ExpressionUUID->"ab8454ac-7825-4d63-b0aa-ff4942532ffb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"ColumnMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Factor", "[", 
       RowBox[{"InterpolatingPolynomial", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"n", "-", "#2"}]}], "]"}], "]"}], "&"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"n", ",", "m"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "n"}], "}"}]}], "]"}]}], "]"}], ",", 
   FractionBox["1", "2"]}], "]"}]], "Input",ExpressionUUID->"63c3d161-bb74-\
4bca-999f-4cf61cb74bda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "24"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "120"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], ")"}]}]}], "}"}]], "Output",ExpressionUU\
ID->"4b6f9113-bee3-4acc-8df1-d0af27b792f3"]
}, Open  ]],

Cell["Here is a ragged array:", "Text",ExpressionUUID->"34fc7ddd-d816-4d27-819a-64f01ab3bceb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"array", "=", 
   RowBox[{"UnpadRight", "/@", 
    RowBox[{"Shear", "[", 
     RowBox[{
      RowBox[{"PadRight", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Binomial", "[", 
            RowBox[{"n", ",", "m"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"-", "1"}], ",", "3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", "array", "]"}]}], "Input",ExpressionUUID->"7010220b-\
7d5a-40d0-b839-837b05001e07"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "0", "1", "", "", "", "", "", ""},
    {"0", "0", "0", "1", "", "", "", "", "", ""},
    {"0", "1", "1", "1", "", "", "", "", "", ""},
    {"0", "0", "0", "1", "", "", "", "", "", ""},
    {"0", "0", "1", "1", "0", "0", "0", "0", "0", "1"},
    {"0", "1", "0", "1", "0", "0", "0", "0", "0", "1"},
    {"1", "1", "1", "1", "0", "0", "0", "1", "1", "1"},
    {"0", "0", "0", "1", "", "", "", "", "", ""},
    {"0", "0", "1", "1", "0", "1", "", "", "", ""},
    {"0", "1", "0", "1", "0", "1", "", "", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"a52303b3-c6e7-4386-8c1e-7e959fc074fa"]
}, Open  ]],

Cell[TextData[{
 StyleBox["ColumnMap", "Input"],
 " fills in the holes with ",
 Cell[BoxData[
  FormBox["Null", TraditionalForm]],ExpressionUUID->
  "304ca203-6cbe-4e23-83a7-747bdba83d76"],
 " by default."
}], "Text",ExpressionUUID->"5a3734ba-f665-4365-8b66-fa2f259d8503"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnMap", "[", 
  RowBox[{"f", ",", "array"}], "]"}]], "Input",ExpressionUUID->"7799e9aa-8a7d-\
4a68-89f1-11fb325bf001"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
       "0", ",", "0", ",", "1"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
       "0", ",", "1", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "Null", ",", "0", ",", "0"}], 
      "}"}], ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "Null", ",", "1", ",", "1"}], 
      "}"}], ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "5"}], "]"}]}], 
  "}"}]], "Output",ExpressionUUID->"cb528612-30e6-4943-aa9c-298db4ebb6dc"]
}, Open  ]],

Cell[TextData[{
 "Replacing each ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "84c0dcc7-0104-47df-9e88-28e352c222b9"],
 " with ",
 Cell[BoxData[
  FormBox["Null", TraditionalForm]],ExpressionUUID->
  "a8c91aaf-db09-4e57-8d89-f25291bc3ae0"],
 " causes these entries to be treated as background.\nFor empty columns, the \
second argument to ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "1349e2e4-3e55-4550-93f6-4192071e888c"],
 " is the index of the first nonexistent row."
}], "Text",ExpressionUUID->"5a6a90cb-99ec-499c-a8e0-ec11bc3e6a33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"array", "/.", "\[InvisibleSpace]", 
    RowBox[{"0", "\[Rule]", "Null"}]}]}], "]"}]], "Input",ExpressionUUID->\
"29b6e74d-2e8c-42ba-9f54-fbcf596f81fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "Null", ",", "Null", ",", "1", ",", "1", ",", "Null", ",", 
       "Null", ",", "1"}], "}"}], ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "Null", ",", "1", ",", "Null", ",", "1", ",", "Null", ",", 
       "1"}], "}"}], ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "11"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "9"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "11"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "5"}], "]"}]}], 
  "}"}]], "Output",ExpressionUUID->"655d409f-36ba-4336-b543-62e791c03876"]
}, Open  ]],

Cell[TextData[{
 "Use the ",
 StyleBox["DefaultElement", "Input"],
 " option to change the default element."
}], "Text",ExpressionUUID->"8db3e7d6-5c54-4fcf-a89a-2b0e2f9d8e3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnMap", "[", 
  RowBox[{"f", ",", "array", ",", 
   RowBox[{"DefaultElement", "\[Rule]", "0"}]}], "]"}]], "Input",ExpressionUUI\
D->"08299cf1-1eb5-4138-882e-716887f03b2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "1"}], "}"}], ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}], 
      "}"}], ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1"}], "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "11"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "9"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "11"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "7"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", "5"}], "]"}]}], 
  "}"}]], "Output",ExpressionUUID->"c34a128d-f1c6-422b-9a4e-a45d7acd07e2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "array", "]"}]], "Input",ExpressionUUID->"6dfa8556-fe9c-4fec-8c9e-8580544811f8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["ColumnWrap", "Input"],
 StyleBox[" (a generalization of ", "Text",
  FontWeight->"Plain"],
 StyleBox["Multicolumn", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"dc1f014e-a5d1-4d22-9322-25b4a1721eb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ColumnWrap"}]], "Input",ExpressionUUID->"b4d2e78a-c7b3-4d20-b165-df5c26d9bccf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) wraps a list into at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
columns.\\n\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) wraps a \
two\[Hyphen]dimensional array into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) super\[Hyphen]columns.\\n\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\
\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves a space of size \
\\!\\(\\*StyleBox[\\\"spacing\\\", \\\"TI\\\"]\\) between successive super\
\[Hyphen]columns.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ColumnWrap", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}], ",", 
                    RowBox[{"ListTricks`Private`spacing", ":", 
                    RowBox[{"_", "?", "NonNegative"}], ":", "3"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Grid", "[", 
                    RowBox[{"{", "}"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ColumnWrap", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array", ":", 
                    RowBox[{"{", "__List", "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}], ",", 
                    RowBox[{"ListTricks`Private`spacing", ":", 
                    RowBox[{"_", "?", "NonNegative"}], ":", "3"}], ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`width", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "ListTricks`Private`array"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"#1", ",", "1"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Unriffle", "[", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    ",", "ListTricks`Private`width"}], "}"}], ",", "Null"}], 
                    "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox[
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    "ListTricks`Private`n"], "]"}]}], "]"}]}], ",", 
                    "ListTricks`Private`options", ",", 
                    RowBox[{"ItemSize", "\[Rule]", "Full"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"ListTricks`Private`width", "-", "1"}]}], "]"}]}],
                     "]"}], ",", "ListTricks`Private`spacing"}], "]"}], ",", 
                    "Automatic"}], "}"}], ",", "Automatic"}], "}"}]}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"ColumnWrap", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"{", "__", "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}], ",", 
                    RowBox[{"ListTricks`Private`spacing", ":", 
                    RowBox[{"_", "?", "NonNegative"}], ":", "3"}], ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"ColumnWrap", "[", 
                    RowBox[{
                    RowBox[{"List", "/@", "ListTricks`Private`list"}], ",", 
                    "ListTricks`Private`n", ",", "ListTricks`Private`spacing",
                     ",", "ListTricks`Private`options"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ColumnWrap", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`ColumnWrap] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Baseline"}], "}"}]}]},
                    {
                    RowBox[{"AllowedDimensions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AllowScriptLevelChange", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AutoDelete", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"DefaultBaseStyle", "\[Rule]", "\<\"Grid\"\>"}]},
                    {
                    RowBox[{
                    "DefaultElement", "\[Rule]", "\<\"\[Placeholder]\"\>"}]},
                    {
                    RowBox[{"DeleteWithContents", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Dividers", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Editable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ItemSize", "\[Rule]", "Full"}]},
                    {
                    RowBox[{"ItemStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Selectable", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","17","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Baseline"}], "}"}]}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","17","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`ColumnWrap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) wraps a list into at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
columns.\\n\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) wraps a \
two\[Hyphen]dimensional array into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) super\[Hyphen]columns.\\n\\!\\(\\*RowBox[List[\\\"ColumnWrap\\\
\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves a space of size \
\\!\\(\\*StyleBox[\\\"spacing\\\", \\\"TI\\\"]\\) between successive super\
\[Hyphen]columns.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"ColumnWrap\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) wraps a list into at \
most \!\(\*StyleBox[\"n\", \"TI\"]\) columns.\n\!\(\*RowBox[List[\"ColumnWrap\
\", \"[\", RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) wraps a two\[Hyphen]dimensional array into at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) super\[Hyphen]columns.\n\
\!\(\*RowBox[List[\"ColumnWrap\", \"[\", RowBox[List[StyleBox[\"array\", \"TI\
\"], \",\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"spacing\", \"TI\"]]], \
\"]\"]]\) leaves a space of size \!\(\*StyleBox[\"spacing\", \"TI\"]\) \
between successive super\[Hyphen]columns.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`ColumnWrap, {ListTricks`ColumnWrap[{}, 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 2], 
         Optional[
          Pattern[ListTricks`Private`spacing, 
           PatternTest[
            Blank[], NonNegative]], 3], 
         OptionsPattern[]] :> Grid[{}], ListTricks`ColumnWrap[
         Pattern[ListTricks`Private`array, {
           BlankSequence[List]}], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 2], 
         Optional[
          Pattern[ListTricks`Private`spacing, 
           PatternTest[
            Blank[], NonNegative]], 3], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> With[{ListTricks`Private`width = Max[
            Map[Length, ListTricks`Private`array]]}, 
         Grid[
          Map[Flatten[#, 1]& , 
           ListTricks`Unriffle[
            PadRight[ListTricks`Private`array, {
              Length[ListTricks`Private`array], ListTricks`Private`width}, 
             Null], 
            Ceiling[Length[ListTricks`Private`array]/ListTricks`Private`n]]], 
          ListTricks`Private`options, ItemSize -> Full, 
          Spacings -> {{Automatic, 
             Append[
              ConstantArray[Automatic, 
               Max[0, ListTricks`Private`width - 1]], 
              ListTricks`Private`spacing], Automatic}, Automatic}]], 
       ListTricks`ColumnWrap[
         Pattern[ListTricks`Private`list, {
           BlankSequence[]}], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 2], 
         Optional[
          Pattern[ListTricks`Private`spacing, 
           PatternTest[
            Blank[], NonNegative]], 3], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> ListTricks`ColumnWrap[
         Map[List, ListTricks`Private`list], ListTricks`Private`n, 
         ListTricks`Private`spacing, ListTricks`Private`options]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`ColumnWrap, {
      SyntaxInformation[ListTricks`ColumnWrap] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Alignment -> {Center, Baseline}, AllowedDimensions -> Automatic, 
      AllowScriptLevelChange -> True, AutoDelete -> False, Background -> None,
       BaselinePosition -> Automatic, BaseStyle -> {}, DefaultBaseStyle -> 
      "Grid", DefaultElement -> "\[Placeholder]", DeleteWithContents -> True, 
      Dividers -> {}, Editable -> Automatic, Frame -> None, FrameStyle -> 
      Automatic, ItemSize -> Full, ItemStyle -> None, Selectable -> 
      Automatic}, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`ColumnWrap"], False]]], "Output",ExpressionUUID->"93db99e8-\
a51b-4b61-83e0-9ad0e9f87725"]
}, Open  ]],

Cell["This table would be very long without wrapping the columns.", "Text",ExpressionUUID->"62c37217-2f8c-4b59-a887-152d22878828"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnWrap", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"DigitCount", "[", 
        RowBox[{"n", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "100"}], "}"}]}], "]"}], ",", "11"}], "]"}]], "Input",\
ExpressionUUID->"b869c001-370b-4c68-a457-77f24fcc5a1b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "11", "3", "21", "3", "31", "5", "41", "3", "51", "4", "61", 
     "5", "71", "4", "81", "3", "91", "5"},
    {"2", "1", "12", "2", "22", "3", "32", "1", "42", "3", "52", "3", "62", 
     "5", "72", "2", "82", "3", "92", "4"},
    {"3", "2", "13", "3", "23", "4", "33", "2", "43", "4", "53", "4", "63", 
     "6", "73", "3", "83", "4", "93", "5"},
    {"4", "1", "14", "3", "24", "2", "34", "2", "44", "3", "54", "4", "64", 
     "1", "74", "3", "84", "3", "94", "5"},
    {"5", "2", "15", "4", "25", "3", "35", "3", "45", "4", "55", "5", "65", 
     "2", "75", "4", "85", "4", "95", "6"},
    {"6", "2", "16", "1", "26", "3", "36", "2", "46", "4", "56", "3", "66", 
     "2", "76", "3", "86", "4", "96", "2"},
    {"7", "3", "17", "2", "27", "4", "37", "3", "47", "5", "57", "4", "67", 
     "3", "77", "4", "87", "5", "97", "3"},
    {"8", "1", "18", "2", "28", "3", "38", "3", "48", "2", "58", "4", "68", 
     "2", "78", "4", "88", "3", "98", "3"},
    {"9", "2", "19", "3", "29", "4", "39", "4", "49", "3", "59", "5", "69", 
     "3", "79", "5", "89", "4", "99", "4"},
    {"10", "2", "20", "2", "30", "4", "40", "2", "50", "3", "60", "4", "70", 
     "3", "80", "2", "90", "4", "100", "3"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}},
   GridBoxSpacings->{
    "Columns" -> {Automatic, {Automatic, 3}, Automatic}, 
     "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"b27be6c6-2479-4747-a16e-528062a3ecae"]
}, Open  ]],

Cell["Dynamically change the number of super-columns:", "Text",ExpressionUUID->"b7a8cf45-79a1-4ffe-a96e-6f2d0c46daf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ColumnWrap", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"DigitCount", "[", 
          RowBox[{"n", ",", "2", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "100"}], "}"}]}], "]"}], ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "10", ",", "\"\<columns\>\""}], "}"}], ",", "1", ",", 
     "14", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID->"07e143aa-\
3c66-460b-b937-be9dd6b7877e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 10, "columns"}, 1, 14, 1}}, Typeset`size$$ = {
    688., {79.634033203125, 85.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$14094$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$14094$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListTricks`ColumnWrap[
        Table[{$CellContext`n$$, 
          DigitCount[$CellContext`n$$, 2, 1]}, {$CellContext`n$$, 
          100}], $CellContext`n$$], 
      "Specifications" :> {{{$CellContext`n$$, 10, "columns"}, 1, 14, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{733., {126., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",ExpressionUUID->"b65b764a-\
476d-4d49-a5f9-e241efbe7f5f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Complements", "Input"]], "Subsubsection",ExpressionUUID->"e1c52490-8259-4279-b697-3f121e4a41f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Complements"}]], "Input",ExpressionUUID->"083c50f0-cd4c-4bd2-ac4a-87b742a63ad2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Complements\\\", \
\\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]]\\) gives the \
list \\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"Complement\\\
\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[\\\"Complement\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\
\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]]]], \\\"]\\\"]]]], \\\"}\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"Complements\
\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\
\\\"Complement\\\", \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[\\\"Complement\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\
\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\
\"3\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]], \\\",\\\", RowBox[List[\\\"Complement\\\", \
\\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]], \
\\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Complements", "[", 
                    RowBox[{"ListTricks`Private`lists", ":", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`h_", "[", "___", "]"}], 
                    "..."}], ")"}]}], "]"}], ":=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`lists", "}"}], 
                    "\[LeftDoubleBracket]", "ListTricks`Private`i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`lists", "}"}], ",", 
                    RowBox[{"{", "ListTricks`Private`i", "}"}]}], "]"}]}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`i", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "ListTricks`Private`lists", "}"}], "]"}]}], 
                    "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Complements", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "___", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Complements] = {
                    "ArgumentsPattern" -> {
                    BlankNullSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Complements\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Complements\\\", \
\\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]]\\) gives the \
list \\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"Complement\\\
\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[\\\"Complement\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\
\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]]]], \\\"]\\\"]]]], \\\"}\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"Complements\
\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\
\\\"Complement\\\", \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[\\\"Complement\\\", \\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\
\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\
\"3\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]], \\\",\\\", RowBox[List[\\\"Complement\\\", \
\\\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"3\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\
\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]], \
\\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Complements\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]]], \"]\"]]\) gives the list \!\(\*RowBox[List[\"{\", \
RowBox[List[RowBox[List[\"Complement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]]], \"]\"]], \",\", RowBox[List[\"Complement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]]], \"]\"]]]], \"}\"]]\).\n\!\(\*RowBox[List[\"Complements\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"3\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]]\) gives \
\!\(\*RowBox[List[\"{\", RowBox[List[RowBox[List[\"Complement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"3\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]], \",\", \
RowBox[List[\"Complement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"3\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]], \",\", \
RowBox[List[\"Complement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"3\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Complements, {ListTricks`Complements[
         Pattern[ListTricks`Private`lists, 
          RepeatedNull[
           Pattern[ListTricks`Private`h, 
            Blank[]][
            BlankNullSequence[]]]]] :> Table[
         Complement[
          Part[{ListTricks`Private`lists}, ListTricks`Private`i], 
          Apply[Sequence, 
           Drop[{ListTricks`Private`lists}, {ListTricks`Private`i}]]], {
         ListTricks`Private`i, 
          Length[{ListTricks`Private`lists}]}]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Complements, {
      SyntaxInformation[ListTricks`Complements] -> {"ArgumentsPattern" -> {
           BlankNullSequence[]}}}], "NValues" -> None, "FormatValues" -> None,
     "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Complements"], False]]], "Output",ExpressionUUID->"64789bae-\
0b28-41dd-a916-a37e22fb0ee3"]
}, Open  ]],

Cell["\<\
Complements gives information about the symmetric difference, and it keeps \
track of which list each element came from.\
\>", "Text",ExpressionUUID->"4570f8c0-bcae-49f2-bad6-a94a62b453b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complements", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "10"}], "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"3", ",", "12"}], "]"}]}], "]"}]], "Input",ExpressionUUID->\
"d007629d-c710-4beb-a7b1-81eb8a469ffe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"530e56ad-ae1d-4936-af8c-ebd6d93301d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Complements", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", "m"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100", ",", "n"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "3"}], "}"}], ",", "1", ",", "10", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "9"}], "}"}], ",", "1", ",", "10", ",", "1"}], 
    "}"}]}], "]"}]], "Input",ExpressionUUID->"c76e2e62-b014-4447-b918-\
b362c2c8ad78"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 3, $CellContext`n$$ = 9, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`m$$], 3}, 1, 10, 1}, {{
       Hold[$CellContext`n$$], 9}, 1, 10, 1}}, Typeset`size$$ = {
    823.3, {24.548934936523438`, 12.791915893554688`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`m$15956$$ = 0, $CellContext`n$15957$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = 3, $CellContext`n$$ = 9}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$15956$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$15957$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Apply[ListTricks`Complements, 
        Table[
         Range[$CellContext`i, $CellContext`i + $CellContext`m$$], \
{$CellContext`i, 1, 100, $CellContext`n$$}]], 
      "Specifications" :> {{{$CellContext`m$$, 3}, 1, 10, 
         1}, {{$CellContext`n$$, 9}, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{869., {76., 82.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",ExpressionUUID->"fe098924-\
637d-4062-82fe-2593a9c5861d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Examples", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["Counterexamples", "Input"]
}], "Subsubsection",ExpressionUUID->"58870be6-fa46-4231-b5c5-2be64ac0bd82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Examples"}]], "Input",ExpressionUUID->"b24a0505-b0ed-41ec-85ce-54f77877efcb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Examples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]]\\) gives the list of values of \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\) for which \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) evaluates to \
True.\\n\\!\\(\\*RowBox[List[\\\"Examples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
examples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Examples", "[", 
                    RowBox[{"__", ",", "0"}], "]"}], ":=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Examples", "[", 
                    RowBox[{"ListTricks`Private`expr_", ",", 
                    RowBox[{"ListTricks`Private`varspec", ":", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "__"}], "}"}], "..."}], ")"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "Positive"}], "|", 
                    "\[Infinity]"}], ":", "\[Infinity]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`variables", "=", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Hold", "[", "ListTricks`Private`varspec", "]"}], 
                    ",", "All", ",", "1"}], "]"}]}]}], ",", 
                    RowBox[{"ListTricks`Private`count", "=", "0"}], ",", 
                    "ListTricks`Private`tag"}], "}"}], ",", 
                    RowBox[{"ListTricks`Private`ReapExpressions", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", "ListTricks`Private`expr", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    "ListTricks`Private`variables", ",", 
                    "ListTricks`Private`tag"}], "]"}], ";", 
                    RowBox[{"ListTricks`Private`count", "++"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`count", "\[Equal]", 
                    "ListTricks`Private`n"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ",", 
                    "ListTricks`Private`varspec"}], "]"}], ";"}], ",", 
                    "ListTricks`Private`tag"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Examples", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", "_."}], "}"}], 
                    ",", "___"}], "}"}]}], ",", 
                    RowBox[{"\<\"LocalVariables\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Table\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], "}"}]}]}], 
                    "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Examples] = {
                    "ArgumentsPattern" -> {
                    Blank[], {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}, 
                    BlankNullSequence[]}, "LocalVariables" -> {"Table", {2, 
                    DirectedInfinity[1]}}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Examples\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Examples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"]\\\"]]\\) gives the list of values of \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\) for which \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) evaluates to \
True.\\n\\!\\(\\*RowBox[List[\\\"Examples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
examples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Examples\", \"[\", RowBox[List[StyleBox[\"expr\", \
\"TI\"], \",\", RowBox[List[\"{\", RowBox[List[StyleBox[\"i\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"}\"]], \",\", RowBox[List[\"{\", RowBox[List[StyleBox[\"j\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]]\) gives the \
list of values of \!\(\*RowBox[List[\"{\", RowBox[List[StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"j\", \"TI\"], \",\", StyleBox[\"\\[Ellipsis]\", \
\"TR\"]]], \"}\"]]\) for which \!\(\*StyleBox[\"expr\", \"TI\"]\) evaluates \
to True.\n\!\(\*RowBox[List[\"Examples\", \"[\", \
RowBox[List[StyleBox[\"expr\", \"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\
\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\
\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]]], \"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\
\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) finds at most \
\!\(\*StyleBox[\"n\", \"TI\"]\) examples.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Examples, {ListTricks`Examples[
         BlankSequence[], 0] :> {}, ListTricks`Examples[
         Pattern[ListTricks`Private`expr, 
          Blank[]], 
         Pattern[ListTricks`Private`varspec, 
          RepeatedNull[{
            Blank[], 
            BlankSequence[]}]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Alternatives[
            PatternTest[
             Blank[Integer], Positive], Infinity]], Infinity]] :> 
       Module[{ListTricks`Private`variables = Apply[Join, 
            Take[
             Hold[ListTricks`Private`varspec], All, 1]], 
          ListTricks`Private`count = 0, ListTricks`Private`tag}, 
         ListTricks`Private`ReapExpressions[Do[
            If[
             TrueQ[ListTricks`Private`expr], 
             Sow[ListTricks`Private`variables, ListTricks`Private`tag]; 
             Increment[ListTricks`Private`count]; 
             If[ListTricks`Private`count == ListTricks`Private`n, 
               Break[]]], ListTricks`Private`varspec]; Null, 
          ListTricks`Private`tag]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Examples, {
      SyntaxInformation[ListTricks`Examples] -> {"ArgumentsPattern" -> {
           Blank[], {
            Blank[], 
            Optional[
             Blank[]], 
            Optional[
             Blank[]], 
            Optional[
             Blank[]]}, 
           BlankNullSequence[]}, "LocalVariables" -> {"Table", {2, 
            DirectedInfinity[1]}}}}], "NValues" -> None, "FormatValues" -> 
    None, "Options" -> None, "Attributes" -> {HoldAll, Protected}, "FullName" -> 
    "ListTricks`Examples"], False]]], "Output",ExpressionUUID->"c2004668-54ac-\
40a5-a5bf-3cc064a4bd0b"]
}, Open  ]],

Cell["Find primes:", "Text",ExpressionUUID->"9485baef-392a-4c58-93e3-81f456f89f16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Examples", "[", 
  RowBox[{
   RowBox[{"PrimeQ", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"e40d4379-259b-49bf-8db7-b866b3dd240e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "7", "}"}]}], "}"}]], "Output",ExpressionUUID->"e9da16e3-06e7-\
49ce-8839-ff4b0d672429"]
}, Open  ]],

Cell["Stop when the first example is found:", "Text",ExpressionUUID->"dbd4391e-c4fb-4070-8729-3e403627404d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Examples", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{"Outer", "[", 
      RowBox[{"CoprimeQ", ",", 
       RowBox[{"x", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"y", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}]}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "100"}], "}"}], ",", "1"}], "]"}]], "Input",ExpressionUU\
ID->"db62beda-d60f-40df-b5c3-416981f8e4d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"21", ",", "55"}], "}"}], "}"}]], "Output",ExpressionUUID->\
"2e4d0d15-087b-4254-8223-808f3d55ff1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Counterexamples"}]], "Input",ExpressionUUID->"bb6bb5e0-464a-4a90-8696-9f6c353032e8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Counterexamples\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\
\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]]\\) gives the list of values of \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\) for which \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) does not evaluate to \
True.\\n\\!\\(\\*RowBox[List[\\\"Counterexamples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
counterexamples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Counterexamples", "[", 
                    RowBox[{"__", ",", "0"}], "]"}], ":=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Counterexamples", "[", 
                    RowBox[{"ListTricks`Private`expr_", ",", 
                    RowBox[{"ListTricks`Private`varspec", ":", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "__"}], "}"}], "..."}], ")"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "Positive"}], "|", 
                    "\[Infinity]"}], ":", "\[Infinity]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`variables", "=", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Hold", "[", "ListTricks`Private`varspec", "]"}], 
                    ",", "All", ",", "1"}], "]"}]}]}], ",", 
                    RowBox[{"ListTricks`Private`count", "=", "0"}], ",", 
                    "ListTricks`Private`tag"}], "}"}], ",", 
                    RowBox[{"ListTricks`Private`ReapExpressions", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"TrueQ", "[", "ListTricks`Private`expr", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{
                    "ListTricks`Private`variables", ",", 
                    "ListTricks`Private`tag"}], "]"}], ";", 
                    RowBox[{"ListTricks`Private`count", "++"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`count", "\[Equal]", 
                    "ListTricks`Private`n"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ",", 
                    "ListTricks`Private`varspec"}], "]"}], ";"}], ",", 
                    "ListTricks`Private`tag"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "Counterexamples", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", "_."}], "}"}], 
                    ",", "___"}], "}"}]}], ",", 
                    RowBox[{"\<\"LocalVariables\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Table\"\>", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], "}"}]}]}], 
                    "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Counterexamples] = {
                    "ArgumentsPattern" -> {
                    Blank[], {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}, 
                    BlankNullSequence[]}, "LocalVariables" -> {"Table", {2, 
                    DirectedInfinity[1]}}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Counterexamples\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Counterexamples\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[List[\
\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]]\\) gives the list of values of \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\) for which \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) does not evaluate to \
True.\\n\\!\\(\\*RowBox[List[\\\"Counterexamples\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\
\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) finds at most \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
counterexamples.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Counterexamples\", \"[\", \
RowBox[List[StyleBox[\"expr\", \"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\
\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\
\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]]], \"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\
\"]]], \"]\"]]\) gives the list of values of \!\(\*RowBox[List[\"{\", \
RowBox[List[StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"j\", \"TI\"], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\) for which \
\!\(\*StyleBox[\"expr\", \"TI\"]\) does not evaluate to True.\n\
\!\(\*RowBox[List[\"Counterexamples\", \"[\", RowBox[List[StyleBox[\"expr\", \
\"TI\"], \",\", RowBox[List[\"{\", RowBox[List[StyleBox[\"i\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"}\"]], \",\", RowBox[List[\"{\", RowBox[List[StyleBox[\"j\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) finds at most \!\(\*StyleBox[\"n\", \"TI\"]\) \
counterexamples.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Counterexamples, {ListTricks`Counterexamples[
         BlankSequence[], 0] :> {}, ListTricks`Counterexamples[
         Pattern[ListTricks`Private`expr, 
          Blank[]], 
         Pattern[ListTricks`Private`varspec, 
          RepeatedNull[{
            Blank[], 
            BlankSequence[]}]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Alternatives[
            PatternTest[
             Blank[Integer], Positive], Infinity]], Infinity]] :> 
       Module[{ListTricks`Private`variables = Apply[Join, 
            Take[
             Hold[ListTricks`Private`varspec], All, 1]], 
          ListTricks`Private`count = 0, ListTricks`Private`tag}, 
         ListTricks`Private`ReapExpressions[Do[
            If[
             Not[
              TrueQ[ListTricks`Private`expr]], 
             Sow[ListTricks`Private`variables, ListTricks`Private`tag]; 
             Increment[ListTricks`Private`count]; 
             If[ListTricks`Private`count == ListTricks`Private`n, 
               Break[]]], ListTricks`Private`varspec]; Null, 
          ListTricks`Private`tag]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Counterexamples, {
      SyntaxInformation[ListTricks`Counterexamples] -> {"ArgumentsPattern" -> {
           Blank[], {
            Blank[], 
            Optional[
             Blank[]], 
            Optional[
             Blank[]], 
            Optional[
             Blank[]]}, 
           BlankNullSequence[]}, "LocalVariables" -> {"Table", {2, 
            DirectedInfinity[1]}}}}], "NValues" -> None, "FormatValues" -> 
    None, "Options" -> None, "Attributes" -> {HoldAll, Protected}, "FullName" -> 
    "ListTricks`Counterexamples"], False]]], "Output",ExpressionUUID->\
"2e673cd8-8ba8-4d8d-bbbf-cac1f3f8051f"]
}, Open  ]],

Cell[TextData[{
 "Verify that all integers in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "10"}], 
   TraditionalForm]],ExpressionUUID->"feeb03dd-1f82-4787-8938-b74dee290423"],
 " are positive:"
}], "Text",ExpressionUUID->"90e071cb-4c26-4b96-90be-29f30e56ae13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counterexamples", "[", 
  RowBox[{
   RowBox[{"n", ">", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"7a1cbef6-86c2-45a4-a979-1f2687eaef36"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",ExpressionUUID->"4b4f4b71-c2cf-4056-b6ae-8d6a694e048c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counterexamples", "[", 
  RowBox[{
   RowBox[{"PrimeQ", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"0d786325-5a3f-4049-8f10-13b60b09aa50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", "10", "}"}]}], "}"}]], "Output",ExpressionUUID->"a944cde3-\
558e-4aef-aa2e-82a9f3c53d40"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FirstSortedElement", "Input"]], "Subsubsection",ExpressionUUID->"20a45048-58ee-4bad-8c71-3aeb8b91772c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FirstSortedElement"}]], "Input",ExpressionUUID->"aba40118-c697-4ba7-950c-acb9fdd9a1a2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FirstSortedElement\\\", \\\
\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the first \
element in \\!\\(\\*RowBox[List[\\\"Sort\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\
\"FirstSortedElement\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) \
sorts using the ordering function \\!\\(\\*StyleBox[\\\"p\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FirstSortedElement", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], "]"}], ":=", 
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"First", "[", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{"ListTricks`Private`list", ",", "1"}], "]"}], 
                    "]"}], "\[RightDoubleBracket]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FirstSortedElement", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    "ListTricks`Private`p_"}], "]"}], ":=", 
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"First", "[", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "1", ",", 
                    "ListTricks`Private`p"}], "]"}], "]"}], 
                    "\[RightDoubleBracket]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "FirstSortedElement", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`FirstSortedElement] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`FirstSortedElement\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FirstSortedElement\\\", \\\
\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the first \
element in \\!\\(\\*RowBox[List[\\\"Sort\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\
\"FirstSortedElement\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) \
sorts using the ordering function \\!\\(\\*StyleBox[\\\"p\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"FirstSortedElement\", \"[\", StyleBox[\"expr\", \"TI\
\"], \"]\"]]\) gives the first element in \!\(\*RowBox[List[\"Sort\", \"[\", \
StyleBox[\"expr\", \"TI\"], \"]\"]]\).\n\
\!\(\*RowBox[List[\"FirstSortedElement\", \"[\", \
RowBox[List[StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"p\", \"TI\"]]], \"]\
\"]]\) sorts using the ordering function \!\(\*StyleBox[\"p\", \"TI\"]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`FirstSortedElement, {ListTricks`FirstSortedElement[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]]] :> Part[ListTricks`Private`list, 
         First[
          Ordering[ListTricks`Private`list, 1]]], 
       ListTricks`FirstSortedElement[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]]] :> Part[ListTricks`Private`list, 
         First[
          Ordering[ListTricks`Private`list, 1, ListTricks`Private`p]]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`FirstSortedElement, {
      SyntaxInformation[ListTricks`FirstSortedElement] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`FirstSortedElement"], False]]], "Output",ExpressionUUID->\
"9489e603-ef2d-42e8-b477-82b8c6c15e57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"letters", "=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"Alphabet", "[", "]"}], ",", "10"}], "]"}]}]], "Input",ExpressionU\
UID->"aa2716e9-064d-4d9d-a336-011d5fb6b3d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"q\"\>", ",", "\<\"v\"\>", ",", "\<\"m\"\>", ",", "\<\"c\"\>", 
   ",", "\<\"x\"\>", ",", "\<\"k\"\>", ",", "\<\"k\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"k\"\>", ",", "\<\"y\"\>"}], "}"}]], "Output",ExpressionUUID->\
"7e6074bd-cbd5-4f87-946c-dc6fd2373919"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstSortedElement", "[", "letters", "]"}]], "Input",ExpressionUUID->"56f57490-5689-41b3-b6bf-09fcb5b7ea65"],

Cell[BoxData["\<\"c\"\>"], "Output",ExpressionUUID->"d90aa707-8967-4f09-8881-ff09da8a9e30"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "letters", "]"}]], "Input",ExpressionUUID->"7459b746-ae54-4b55-9926-3b8f9cd3a69c"],

Cell[TextData[{
 StyleBox["FirstSortedElement", "Input"],
 " does not sort the entire list, so it is faster than using ",
 StyleBox["First[Sort[ ]]", "Input"],
 ":"
}], "Text",ExpressionUUID->"5fa1bb35-cda4-472a-a9f8-4bba19274358"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     SuperscriptBox["10", "10"], ",", "10000"}], "]"}]}], ";"}]], "Input",Expr\
essionUUID->"db3db579-7302-4044-91b8-73b612ebfe45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"Sort", "[", "list", "]"}], "]"}], ",", 
    RowBox[{"{", "1000", "}"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"7081dc53-eea3-4d1a-b4ef-324117d8441f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.779362`", ",", "Null"}], "}"}]], "Output",ExpressionUUID->\
"c0ac46e0-ae34-40f4-8c02-c078be9938e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"FirstSortedElement", "[", "list", "]"}], ",", 
    RowBox[{"{", "1000", "}"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"2abb6bc2-167f-47d3-86f6-81727e315199"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.041199`", ",", "Null"}], "}"}]], "Output",ExpressionUUID->\
"b6aa58a0-d632-4d8d-94b5-6ed2e108dbdd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "list", "]"}]], "Input",ExpressionUUID->"4e58f7a3-d656-4534-9a8a-095add1ab8c8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FirstSortedRotation", "Input"]], "Subsubsection",ExpressionUUID->"5ff0b908-6bdc-4f20-b90c-3ab67228612a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FirstSortedRotation"}]], "Input",ExpressionUUID->"223d981d-0986-4cd4-83f5-6ccf5a9bf1c3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FirstSortedRotation\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
rotation of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) that appears first \
in canonical order.\\n\\!\\(\\*RowBox[List[\\\"FirstSortedRotation\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) uses the ordering function \
\\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FirstSortedRotation", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "]"}]}], "]"}], ":=", 
                    "ListTricks`Private`list"}]},
                    {
                    RowBox[{
                    RowBox[{"FirstSortedRotation", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], "]"}], ":=", 
                    RowBox[{"FirstSortedElement", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    "FirstSortedElement", "[", "ListTricks`Private`list", 
                    "]"}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FirstSortedRotation", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    "ListTricks`Private`p_"}], "]"}], ":=", 
                    RowBox[{"FirstSortedElement", "[", 
                    RowBox[{
                    RowBox[{"NestList", "[", 
                    RowBox[{"RotateLeft", ",", "ListTricks`Private`list", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}], 
                    "-", "1"}]}], "]"}]}], "]"}], ",", 
                    "ListTricks`Private`p"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "FirstSortedRotation", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`FirstSortedRotation] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`FirstSortedRotation\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FirstSortedRotation\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
rotation of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) that appears first \
in canonical order.\\n\\!\\(\\*RowBox[List[\\\"FirstSortedRotation\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) uses the ordering function \
\\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"FirstSortedRotation\", \"[\", StyleBox[\"list\", \
\"TI\"], \"]\"]]\) gives the rotation of \!\(\*StyleBox[\"list\", \"TI\"]\) \
that appears first in canonical order.\n\
\!\(\*RowBox[List[\"FirstSortedRotation\", \"[\", RowBox[List[StyleBox[\"list\
\", \"TI\"], \",\", StyleBox[\"p\", \"TI\"]]], \"]\"]]\) uses the ordering \
function \!\(\*StyleBox[\"p\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`FirstSortedRotation, {
      ListTricks`FirstSortedRotation[
         Pattern[ListTricks`Private`list, 
          Blank[][]]] :> ListTricks`Private`list, 
       ListTricks`FirstSortedRotation[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]]] :> ListTricks`FirstSortedElement[
         Map[RotateLeft[ListTricks`Private`list, Part[#, 1] - 1]& , 
          Position[ListTricks`Private`list, 
           ListTricks`FirstSortedElement[ListTricks`Private`list], {1}, Heads -> 
           False]]], ListTricks`FirstSortedRotation[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]]] :> ListTricks`FirstSortedElement[
         NestList[RotateLeft, ListTricks`Private`list, 
          Max[0, Length[ListTricks`Private`list] - 1]], 
         ListTricks`Private`p]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`FirstSortedRotation, {
      SyntaxInformation[ListTricks`FirstSortedRotation] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`FirstSortedRotation"], False]]], "Output",ExpressionUUID->\
"11035dae-ad18-4690-9391-197f4f6b09de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstSortedRotation", "[", 
  RowBox[{"{", 
   RowBox[{"g", ",", "b", ",", "d", ",", "f", ",", "a", ",", "c", ",", "e"}], 
   "}"}], "]"}]], "Input",ExpressionUUID->"c59cf6f4-e196-482f-b9ad-\
8898aaec1348"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "c", ",", "e", ",", "g", ",", "b", ",", "d", ",", "f"}], 
  "}"}]], "Output",ExpressionUUID->"8588e353-245e-4885-b100-e641083bf91d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"1", ",", "100"}], "]"}]], "Input",ExpressionUUID->"7623bab7-2447-\
47e9-9d1a-84b931559554"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "0"}], "}"}]], "Output",ExpressionUUID->"edac68ba-a98b-4e5d-\
bc1a-597740058816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstSortedRotation", "[", "%", "]"}]], "Input",ExpressionUUID->"45ec664e-9e2c-466b-99c2-4341eab07f96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "1"}], "}"}]], "Output",ExpressionUUID->"717dbac5-4ab4-41b3-\
956e-e929941cb479"]
}, Open  ]],

Cell[TextData[{
 StyleBox["FirstSortedRotation", "Input"],
 " effectively gives the orbit representative of a list under ",
 StyleBox["RotateRight", "Input"],
 ":"
}], "Text",ExpressionUUID->"1c1e9990-3731-48ae-b055-484e3b89deb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstSortedRotation", "[", 
  RowBox[{"{", 
   RowBox[{"g", ",", "b", ",", "d", ",", "f", ",", "a", ",", "c", ",", "e"}], 
   "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", 
  RowBox[{"OrbitRepresentatives", "[", 
   RowBox[{"RotateRight", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "g", ",", "b", ",", "d", ",", "f", ",", "a", ",", "c", ",", "e"}], 
      "}"}], "}"}]}], "]"}], "]"}]}], "Input",ExpressionUUID->"d60e32fb-e9dc-\
4dbf-8ed6-30070561ca3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "c", ",", "e", ",", "g", ",", "b", ",", "d", ",", "f"}], 
  "}"}]], "Output",ExpressionUUID->"515e4a11-aa59-4419-9fb4-2f4fce29dd3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "c", ",", "e", ",", "g", ",", "b", ",", "d", ",", "f"}], 
  "}"}]], "Output",ExpressionUUID->"0604c296-bc50-4d45-b649-77d5ba3297d1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["FixedPointPeriod", "Input"]], "Subsubsection",ExpressionUUID->"57b0b35e-1bc5-499d-8696-157b031516a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FixedPointPeriod"}]], "Input",ExpressionUUID->"9ae05083-54d7-4f3b-9975-a3c4c7272612"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FixedPointPeriod\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the eventual \
period obtained by applying \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) \
repeatedly to \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"FixedPointPeriod\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) stops after at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) steps.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FixedPointPeriod", "[", 
                    RowBox[{
                    "ListTricks`Private`f_", ",", "ListTricks`Private`expr_", 
                    ",", 
                    RowBox[{"ListTricks`Private`n_", ":", "\[Infinity]"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "=", 
                    RowBox[{"{", "ListTricks`Private`expr", "}"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`val", "=", 
                    "ListTricks`Private`expr"}], ",", 
                    RowBox[{"ListTricks`Private`i", "=", "0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`val", "=", 
                    RowBox[{
                    "ListTricks`Private`f", "[", "ListTricks`Private`val", 
                    "]"}]}]}], "]"}]}], "&&", 
                    RowBox[{
                    "ListTricks`Private`i", "\[LessEqual]", 
                    "ListTricks`Private`n"}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`val"}], "]"}], ";", 
                    RowBox[{"ListTricks`Private`i", "++"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`i", "\[LessEqual]", 
                    "ListTricks`Private`n"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`val"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "FixedPointPeriod", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    ColumnForm[{
                    SyntaxInformation[ListTricks`FixedPointPeriod] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`FixedPointPeriod\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"FixedPointPeriod\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the eventual \
period obtained by applying \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) \
repeatedly to \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"FixedPointPeriod\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) stops after at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) steps.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"FixedPointPeriod\", \"[\", \
RowBox[List[StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"expr\", \"TI\"]]], \"]\
\"]]\) gives the eventual period obtained by applying \!\(\*StyleBox[\"f\", \
\"TI\"]\) repeatedly to \!\(\*StyleBox[\"expr\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"FixedPointPeriod\", \"[\", RowBox[List[StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \
\"]\"]]\) stops after at most \!\(\*StyleBox[\"n\", \"TI\"]\) steps.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`FixedPointPeriod, {ListTricks`FixedPointPeriod[
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Pattern[ListTricks`Private`expr, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Blank[]], 
          DirectedInfinity[1]]] :> 
       Module[{ListTricks`Private`list = {ListTricks`Private`expr}, 
          ListTricks`Private`val = ListTricks`Private`expr, 
          ListTricks`Private`i = 0}, While[
           And[
            Not[
             MemberQ[
             ListTricks`Private`list, ListTricks`Private`val = 
              ListTricks`Private`f[ListTricks`Private`val]]], 
            ListTricks`Private`i <= ListTricks`Private`n], 
           AppendTo[ListTricks`Private`list, ListTricks`Private`val]; 
           Increment[ListTricks`Private`i]]; 
         If[ListTricks`Private`i <= ListTricks`Private`n, 
           Take[ListTricks`Private`list, {
             ListTricks`Occurrence[
             ListTricks`Private`list, ListTricks`Private`val], -1}], {}]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`FixedPointPeriod, {
      SyntaxInformation[ListTricks`FixedPointPeriod] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`FixedPointPeriod"], False]]], "Output",ExpressionUUID->\
"d55fb113-1153-4052-b82c-1d33dadb2b38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointPeriod", "[", 
  RowBox[{"Reverse", ",", 
   RowBox[{"Range", "[", "5", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"73700b4b-bdf0-4bbd-bb07-65498a6ae959"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"e2853606-13bb-45f4-8877-fa98747a22a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointPeriod", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "#"}], "&"}], ",", "1"}], "]"}]], "Input",Ex\
pressionUUID->"6e8a2675-12b8-4f38-83ac-fcf8ce9c6786"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\[ImaginaryI]", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]], "Output",ExpressionUUID->\
"b2de9560-d3ac-4332-9dbc-6612db96a5f9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData["IndentedExport"], "Input",
 CellChangeTimes->{{3.574601278556015*^9, 
  3.5746012788095903`*^9}},ExpressionUUID->"e30c5351-879a-4d1a-aba5-\
481a4c369646"]], "Subsubsection",ExpressionUUID->"a9b031e1-ac4b-4e9f-9251-\
f17bc6516abb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IndentedExport"}]], "Input",ExpressionUUID->"697bdad6-49ff-4bb4-8c00-c82b706e46bc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"IndentedExport\\\", \
\\\"[\\\", \
RowBox[List[StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file.ext\\\\\
\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\
\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) exports data to a \
text file, with indentation reflecting list structure.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"IndentedExport", "[", 
                    RowBox[{
                    "ListTricks`Private`filename_String", ",", 
                    "ListTricks`Private`data_"}], "]"}], ":=", 
                    RowBox[{"Export", "[", 
                    RowBox[{"ListTricks`Private`filename", ",", 
                    RowBox[{
                    "ListTricks`Private`ToIndentedString", "[", 
                    "ListTricks`Private`data", "]"}], ",", "\<\"Text\"\>"}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "IndentedExport", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`IndentedExport] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`IndentedExport\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"IndentedExport\\\", \
\\\"[\\\", \
RowBox[List[StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file.ext\\\\\
\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\
\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) exports data to a \
text file, with indentation reflecting list structure.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"IndentedExport\", \"[\", RowBox[List[StyleBox[\"\\\"\
\\!\\(\\*StyleBox[\\\"file.ext\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"expr\", \"TI\"]]], \"]\"]]\) \
exports data to a text file, with indentation reflecting list structure.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`IndentedExport, {ListTricks`IndentedExport[
         Pattern[ListTricks`Private`filename, 
          Blank[String]], 
         Pattern[ListTricks`Private`data, 
          Blank[]]] :> Export[ListTricks`Private`filename, 
         ListTricks`Private`ToIndentedString[ListTricks`Private`data], 
         "Text"]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`IndentedExport, {
      SyntaxInformation[ListTricks`IndentedExport] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`IndentedExport"], False]]], "Output",ExpressionUUID->\
"b7a824c8-9de7-479f-a838-42712f1f5e9a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["IndentedExport", "Input"],
 " is particularly useful for formatting lists of rules."
}], "Text",ExpressionUUID->"ce8c709a-46eb-4e74-b1e0-4ba95919e866"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"j", "\[Rule]", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "5"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"b2f021bf-f1e5-4fde-aac0-456efee2cbfe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "7"}], ",", 
      RowBox[{"2", "\[Rule]", "10"}]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0"}], ",", 
      RowBox[{"2", "\[Rule]", "6"}]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "7"}], ",", 
      RowBox[{"2", "\[Rule]", "9"}]}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0"}], ",", 
      RowBox[{"2", "\[Rule]", "6"}]}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "2"}], ",", 
      RowBox[{"2", "\[Rule]", "7"}]}], "}"}]}]}], "}"}]], "Output",ExpressionU\
UID->"6d3d9b80-253d-4eaa-8dcf-95492854df28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{"IndentedExport", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$TemporaryDirectory", ",", "\"\<rules.m\>\""}], "}"}], "]"}], 
    ",", "%"}], "]"}]}]], "Input",ExpressionUUID->"d0c5fa4c-71fd-4eb1-a444-\
c5e1920f2ad0"],

Cell[BoxData["\<\"/private/var/folders/rg/nzsdfnsx4gg5nlwm0dfg382m0000gn/T/\
rules.m\"\>"], "Output",ExpressionUUID->"969d929e-f949-4b9a-acbd-\
46842e140f38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", "\"\<Text\>\""}], "]"}]], "Input",ExpressionUUID->\
"00e9aa61-8a19-44b2-8ac3-2a5351d2479e"],

Cell[BoxData["\<\"{\\n\\t1 -> {\\n\\t\\t1 -> 7,\\n\\t\\t2 -> \
10\\n\\t},\\n\\t2 -> {\\n\\t\\t1 -> 0,\\n\\t\\t2 -> 6\\n\\t},\\n\\t3 -> \
{\\n\\t\\t1 -> 7,\\n\\t\\t2 -> 9\\n\\t},\\n\\t4 -> {\\n\\t\\t1 -> \
0,\\n\\t\\t2 -> 6\\n\\t},\\n\\t5 -> {\\n\\t\\t1 -> 2,\\n\\t\\t2 -> \
7\\n\\t}\\n}\"\>"], "Output",ExpressionUUID->"5a21a322-560b-4ef8-97ca-\
7e27b07de196"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteFile", "[", "file", "]"}]], "Input",ExpressionUUID->"11c6406b-0fa9-4986-8dab-b76aee66554c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "file", "]"}]], "Input",ExpressionUUID->"c8f3fd64-9287-421f-a2f3-900f2b414297"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["InExpression", "Input"],
 StyleBox[" (a variant of ", "Text",
  FontWeight->"Plain"],
 StyleBox["InString", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"e77d03de-e3aa-4294-8666-8239d93806b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InExpression"}]], "Input",ExpressionUUID->"eb1b29c9-1d09-43b8-a1a4-bac5b25561b8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"InExpression\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
expression submitted as the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th \
input line, wrapped in HoldComplete.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"InExpression", "[", "]"}], ":=", 
                    RowBox[{"InExpression", "[", 
                    RowBox[{"$Line", "-", "1"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"InExpression", "[", 
                    RowBox[{"ListTricks`Private`n_Integer", "/;", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`n", "\[NotEqual]", "0"}], "&&", 
                    RowBox[{
                    "ListTricks`Private`n", "\[LessEqual]", "$Line"}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"MakeExpression", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"InString", "[", "ListTricks`Private`n", "]"}], 
                    "]"}], ",", "StandardForm"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "InExpression", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_.", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`InExpression] = {
                    "ArgumentsPattern" -> {
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`InExpression\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"InExpression\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
expression submitted as the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th \
input line, wrapped in HoldComplete.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"InExpression\", \"[\", StyleBox[\"n\", \"TI\"], \
\"]\"]]\) gives the expression submitted as the \!\(\*StyleBox[\"n\", \"TI\"]\
\)th input line, wrapped in HoldComplete.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`InExpression, {
      ListTricks`InExpression[] :> ListTricks`InExpression[$Line - 1], 
       ListTricks`InExpression[
         Condition[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], 
          And[ListTricks`Private`n != 0, ListTricks`Private`n <= $Line]]] :> 
       MakeExpression[
         ToExpression[
          InString[ListTricks`Private`n]], StandardForm]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`InExpression, {
      SyntaxInformation[ListTricks`InExpression] -> {"ArgumentsPattern" -> {
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`InExpression"], False]]], "Output",ExpressionUUID->"f6c2b785-\
1c02-4ac4-814e-6fa7d7b20467"]
}, Open  ]],

Cell["Grab the last input expression:", "Text",ExpressionUUID->"765ab859-142b-45a8-b6d6-1754d138c15e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",ExpressionUUID->"8b7ecded-c9e6-4a9f-8738-1b52b2394295"],

Cell[BoxData["4"], "Output",ExpressionUUID->"446c2662-d885-4e06-b2c3-8e443a8ffc0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InExpression", "[", "]"}]], "Input",ExpressionUUID->"2bb276a3-7779-4887-b3c2-ecfb4620e9c5"],

Cell[BoxData[
 RowBox[{"HoldComplete", "[", 
  RowBox[{"2", "+", "2"}], "]"}]], "Output",ExpressionUUID->"e54b81f8-5d6d-\
47c4-a17d-eb25580ef522"]
}, Open  ]],

Cell[TextData[{
 StyleBox["InString", "Input"],
 " can also be used, but the result is a string and requires slightly more \
work to evaluate:"
}], "Text",ExpressionUUID->"d17f359f-4413-4485-a3e9-50b286a5d86a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"InString", "[", 
  RowBox[{"-", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MakeExpression", "@@", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"%", ",", "InputForm", ",", "Hold"}], "]"}]}]}], "Input",Expression\
UUID->"6b13b5e6-4e0a-4b00-ad39-528c91e5e7db"],

Cell[BoxData["\<\"RowBox[{\\\"2\\\", \\\"+\\\", \\\"2\\\"}]\"\>"], "Output",ExpressionUUID->"6a691f5b-d7b7-44f2-8fdd-5de0c110a03c"],

Cell[BoxData[
 RowBox[{"HoldComplete", "[", 
  RowBox[{"2", "+", "2"}], "]"}]], "Output",ExpressionUUID->"68509a8a-e567-\
4efa-bdfc-e79e100f9e76"]
}, Open  ]],

Cell["Here is a more complex expression:", "Text",ExpressionUUID->"9eab1cc6-dff0-4fbc-9db6-8746a39c5da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["a", 
   RowBox[{"n", "+", "1"}]], "+", 
  SuperscriptBox["a", 
   RowBox[{"n", "+", "2"}]], "+", 
  SubscriptBox["a", 
   RowBox[{"n", "+", "3"}]], "+", 
  UnderscriptBox["a", 
   RowBox[{"n", "+", "4"}]]}]], "Input",ExpressionUUID->"0e18123c-3d84-430d-\
aed7-6e88e34bb487"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", 
   RowBox[{"2", "+", "n"}]], "+", 
  OverscriptBox["a", 
   RowBox[{"1", "+", "n"}]], "+", 
  SubscriptBox["a", 
   RowBox[{"3", "+", "n"}]], "+", 
  UnderscriptBox["a", 
   RowBox[{"4", "+", "n"}]]}]], "Output",ExpressionUUID->"336716f6-f3be-4663-\
afc7-795bec6517a8"]
}, Open  ]],

Cell[TextData[{
 "The output of ",
 StyleBox["InString", "Input"],
 " is more difficult to read than the output of ",
 StyleBox["InExpression", "Input"],
 ":"
}], "Text",ExpressionUUID->"d5a7719c-391d-4939-bd88-54f1cbbe5282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InString", "[", "]"}]], "Input",ExpressionUUID->"74d3cc4b-69dd-49d1-ada0-aca8dfbe5650"],

Cell[BoxData["\<\"RowBox[{OverscriptBox[\\\"a\\\", RowBox[{\\\"n\\\", \\\"+\\\
\", \\\"1\\\"}]], \\\"+\\\", SuperscriptBox[\\\"a\\\", RowBox[{\\\"n\\\", \
\\\"+\\\", \\\"2\\\"}]], \\\"+\\\", SubscriptBox[\\\"a\\\", \
RowBox[{\\\"n\\\", \\\"+\\\", \\\"3\\\"}]], \\\"+\\\", UnderscriptBox[\\\"a\\\
\", RowBox[{\\\"n\\\", \\\"+\\\", \\\"4\\\"}]]}]\"\>"], "Output",ExpressionUUI\
D->"fa7815c3-df37-4a6c-b43d-0dcac3c6934f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InExpression", "[", 
  RowBox[{"-", "2"}], "]"}]], "Input",ExpressionUUID->"d353d7d9-585c-4cce-\
a37d-7b6427da1531"],

Cell[BoxData[
 RowBox[{"HoldComplete", "[", 
  RowBox[{
   OverscriptBox["a", 
    RowBox[{"n", "+", "1"}]], "+", 
   SuperscriptBox["a", 
    RowBox[{"n", "+", "2"}]], "+", 
   SubscriptBox["a", 
    RowBox[{"n", "+", "3"}]], "+", 
   UnderscriptBox["a", 
    RowBox[{"n", "+", "4"}]]}], "]"}]], "Output",ExpressionUUID->"50ee0779-\
f50b-40f4-94cc-1e2b95f55546"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["IntegerCompositions", "Input"]], "Subsubsection",ExpressionUUID->"717a04a8-fabc-49db-aa18-11cb3b31898f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IntegerCompositions"}]], "Input",ExpressionUUID->"eab58ac3-1106-4b3d-9968-71ae41a1e19e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"IntegerCompositions\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives a list of \
all ways to partition \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) into an \
ordered sum of positive \
integers.\\n\\!\\(\\*RowBox[List[\\\"IntegerCompositions\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives compositions into at most \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers.\\n\\!\\(\\*RowBox[List[\
\\\"IntegerCompositions\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives compositions into exactly \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"IntegerCompositions", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`n_Integer", "?", "NonNegative"}], ",", 
                    RowBox[{"ListTricks`Private`kspec", ":", 
                    RowBox[{"All", "|", 
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    "\[Infinity]", "|", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", "?", "NonNegative"}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], ",", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    "\[Infinity]"}]}], "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], ",", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"_Integer", "?", "NonNegative"}]}], "}"}]}], ":", 
                    "All"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`partitions", "=", 
                    RowBox[{"IntegerPartitions", "[", 
                    RowBox[{
                    "ListTricks`Private`n", ",", "ListTricks`Private`kspec"}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{
                    RowBox[{"Join", "@@", 
                    RowBox[{
                    "Permutations", "/@", "ListTricks`Private`partitions"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"Positive", "[", 
                    RowBox[{"FirstCase", "[", 
                    RowBox[{
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{"{", "##1", "}"}], "]"}]}], ",", 
                    RowBox[{"Except", "[", "0", "]"}]}], "]"}], "]"}], 
                    "&"}]}], "]"}], "/;", 
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    "ListTricks`Private`partitions", ",", 
                    "_IntegerPartitions"}], "]"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "IntegerCompositions", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`IntegerCompositions] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`IntegerCompositions\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"IntegerCompositions\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives a list of \
all ways to partition \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) into an \
ordered sum of positive \
integers.\\n\\!\\(\\*RowBox[List[\\\"IntegerCompositions\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives compositions into at most \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers.\\n\\!\\(\\*RowBox[List[\
\\\"IntegerCompositions\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[List[\\\"{\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives compositions into exactly \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) integers.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"IntegerCompositions\", \"[\", StyleBox[\"n\", \
\"TI\"], \"]\"]]\) gives a list of all ways to partition \
\!\(\*StyleBox[\"n\", \"TI\"]\) into an ordered sum of positive integers.\n\!\
\(\*RowBox[List[\"IntegerCompositions\", \"[\", RowBox[List[StyleBox[\"n\", \
\"TI\"], \",\", StyleBox[\"k\", \"TI\"]]], \"]\"]]\) gives compositions into \
at most \!\(\*StyleBox[\"k\", \"TI\"]\) integers.\n\
\!\(\*RowBox[List[\"IntegerCompositions\", \"[\", RowBox[List[StyleBox[\"n\", \
\"TI\"], \",\", RowBox[List[\"{\", StyleBox[\"k\", \"TI\"], \"}\"]]]], \
\"]\"]]\) gives compositions into exactly \!\(\*StyleBox[\"k\", \"TI\"]\) \
integers.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`IntegerCompositions, {
      ListTricks`IntegerCompositions[
         PatternTest[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], NonNegative], 
         Optional[
          Pattern[ListTricks`Private`kspec, 
           Alternatives[All, 
            PatternTest[
             Blank[Integer], NonNegative], 
            DirectedInfinity[1], {
             PatternTest[
              Blank[Integer], NonNegative]}, {
             PatternTest[
              Blank[Integer], NonNegative], 
             Alternatives[
              PatternTest[
               Blank[Integer], NonNegative], 
              DirectedInfinity[1]]}, {
             PatternTest[
              Blank[Integer], NonNegative], 
             Alternatives[
              PatternTest[
               Blank[Integer], NonNegative], 
              DirectedInfinity[1]], 
             PatternTest[
              Blank[Integer], NonNegative]}]], All]] :> 
       With[{ListTricks`Private`partitions = 
          IntegerPartitions[ListTricks`Private`n, ListTricks`Private`kspec]}, 
         Condition[
          Sort[
           Apply[Join, 
            Map[Permutations, ListTricks`Private`partitions]], Positive[
            FirstCase[
             Apply[Subtract, 
              PadRight[{
                SlotSequence[1]}]], 
             Except[0]]]& ], 
          Not[
           MatchQ[ListTricks`Private`partitions, 
            Blank[IntegerPartitions]]]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`IntegerCompositions, {
      SyntaxInformation[ListTricks`IntegerCompositions] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`IntegerCompositions"], False]]], "Output",ExpressionUUID->\
"6522745c-ae99-4099-a54f-65accba167e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerCompositions", "[", "5", "]"}]], "Input",ExpressionUUID->"9ce4de2d-66c4-482f-b2d7-7b93b004e3f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"b4e05aa3-4c09-4cc6-a81e-207ab19e7631"]
}, Open  ]],

Cell[TextData[{
 StyleBox["IntegerPartitions", "Input"],
 " gives the (reverse) sorted integer compositions:"
}], "Text",ExpressionUUID->"44a52710-fd7c-439b-a424-7e5ca555be62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"IntegerPartitions", "[", "5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "\[Equal]", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"ReverseSort", "/@", 
    RowBox[{"IntegerCompositions", "[", "5", "]"}]}], "]"}]}]}], "Input",Expre\
ssionUUID->"38d8e361-9e4b-4a71-8d8b-8ba28a6508f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"b0753ad7-3317-4242-ad9a-7183c5f68bb8"],

Cell[BoxData["True"], "Output",ExpressionUUID->"7ac48274-e33c-4833-a9a8-b3f954eb8991"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MapAcross", "Input"]], "Subsubsection",ExpressionUUID->"fe178ebf-da31-43c0-a5c8-0a099e4aeaab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MapAcross"}]], "Input",ExpressionUUID->"4729bab2-4b94-49dc-83fb-f0a6275c54cc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MapAcross\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\
\\\", RowBox[List[RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"MapAcross", "[", 
                    RowBox[{
                    "ListTricks`Private`functions_List", ",", 
                    "ListTricks`Private`arguments_List"}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    "Length", "[", "ListTricks`Private`functions", "]"}], 
                    "\[Equal]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`arguments", "]"}]}]}], 
                    ":=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", "#2", "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`functions", ",", 
                    "ListTricks`Private`arguments"}], "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "MapAcross", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MapAcross] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MapAcross\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MapAcross\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\
\\\", RowBox[List[RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\"[\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"]\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MapAcross\", \"[\", RowBox[List[RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]]], \"]\"]]\) gives \
\!\(\*RowBox[List[\"{\", RowBox[List[RowBox[List[SubscriptBox[StyleBox[\"f\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"[\", SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"]\"]], \",\", \
RowBox[List[SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"[\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\"]\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MapAcross, {Condition[
         ListTricks`MapAcross[
          Pattern[ListTricks`Private`functions, 
           Blank[List]], 
          Pattern[ListTricks`Private`arguments, 
           Blank[List]]], Length[ListTricks`Private`functions] == 
         Length[ListTricks`Private`arguments]] :> 
       MapThread[#[#2]& , {
         ListTricks`Private`functions, ListTricks`Private`arguments}]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MapAcross, {
      SyntaxInformation[ListTricks`MapAcross] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`MapAcross"], 
   False]]], "Output",ExpressionUUID->"91cb96f3-0c6d-426c-b212-afa2f2e998a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAcross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", ",", "g", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"ca2151d3-69f8-4300-8c53-640f359cb1ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"g", "[", "b", "]"}], ",", 
   RowBox[{"h", "[", "c", "]"}]}], "}"}]], "Output",ExpressionUUID->"cb9b535f-\
6491-432b-8f2e-20d1642c50c7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MapList", "Input"]], "Subsubsection",ExpressionUUID->"4f444c0a-820e-493d-bc63-43ef66d52435"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MapList"}]], "Input",ExpressionUUID->"87b24e11-2e62-46cb-80e5-31ccc8c28ce4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MapList\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to each element of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) independently, returning a \
list of lists which differ from \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) in only one position each.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MapList", "[", 
                    RowBox[{"ListTricks`Private`f_", ",", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"MapAt", "[", 
                    RowBox[{
                    "ListTricks`Private`f", ",", "ListTricks`Private`list", 
                    ",", "ListTricks`Private`i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`i", ",", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "MapList", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MapList] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MapList\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MapList\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to each element of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) independently, returning a \
list of lists which differ from \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) in only one position each.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MapList\", \"[\", RowBox[List[StyleBox[\"f\", \
\"TI\"], \",\", StyleBox[\"list\", \"TI\"]]], \"]\"]]\) applies \
\!\(\*StyleBox[\"f\", \"TI\"]\) to each element of \!\(\*StyleBox[\"list\", \
\"TI\"]\) independently, returning a list of lists which differ from \
\!\(\*StyleBox[\"list\", \"TI\"]\) in only one position each.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MapList, {ListTricks`MapList[
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]]] :> Table[
         MapAt[
         ListTricks`Private`f, ListTricks`Private`list, 
          ListTricks`Private`i], {ListTricks`Private`i, 
          Length[ListTricks`Private`list]}]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MapList, {
      SyntaxInformation[ListTricks`MapList] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`MapList"], 
   False]]], "Output",ExpressionUUID->"ce5e3323-f557-4983-8c60-d9bfc98c88f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", "1"}], "&"}], ",", 
   RowBox[{"Range", "[", "4", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"340353ee-a807-4f05-8e27-37d3f15ad16c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"b3959b68-f2b8-4cc6-83e5-268dc57ec04e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Append", "[", 
     RowBox[{"#1", ",", "0"}], "]"}], "&"}], ",", 
   RowBox[{"List", "/@", 
    RowBox[{"Range", "[", "4", "]"}]}]}], "]"}]], "Input",ExpressionUUID->\
"034b047c-4e1e-4187-a0bd-57b90e1ed093"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",ExpressionUU\
ID->"4d5fc00d-8ed3-49e3-9925-75693c8ed8eb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MatchLength", "Input"]], "Subsubsection",ExpressionUUID->"dc9e3f4b-8fe6-4d0f-9f20-a333c2029666"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MatchLength"}]], "Input",ExpressionUUID->"bfe9b679-b93d-4f3e-b3f0-d37a887bfa7e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MatchLength\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the number of \
consecutive elements at the beginning of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) that match \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MatchLength", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`pattern_"}], "]"}], ":=", 
                    RowBox[{"LengthWhile", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    "MatchQ", "[", "ListTricks`Private`pattern", "]"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "MatchLength", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MatchLength] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MatchLength\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MatchLength\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the number of \
consecutive elements at the beginning of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) that match \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MatchLength\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) gives the number \
of consecutive elements at the beginning of \!\(\*StyleBox[\"list\", \
\"TI\"]\) that match \!\(\*StyleBox[\"pattern\", \"TI\"]\).", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MatchLength, {ListTricks`MatchLength[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]]] :> LengthWhile[ListTricks`Private`list, 
         MatchQ[ListTricks`Private`pattern]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MatchLength, {
      SyntaxInformation[ListTricks`MatchLength] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`MatchLength"], False]]], "Output",ExpressionUUID->"0ca6f4b4-\
8191-4877-a249-ffaa26df1cd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchLength", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "a", ",", "b"}], "}"}], ",", "_Integer"}], 
  "]"}]], "Input",ExpressionUUID->"9b6fe5dc-cb8f-4e19-a0cb-62c9568e2bd7"],

Cell[BoxData["2"], "Output",ExpressionUUID->"92b6ac94-2c64-46b2-97c8-b537891eb9b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MulticolumnArrayPlot", "Input"]], "Subsubsection",ExpressionUUID->"01a88e66-9a42-4fe2-8ed6-1c0da7a73554"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MulticolumnArrayPlot"}]], "Input",ExpressionUUID->"d7ed723f-8c23-4ecc-b881-cb7d2ac67d08"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MulticolumnArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a plot of the \
values in an array after wrapping into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) \
super\[Hyphen]columns.\\n\\!\\(\\*RowBox[List[\\\"MulticolumnArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves \\!\\(\\*StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]\\) white cells between successive super\[Hyphen]columns.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MulticolumnArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array", ":", 
                    RowBox[{"{", "__List", "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}], ",", 
                    RowBox[{"ListTricks`Private`spacing", ":", 
                    RowBox[{"_", "?", "NonNegative"}], ":", "10"}], ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`partition", "}"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`partition", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "#1"}], "]"}]}], "}"}]}], "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"Partition", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox[
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    "ListTricks`Private`n"], "]"}], ",", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox[
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    "ListTricks`Private`n"], "]"}], ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "}"}], "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"ArrayFlatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{"ListTricks`Private`partition", ",", 
                    RowBox[{"{", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "First", "[", "ListTricks`Private`partition", "]"}], 
                    "]"}], ",", "ListTricks`Private`spacing"}], "}"}]}], 
                    "]"}], "}"}]}], "]"}], "}"}], "]"}], ",", 
                    "ListTricks`Private`options"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "MulticolumnArrayPlot", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MulticolumnArrayPlot] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorRules", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"DataReversed", "\[Rule]", "False"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "False"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "GoldenRatio"}], "]"}]}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MissingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PixelConstrained", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","52","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","52","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MulticolumnArrayPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MulticolumnArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a plot of the \
values in an array after wrapping into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) \
super\[Hyphen]columns.\\n\\!\\(\\*RowBox[List[\\\"MulticolumnArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves \\!\\(\\*StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]\\) white cells between successive super\[Hyphen]columns.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MulticolumnArrayPlot\", \"[\", RowBox[List[StyleBox[\
\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) generates a \
plot of the values in an array after wrapping into at most \!\(\*StyleBox[\"n\
\", \"TI\"]\) super\[Hyphen]columns.\n\
\!\(\*RowBox[List[\"MulticolumnArrayPlot\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"spacing\", \"TI\"]]], \"]\"]]\) leaves \
\!\(\*StyleBox[\"spacing\", \"TI\"]\) white cells between successive super\
\[Hyphen]columns.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MulticolumnArrayPlot, {
      ListTricks`MulticolumnArrayPlot[
         Pattern[ListTricks`Private`array, {
           BlankSequence[List]}], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 2], 
         Optional[
          Pattern[ListTricks`Private`spacing, 
           PatternTest[
            Blank[], NonNegative]], 10], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> 
       Module[{ListTricks`Private`partition}, 
         ListTricks`Private`partition = Map[PadRight[#, {
              Length[#], 
              Max[
               Map[Length, #]]}]& , 
            Partition[ListTricks`Private`array, 
             Ceiling[Length[ListTricks`Private`array]/ListTricks`Private`n], 
             Ceiling[Length[ListTricks`Private`array]/ListTricks`Private`n], 
             1, {{}}]]; ArrayPlot[
           ArrayFlatten[{
             Riffle[ListTricks`Private`partition, {
               ConstantArray[0, {
                 Length[
                  First[ListTricks`Private`partition]], 
                 ListTricks`Private`spacing}]}]}], 
           ListTricks`Private`options]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MulticolumnArrayPlot, {
      SyntaxInformation[ListTricks`MulticolumnArrayPlot] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, 
      AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> 
      None, BaselinePosition -> Automatic, BaseStyle -> {}, ClippingStyle -> 
      None, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
      ColorOutput -> Automatic, ColorRules -> Automatic, ContentSelectable -> 
      Automatic, CoordinatesToolOptions -> Automatic, DataRange -> All, 
      DataReversed -> False, DisplayFunction :> $DisplayFunction, 
      Epilog -> {}, FormatType :> TraditionalForm, Frame -> Automatic, 
      FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, 
      FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, 
      ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, 
      ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxPlotPoints -> 
      DirectedInfinity[1], Mesh -> False, MeshStyle -> 
      GrayLevel[-1 + GoldenRatio], Method -> Automatic, MissingStyle -> 
      Automatic, PixelConstrained -> False, PlotLabel -> None, PlotLegends -> 
      None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> 
      Automatic, PlotRegion -> Automatic, PlotTheme :> $PlotTheme, 
      PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}}, 
    "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`MulticolumnArrayPlot"], False]]], "Output",ExpressionUUID->\
"220782ee-5726-4a7a-b478-5257d8a138ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"39780", ",", "2", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", "3", "}"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", 
    SuperscriptBox["2", "11"]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"614ef625-9c2b-4b13-b57c-160f26ef4b02"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
m8CKzA==
   "], {{0, 0}, {161, 2049}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"cc4665b7-a7a4-40bc-b52f-\
2c119284b8e4"]
}, Open  ]],

Cell["Wrap the long evolution into columns:", "Text",ExpressionUUID->"5bb10c2b-3d5d-432d-99ad-236e904732f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MulticolumnArrayPlot", "[", 
  RowBox[{
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"39780", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", 
     SuperscriptBox["2", "12"]}], "]"}], ",", "4", ",", 
   SuperscriptBox["2", "8"], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",ExpressionUUID->\
"2a09f609-7497-478f-b1c4-f71ddc5b168c"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsnW2S47CyXAWHI7wOb8lLeBt4G/Gi7YueZosgvlEoZBXz/NBQEgVRIAmd
RFE9//u//vv//Nf/+Hw+4X9+Pv/3f/3/fzH527BrKbepn/jsf27+npX+SKhd
9CI+sMfpf/jwEAEgd4gko8h9nPhe7feJz7Wy5C6Vbo8QPf4G399v28KA92+9
z3UWyQ6M0u2ROaC/iznQApDTtXQUKWpT/LL8Ptelz3qOIsQsd6P9VI32Z+m6
K3jUS7dH5kDOxdQ1DDpycVzIvpSza4TkuQ2+cayr5+I/rRUbGKXbIwvgfhdT
1zDoycWcXTtJRofqxYGVLsseDgvtaYC6ffeu/Npd6Wr3/Fxab2YDZNsjC4Dm
YuoaEO1czNm1k2R1qFgcWNaX5HBA1yHg7UsG30/LaH8PeMGPJN0eWQDyu5i6
BkQ9FwfOrh0no0PF4sCyvjy/QKDPUujte2hNVy4WvGIxd5iQQ8DmYuoaDPVc
HO9dN4/VOLumwVNLMpfUCenQ9y7F1iEL25c80pOLy+vNbIJse2QByO9i6hoQ
zVzM2TUAEi1JigO/DwroS3KpALAOoW9fdvDtycWl9WY2QLY9sgBwLg7UNQza
uZiza8dJtSRTQxbSocelArBnKf72pWdRXy4WNlrkkvqrgPwupq4B0ZGLA2fX
jpOpF6e1UhF9eV5Cj3qWom/fo9LTabSCJfDsYULOgJyLqWsYdOTi+FD2pZxd
UyO5UvpRKxXSoccuhT1L8bfv8734KW5q75WSw++eO0zIKSC/i6lrQPTkYs6u
QfBTHL2XSdNcnDw2/h6PqQ7UsxR9+9KzI91dX6vd83NpvcH3Lh0m5Ax4uZi6
hkbHddScXYMguVI6qZUK6dDjEgDYsxR/+9KzoyMX19YbeePiYUJOgfZdTF1D
o5GLObsGRBKvMvViwd8Xo+sQ+vZlZo26crFMyb98mJAzQOVi6hok1VzM2TUg
nldKJ2eQ2O+L0XUIffsiz6spunJxeb3+N64fJuQIQN/F1DVImrmYs2swZOJV
0j3L+pKkTUwdQt++f3SW3rNn4NLbNg8Tog9YLqauAdLOxZxdwyC9UjqjKkv6
kkmbeDpkR9fSXNxptGIl/13/YwuZA+i7mLoGSUcuDpxdw+Aer7K10gV9yaZN
NB2ypGudpfe00iNY8hdpj4gAl4sDdQ2Njlwcl7Iv5eyaIrfrqoq10qmzqpI2
wc5SO7p2u7C97wrI+pWS/W/81xx2Sf1VAH0XU9cg6cnFnF3DICnjx4XcahMN
19Im0i6wpGudpff00vXSev1v23eYEFUQczF1DYt2LubsGgbP3xs9z6BJfSmm
TTgdMqVrfaXt5LtTymhrhwnRB+i7mLoGSTkXc3YNjcd0xeMMmtSXYtqE0yFr
ulacbPhaJakIyRlt8TAh+sDmYuoaDKVczNk1NNJBO1GVFX3JtAeqQ8Z0rae0
nXx3ihqtRHtEBKDvYuoaJAVd4+waII9BO9y/O6f1JXuJHqQOmdO1dmn7qViy
uXi1PSICcC4O1DUMSocIZ9fQeHb35/HduVAvTtoD1SF7utYsbT+OetlcbKCL
XgHQdzF1DZKirnF2DY7HNMQjF0/qS/YSPUgdMqlrv7NLXUYreAVk7jAhh0DO
xdQ1DIqHCGfXwLidzc9a6aS+lC7RA9Uhi7rWKG1/D4eiV0AGmfaICEDfxdQ1
SGq6xtk1LO676quI8PPklL6UL9GD1CGbulYtbSdpuLhe/5vVDhNyCMxcHKhr
QFQPEc6uAZEOspl68Zi+3ONa0h6oDlnUtXJpO5OGBa+A/H0LA130AoC+i6lr
kNR1jbNrSCS7KlMvHtKX9MrrTL0YTods6lqptJ1Nw4JGK9IeEQE2F1PXYKgf
Ipxdw+F5NidFhFF9ecS15LWIOmRR17Kl7cqkhGguXm+PiAD0XUxdg6SZizm7
BkNmVyVFhCF9yV15nQa3kfY0sKlrmdJ2fVJCMhevtkdEAM7FgbqGQTsXc3YN
g+wgW635Nhv8+eeernPN42BR17Kl7eKkhLDR2iipvwCg72LqGiQduThwdg2D
3K6q13wbzd3iWrb2iqZDNnUtU9ouTkpIXgEp0h4RATkXU9cw6MjFceHrIc6u
HaGQi+d16Pua5GLtFewsNaprXT8Hb1wp2f1en78lKyX1FwD0XUxdg6QnF3N2
DYNSLp7UofSa5NJrkXaBXV1LuveTsdz6buh+o2/FEmiPiACai6lrQHRcR83Z
NQiKuThM6lAyaFcu0cPBrK6l3Zux3PJuGHyn7yUbJfUXAPRdTF2DpKlrnF2D
oZiL48LPvQF9SXJx/RI9EAzrWsZo080v7YbB97kNtEZK6u6BzcXUNRjahwhn
1zCo5eIpHUoG7YdyIeqQZV1r/Rw8uxsm3uaTLBnqIscAfRdT1yDp0DXOroFQ
zcXjOpTm4vtrMXXIuK4lkxfp5ucsd/w9Hoplqou8ApyLA3UNg45DhLNrEDRz
8ai+PLq7fokeBLZ1LZm8+GSMdr0E/ig9mOoitwB9F1PXIOnTNc6uIdDOxUP6
kl5HnVEuOB2yrmtJmM8YreAVkFlrJmdAzsXUNQw6DxHOrh2nIxeHIX35bq/r
Ej0AbOvac/Jiw58A/x5erZXUHQP0XUxdg6RX1zi7dp6OXBwXuptLvgZur8XU
Ieu6lgnzyeanljvxFrfhdbk9IgJeLqauodF7iHB27TQ9uXiuXvzbQOsSPQBs
61o6eZHZ/KUSeGZ4tVZSdwvQdzF1DZKBXMzZtcO0c/GQvqS7PlMvhtMh67p2
D/PZzV/4SNnh1VoXOQUlF1PXcBnJxZxdO0k9F4dxfXm017pEDwDbunZTCdk/
AV6pIZnqIrdgfBdT13AZysWBs2snqefieO+66Wou9zUQCucrBtZ1LZnGiAu5
1SYavrdXtWaiD0Aupq6BM5SL48LPPc6uadPMxaP6km8PVocc6Npzil3sT4AX
a0jGusgtx7+LqWvgjOZizq6do52Lh/Qlu+vrl+idxIWuPS49e2z+ZAn8k2mv
bM1EHYhcTF2DZjgXc3btEB25OAzpS6k9PB3yomvPn2Qll67Pl8Az7dWsmWhz
/LuYugbOVC7m7NoROnJxfKi7uVJ7aDrkR9eSXBwXvp6sWW6r4Wd7dWsmqoDk
4kBdw2UuF3N2TZ+eXCxQL/75F0uHvOhamouTzS9ablfTj/bK1kz0Of5dTF0D
ZzIXB86u6dPOxUP6Us7FcWG4vX340bWk0pN8pJLldjX8bK9ozUQflFxMXcNl
MhfHha8nObu2nUYuHteXantQOuRF12678Ln5OcvtbPWTaS9rzeQQx7+LqWvg
zOZizq7pU8+xw/pSz8VIOuRH15JpjOvm35OZj9nT5q0nnt/ttrrIKWdzMXXN
AnO5mLNr+jRz8ai+tHIxjg550bVkF6abn7PcdoN/w+sn00XWSupuOfldTF2z
wHguDpxdO0Q7Fw/pS0cuBtEhP7qWdHnGaMdL/l/Da6aLzJXUnXIsF1PXzDCe
i+O96+bfk5xd205HLg5D+tLOxWPtbcGVrj13YXJB+EzJP3uB+fddU13klkPf
xdQ1M0zlYs6uHaEjF8el7ubauXikvS0407Wc/vw8XvqYjeaekwPJa4faI9s4
mIupa0aYy8WcXdOnJxcL14vP6pA/XSvswsrHbDb48889XeeaJ4c5mYupaxaY
zMWBs2v6tHPxuA6V3+O4DnnUtVKXlz9mo7nb5EC2O6x1kVOO5uJAXbPAZC6O
D/08ztk1Hcq5eEGHau9xWof86VpxF9Y+Zr3Bv1aK3WGqi9xyNBfHpesudQ2S
+VzM2TVtiqFqRYeq73FUhzzqWrHLqx+z0tx9GqP0Wktd5JTTuZi6hs9CLubs
miqFs3lZhyrvcVaH/OlareRf+Zi1Br9byXaHsS5yy/FcTF0DZzEXc3ZNkdKu
Wtah8nscrxf/LF13retaveT/c29uF2bS9d8qlrrIKRC5mLoGzWou5uyaFsWz
eVmHau9xPhc70rX6pfC1j1lsMGkl+aWhvZK6WzByMXUNl+VcHDi7pkVxVy3r
UPU9zudiP7pW7/Lqx8w3dx9o769NL0QnBwHJxYG6hstyLo4LP/c4u7aT2tm8
pkPl90CoFzvStWYuLnzMSoO3VpLXjrdHtgGSi+PC/VnqGgYSuZizazpUd9WS
DpXe46gOedS1di6eLfn/+959DLTmSupOQcnF1DVcRHIxZ9cUqJ/NKzqUfY/z
OuRP1zpycZjehc/uGG+PbAMjF1PXcBHLxZxd2059V63oUOY9zuuQR13ryMVx
obu5+zTG/bWf4fbINs7n4kBdA0cuF3N2bS/NXDytQ9n3OK9D/nStJxcv7MK0
O8bbI9s4n4vj3esmeZaHyHEEc3Hg7Npe2rl4Vocy73FehzzqWkelZ2UXZrrI
XEndKRC5mLoGjWAujgvdb0tdG6QjF4dpHXq+x3kd8qdrdaMNuY/ZajB94H5B
vb2SulswcjF1DRfJXMzZtb105OK40N1cOxePtCeNR12rG228d910NZc5K68n
/pqy1EVOAcnFgbqGi1wu5uzaXnpysXC9+KwO+dO1Zi5+fsxWg7n25v9EOdkG
SC6Oj11PUNeAkMnFgbNrCrRz8ZIO3d/jvA551LV2LpYp+X8Nr9a6yCk4uZi6
hopMLo73rpuu5qhrgzTPZrHfF4PokD9d68jFQWQX3oZXU13kFqBcTF2DRCwX
c3ZtO+1dtaxDSbo+qkMeda0jF8eHupsrtZdMInS2R7YBloupa4DI5WLOru2l
42xe1qFwT5tndcifrvXkYqmS/9SfKCfbQMvF1DU0BHNx4OzaXjp21bIOxSeu
m6M65FHXOio9giX/4fbINuBycaCuoSGYi+ND3W9LXRuk72xezsU4OuRP1xpG
ew/9fQ1W2vuMt0e2AZeL48K1Cg+R40jmYs6u7aV3V3U3V1oTQ4c86lp9YExC
f09zVUMebo9sAzEXU9ewkMvFnF3bS8/ZLFAv/nkKQYf86VozFyehv6PBSnvP
SQRyDshcTF0DQigXc3ZNga5rtyRycXx2uD1pPOpaOxevl/zvA625krpTYHMx
dQ0GkVzM2TUFGmeziA7dmjutQ/50rSMXB1GjHW2PbAM3F1PXMBDLxZxd207r
u1NCh+7vdlSHPOpaRy6OS93NtQfakfbINoBzcaCuYSCXizm7tpee706pejGE
DvnTtZ5cLGy01krqbgHOxXFBaXtIEcFcHDi7tpf2d+e6DiXvhlsvPr99M3RU
eoSN1lxJ3SnIuZi6hoFgLo5L3W9LXRuk57tzVYee7wadi4MxXSsb7Xf1W+y/
2hpvj2wDNxdT1zCQzMWcXdtL13enbC4eaU8aj7pW+khJtV/IaIfbI9vAzMWB
ugaEXC7m7Npe+uaUZXMxeL3Ymq4VduH8n9huDbSj7ZFtYObieO+6ISdZz8Wc
XdOi/d0p+Pvi8zrkUddKXf41HAoa7XB7ZBuwuZi6BsNqLubsmhbls1lOh+7P
I/++OJzfvnGKu/A2HIrm4rH2yDZwczF1DYOVXBw4u6ZKZSAX06FklZH2pPGo
axWd+v4gkrl4pD2yDeBcHKhrGKzk4vj4dcPZtb0UukxUh56tA+fi09s3Tm1A
nvoT2x0DrbEucgtwLo4PKWwLqbKYizm7pkipyyR1KPOWwLnYnK7VS/4/a8ga
rbmSulOQczF1DYPVXMzZNS2KXSaoQ5mVkHNxMKZr9QH5dz+KGe14e2QbuLmY
uobBci4OnF3TothlgjqUW6+zPWk86lq9y5NJjp7mal2UTpqQg4DmYuoaEMu5
OD75swZn13ZS6zIpHcq9J3IuNqZrzVwsUPK/DbT2SupugczF1DUgJHIxZ9d0
qHaZkA5lVgHOxeZ0rZ2LBa+AzE2akEPA5mLqGgwiuZizawo0u0z298Xndcif
rnXk4iBqtKPtkW3g5mLqGgZiuZiza9vp6LK40N1ce5eOtCeNR13ryMVxobu5
9kA70h7ZBnAuDtQ1DORyMWfX9tLz3SRYLz6vQ/50rScXCxuttZK6W4BzcVzS
2iBSQjAXB86u7aVr4BXNxUd1yKOudemPbKXHWhc5BTkXU9cwEMzFcaH7balr
g/R1mWguHmtPGn+61hyQxa6A/K6mm+oit+DmYuoaBpK5mLNre+n6bpLNxSPt
SeNR19pn2+e66Wqu0EVJNd1SFzkFLxdT19CQy8WcXdtL35ytbC4Grxdb07W+
n5Et78L5P1FOtoGWi6lraMjk4sDZNQW6rmUSzcXAvy8+v30zdJxtIrvwa3i1
1kVOQcrFgboGiUwujmtcN13NUdcGqX83BREd+nsnAB3yp2t9A7LALrwNr6a6
yC1IuTg+cd1Q1zAQy8WcXdtOPRfHu9dNV3PlgRxBhzzqWu/Z1t1cWae+W7HU
RU4By8XUNUDkcjFn1/bSzMUSOvQdOU/rkD9d6xmQpUr+U3+inGwDLRdT19AQ
zMWBs2t7aefiZR1KIudRHfKoa12zSxK5OD473B7ZBlwuDtQ1NARzcVyt+22p
a4N05OKwrEP/5oAhdMifrjUG5PukRF+D9ebsldTdApeL47PXKjxEjiOZizm7
tpeOXBwf626u1B6GDnnUtY5L1+NSd3ON73aDJXWnIOZi6hoWgtdRc3ZtKz25
WKBe/PMPgg7507We7065n4h/xtsj24DMxdQ1IIRyMWfXFOi4jlqkXvyzNNye
NB51rf3dKXMF5Ne7Wesip8DmYuoaDCK5mLNrCjRysYwO/X0Xn9chf7rW890p
arSj7ZFt4OZi6hoGYrmYs2vbqedYER36fH+3H9Yhj7rW9d0pm4tH2iPbAM7F
gbqGgVwu5uzaXpq5WEKHku921HoxxPaN03fUy+ZiY13kFuBcHBcUtoVUEczF
gbNre2nn4mUdSnLxUR3yqGtdeiFb6bHWRU5BzsXUNQwEc3Fc6n5b6togHbk4
iNaLR9uTxp+u1X6mNfUntltnr72SultwczF1DQPJXMzZtb105OK41N1cOxeP
tCeNR10rfaSk2i9ktMPtkW1g5uJAXQNCLhdzdm0vPblYuF58Vof86VphF87/
ie2O72JjXeQWzFwcV7luyEnWczFn17Ro52LB3xef1yGPulbq8q/hUNBoh9sj
24DNxdQ1GFZzMWfXtCjnYkEd+n7stA7507XiLrwNh6K5eKw9sg3cXExdw2Ap
F3N2TZViqJLToeSxozrkUdeKXX4fDiVz8Uh7ZBvAuThQ1zBYyMWcXVMl7bJM
Ghb8ffHvWwDn4tPbN06t5D/1J7a7ziJTXeQW4Fwc19u8HaTJYi7m7Joij+/J
ZxoWrBcPtyeNR12rl/yvu5KVHmtd5BTkXExdw2A1F3N2TYvbdVXFNCyai8fa
k8afrtUvhf/cd2tfg623s1ZSdwtuLqauYbCciwNn17RIrpmOS9cTMjqUfWxs
K8XwqGsdl67Hhe7mamumhwk5CGgupq4BsZyL49J1l7Nr23j+3uiZhoXrxWd1
yJ+uNXPxaAm8NdDaK6m7BTIXU9eAkMjFnF3T4T5o59Kw5O+Lh9uTxqOutXOx
4BWQucOEHAI2F1PXYBDJxZxdUyAdtO+qIqRDpZr0CfzpWkcuDqJGO9oe2QZu
LqauYSCWizm7tp3HoH07g0R06JPs0pH2pPGoax25OC50N9ceaEfaI9sAzsWB
uoaBXC7m7Npent2d5GIJHarUpNXxp2s9uVjYaK2V1N0CnIvjksbGkBqCuThw
dm0vj2mIRy5e1qHP44sBOheb07WOSo+w0ZorqTsFORdT1zAQzMVxofttqWuD
3GLTo1YqpEPVmrQy/nStbrQhs1ubDVbeKXeYkFPg5mLqGgaSuZiza3u5nzdp
rVREh9JcPNKeNB51rW608e5109VcYc3yYULOgJeLqWtoyOVizq5tp/K3p4V0
qFqTVsafrjVz8WO3NhvMv0nxMCGnQMvF1DU0ZHJx4OyaEl/nTaZeLPj74vM6
5FHX2rlYpuRfPkzIGaByMXUNEplcHO9eN13NUddmuJ03yRkk9vtiEB3yp2sd
uTiI7MLaYUKOAJSLqWuQiOVizq7pcD9vku5Z1qEkbR7VIY+61pGL42PdzZXa
qx4mRB+wXExdA0QuF3N2TYfK355e0qFM2sT7fbFtXevJxVIl/6k/UU62gZaL
qWtoCObiwNk1JX6/h55n0IIOZdMmWr3Yuq51VHoES/7D7ZFtwOXiQF1DQzAX
x8e635a6Ns3nng7vz83oUCVtwuVinO0bp2G0ld1abLDyWO0wIdrA5eK4dN3l
IXIcyVzM2TUtknSYPNndyOd7qZg24XIxyPbNUB8Yq7s131zVkIfbI9tAzMXU
NSzkcjFn17T4vcLqeQZN6lAxbQLWi3/+Qdi+cZq5uLBbKw1WHisfJkQfyFxM
XQNCKBdzdk2VTDr89/iUDhXT5lEd8qhr7Vy8UvJPHxtuj2wDNhdT12AQycWc
XVPlt6NuZ9CKDmXaA9Ahf7rWkYuDqNGOtke2gZuLqWsYiOVizq4pck+H/x6a
16FPpr3zOuRR1zpycVzqbq490I60R7YBnIsDdQ0DuVzM2TUtfrv78/juXKgX
J+0B6JA/XevJxcJGa62k7hbgXBwXtDaIlBDMxYGza1r8+x565OJJHfpk2juv
Qx51raPSI2y05krqTkHOxdQ1DARzcVzqflvq2grPWumkDn2XXZ//79NRHfKn
a2WjLe2GZoP1x+yV1N2Cm4upaxhI5mLOrmnyuW5+7s7pUFJmfn63Y+fiuKC1
QQKUPlJ5NzSaq3bRcHtkG5i5OFDXgJDLxZxdUyWtlQ7pSyaGJe0B6JA/XUuP
+vZuaDbYesxaSd0tmLk43r1uyEnWczFn1w6RqRf36ks2hmXqxUd1yKOuPb4n
m7uh0VxzoDVXUncKbC6mrsGwmos5u3aO5K9P9enL98rJeZi89rQO+dO1m0pI
/Anw9kA71h7ZBm4upq5hMJuLObsGwW/H9+tQsnKarnPNC23rKB51LanqxKXr
ieJuqDTXHmhH2iPbAM7FgbqGwVwu5uwaBp9KvCq+pBDDMq89q0P+dO05xb74
J8A7BlpjXeQW4FwcH9PYGFJjIhdzdg2IarzKv+DzWC9J17nmD+BR1x6XnvXt
hnJz7akDa13kFORcTF3DYDgXc3YNiN+S/YAO/evk3r89DZ2LgzFde/4ka/FP
gNe7aLw9sg3cXExdw2AqF3N2DYZSvKq84PNcL9Gr5BWLmziLR11LcnFcuj9b
3A355mpdlFozOQhoLqauATGXizm7hsFvlw3o0L/d1/e3p8HrxdZ0Lc3Fvbuh
0mDtsfH2yDYgczF1DYjJXBw4u4bBPV516EvyQ7SvVjKvPapDHnUtGQQ7d0Ol
ueZAa66k7hTYXExdg2EyF8el+7OcXdPn1mVNfflepfm3p8/rkD9d+/12FPsT
4O2Bdqw9sg3cXExdw2A2F3N2DYOky+JCed3bKmkguz92Xoc86to9DXfshlZz
7YF2pD2yDeBcHKhrGMzlYs6uYZB+NxX15Z4iPxmVSmuv53XIpa7J/gnwjoHW
Xhf5BDgXxyW1LSIFxnIxZ9fQeAy8+bMqTZEZlUr06rwOedW1od3QaKpj6sBi
FzkEORdT1zAYycWcXUPj2WXFXJzEsObfnj6vQ051bWw3tNoqPFayZnIK3FxM
XcNgQNc4uwbI47upkouTGJasl+jVeR1yq2sju6HVUqGLytZMzoCXi6lraIwc
IpxdQ+M5Z1vJxeHvnMusl9Zez+uQX10T+xPgSRdlhleDJXWfoOVi6hoaQ7rG
2TU4Htcy1XJxXLruputl6sVHdci1rvXuhkYr9y7KDq9mu8gXKLmYuobL0CHC
2TUwbt1Y05fv77Dm354G0SHPutazG7qa+WqwNLwa7SJnYORi6houo7rG2TUs
kjPtunmsds/PxfWulc/rkG9da++Grkbu0wR/r61aM9EHIBdT18AZPkQ4uwbE
sxs7cnFlvU/lfFXHs66Vd8Ok0T7aq1gzOcDxXExdA2dc1zi7hsTj+6orF5c1
p3q+6uJb10q7YfIKyOKF8nZL6r6AyMXUNWjGDxHOruHwPMO7cnFxvWdcg8jF
/nQtuxsqlltsJllKfmlouaTuDIxcTF3DZSoXc3YNhlxNNbtaOmhXcjGIDvnW
tcxuSD9mTyOpYoX7d/tge2QbILk4UNdwmcvFnF3DID3DO+vFxfXSuAZSL/an
a9ndUC3lF5q5Ld1fW780gOgCkovj0vfT1DUUJnNx4OwaBqWa6mO19Hutlovj
QrU9DXzrWmY35D5mq5H71EHy2uH2yDZQcjF1DZfJXBwXvh7i7NoRbt+xXb8v
Dv9WqediCB1yrmvPza+W8vNtfA2vj/bqlwYQXTByMXUNl9lczNk1DIo11XS1
e34urZfOCxfXU8C/riWbn/2Y9Qbuw2vaHcPtkW2czcXUNQvM5WLOrmHwnHvu
yMWV9Z67BScX+9O1dPOrpfzMi9Ph9ZPpIrsldWeczMXUNQtM6Rpn12Co1lS/
V/sk97ty8VEdeoGuZYy2twSeHV4zXWS4pO6KE7mYumaLuUOEs2sYJLk4FPXl
sZu7cnG5PQ3eoGvJBeF9JfB7qTx7gfn3XeNd5AT972Lqmi0mdY2zayDUa6pf
qz0f7cnFxfUUeImu/R7/hY+Ze0VSKk/Sda55oW0l0yjnYuqaQSYPEc6uQZDm
4s56cXG9NBef0qEX6dqnMmwWX1IYXjOvNV5S94PqdzF1zSDzusbZNQTqNdWv
1T6Pux25+JQOvUrXqsNm/gWfx3pJus41T06inoupa+ZYOEQ4u3acWzrs+33x
XYey7f3eOaJDb9O15wXhXbk4We9T2a3mu8gF+rmYumaLFV3j7Np56jXVr9Xu
+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
48LXQ9S1IxRycZcO3V7St94K1LWErp+D16+UvKVrbyV1w+zNxdQ1+0jmYs6u
YVDKxT069PWC/TpEXXvy1R1xKfcx66Xy3tI70WRzLg7UNfvI5WLOrmFQzMWh
rUO3l/SttwJ17UFaAs98zPKVkr8rlCYbyDk25+K4dH836potxHSNs2swFHNx
XPi519QcDR2irmXIGG36Mdul8uJkAznE7lxMXbOP3CHC2TUMarm4pUN/a6vo
EHUtR+vn4NkrJZMmhi4NIArszcXUNfsI6hpn10Co5uKGDv2soaRD1LUCyeRA
+jE7SuUjlwYQBfbkYuqaJwQPEc6uQdDMxTXNqVzZvGVT/96yb/veoWuf6m7I
Xin5bOOerslhdnwXU9c8IatrnF1DoJ2Li5pTv7JZGupaifpu6CyVJ+manEQ8
F1PX3CF8iHB27TgduTgUNeeRSnedpdS1Cs/JgeRjdpXKey4NIFpID7TUNW9I
6xpn187TkYvjQvalz1S6ZRdQ16q0d0PabaVWetYj+9mQi6lrzthyiMSF+92v
Z6lrW+nJxZV68c8/O3WIutYinRzIfMyOUnmz9E4U2ZGLqWue2JCLqWuHaefi
ouYkVzZv0SHOrrXp2A0dH71deidabMnFgbrmiS2HCHXtIPVcHOo69J2fd+kQ
da3Fp2s3dA20HesRDbbk4rh03aWumWZLLg7UtZPUc3G8d908Vrvn59J6K3B2
rU3nbugZaDvWI/vZlYupa37Yd4j83KOuadPMxTXNudeV9+gQda3Fp2M3dHaR
15K6ObblYuqaE3blYuraOdq5uKg5yRm+RYc4u9amvRt6SuWdpXeiwNZcTF1z
wbZDhLp2iI5cHIqacz/Dy+utQF1rkV72nnzM/lK535K6OfbmYuqafbbmYura
ETpycXwo+9L7GV5abwXOrrWp7ob0QvR6S53rkb1szsWBumafvbmYuqZPTy7u
rBfv0SHqWos0Fycfc6RU7rWkbo7NuTgu3J+lrtlicy4O1DV92rm4qDlpZt1b
L6aulajuhtyF6PWmPHaRMXbnYuqafTbn4rjw9SR1bTuNXFzXoe/X7vx98W2r
qGsJn/puGCyVu+wic+zNxdQ1++zOxdQ1faq5uK5D6W+fSuutwNm1NtXd8Ml0
W6M5kY0iC+zLxYG65oS9uZi6pk8zF9c05zGXvT8XU9cepEqU6aLuUrnTLjLH
vlwc7143ybPUNTPsy8WBunaIdi4uas7zGq/tuZi6lqG6Gz6Zbqu05LSLjLE1
F1PXXLD5ELlu/j1JXdtORy4ORc15vHZnLv5tnrqW8NyFyR8p6yuV95feyXb2
5mLqmn225mLq2hE6cnFcyr408z0utV3596CuZSjthqSaXv/oQ6V3spfNuThQ
1+yz+RChrqnTk4s768V7dIi61qKwC7+HzZ5S+UjpnWxmcy6Oj11PUNcMsjkX
B+qaPu1c3PP74r+VxTePutaitAu/hs32Rx8rvZOt7M/F1DXraBwiP49T13Qo
5+IOHfrOz9t/X3w9QF27U9yFt2Gza6DtWY8ooJCLqWum2Z+LqWvaFM/Stg59
VWu36RBn19oUpzaSSYRGI5+u9YgCSrmYumYYhUOEuqZK4azv06F7XXmPDlHX
WtRK/skkQr2ZvvWIAlq5mLpmFaVcTF1TpLRLO3QoycVbdIiza23qJf+fe31d
5Lakbgy1XByoa1bRysXUNS2KZ32PDt1zcXm9FahrLeqXwieTCMUWfldx2UXm
UMvFceFahbpmBrVcHKhrWhR3aVuH0lxcWm8Fzq61qQ606SRC9vW3VTx2kTE0
czF1zSZquTgu/Nyjru2kdtY3dSjJxYr14r7tS1pxqmvNXJxMIjxW/BtevZbU
zaGai6lrBtHMxdQ1Haq7tK5DzwFfMxe3ty9pxa2utQfaesn/a3j12kXGUM/F
1DVzqOZi6poC9bO+oUPfaVPt98XUtYSOXByqu3Cs9E4U0M/F1DVbqOdi6tp2
6ru0qkNJ2tyiQ5xda9Mx0MaF7Eufw7DHLjLGgVwcqGu20M/F1LW9NHNxQXMy
aXOPDlHXWvTk4lbJf6D0ThQ4kIvjQvG11DUwDuTiQF3bSzsX5zQnmzb168XU
tf/QMXXQUfK/7nrsImOcyMXUNVscyMVxIftS6poAHbk4JJpTSZtHcnH5fd+h
a3WjDffJi+eKf6/wW1I3h34upq7Z4kQupq7tpSMXx4Wvh2pp80QuLr3vW3St
3kXx3nXzWO0+IJfWI6ro5uJAXTOIfi6mru2lJxcnmlNMm4fqxW/XtWYuTnZX
suL3K7yW1M2hm4vjveum/FrqGg66uThQ1xRo5+JEc4ppc4sOcXatTXugrZfU
v17htYuMoZ6LqWvm0M3F8d5181iNuiZA86x/ak6mRrtRh6hrLTpycejqotp6
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
Th147SJjIOdi6hoGwLk4rrawKS9FMBcH6Hrxz1oeDxEho/X8J7vNgZuLqWsY
IOdi6tocgrk4Pra6PR3vUVixb7WFbUFFpIv+xliPXWQM0FxMXQMCNxdT1+aQ
zMXg9WKvuiaWi/2W1M0BmYupa0CA5mLq2gKC11GD14vd6prcQOu2pG4M2FxM
XYMBMhdT1xYQysX7dIi61kIwFwenXWQO3FxMXcMANhdT16YRycX7dIiza20E
B9q4tLo9ZBXgXByoaxjg5mLq2hxiuXiXDlHXWkjmYqddZA7gXByXVjeIrAKc
iwN1bQ65XLxFhzi71kZw6sBrFxkDORdT1zAAzsVxaXV73odgLg7Q9eKffzwe
IutG+11Nd9lF5sDNxdQ1DJBzMXVtDsFcHJdENir3Hs0Vu1rxeIisdlFSTffY
RcbAy8XUNTRwczF1bQ7JXAxeL/aqa4u78Ht49VpSNwdaLqauoYGXi6lrqwhe
Rw1eL3ara6u78Gt49dpFxoDKxdQ1SNByMXVtlfVcvFmHqGstlnfhbXh12UXm
AMrF1DVIoHIxdU2E5bN0rw5xdq3N8tTGfXj12EXGAMvF1DVAgHIxdU2EWR3K
pE283xe/Q9ckSv6f6yxy2UXmQMvF1DU0wHIxdU2AubM0mzbR6sVv0TWZkv91
12MXGQMuFwfqGhpouZi6tsqEDlXSJlwufoOuyVwK/7nvVnIUuFwcl667PESO
A5eLA3VtleGztJ424XLxC3RNZKANyW4lB0HMxdQ1LOBycVy67vIQGWYqFxfS
JmC9+Ocf37omlouT3UrOAZmLqWtAIOZi6toac7k4lzbhfl/8Fl2TG2jdltSN
AZuLqWswQOZi6toCk7k43NVnow5R11oI5uLgtIvMgZuLqWsYwOZi6to0k7k4
Lt2f3aJDnF1rIzjQxgWJbSIrAOfiQF3DADcXU9fmmM3Fd/XZqEPUtRaSudhp
F5kDOBfHBYmNIisA5+JAXZtjLhentddtOsTZtTaCUwdeu8gYyLmYuoYBcC6O
CxLb9C7GdOi77PrIxQG6Xvzzr8dDRMZoQ2a3klPg5mLqGgbIuZi6NsfIWZr8
tDjNxcljInB2rY1MF8W71w05CWYuDtQ1IHBzMXVtjoGzvvK3nTfqEHWthVgu
9ltSNwdmLo53rxtyEsxcHKhrC4zs0q/zMFMvBv59sW9dkxto3ZbUjQGbi6lr
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
2LZ5pJOlgbbye0Dqmh825+K48PUQde0It+/Yrt8XB0Ed4uzaCs+POVgq999F
FlgYaOu/B6SuOWF3LqauYXCfey5qTvrbp9J6g+/N2bUlko+ZLb23GyAnWczF
yXDY/Os41DWDbL6OmroGwXPuuSMXS+gQZ9cESD/mUKn8HV2Ez2ouTobDpDXq
mn325eJAXQPicU1WVy5e1iHOromQ6aLeUvkLSuomWM7F4W84zOgVdc0BO7+L
qWsoPH+r1JWLy+v1vzFn1yRIhuG+Unl/6Z1sZzkXx6Xr7uM8pa5ZZ2supq7B
kOTiuJRd7fnoci7m7JoEyTCcdFv2FSOld7IXiVz8N57W/joOdc0qe7+LqWsY
pLm4s168rkOcXZMiGYZ7SuUjpXeyGZFcHKp6RV0zzeZcHKhrGCTXUXfWi5d1
iLNrctRL79kXPCclyCHEcnFFr6hrttn+XUxdA+B2xXLf74tldIiza1I8h+Gu
gbZnPaKAXC4u6xV1zTL7czF1DYF72izPciUGXlqv/205uyZFu/T+eMGnaz2i
gGAuDiW9oq7ZRuG7mLqGQJ8OJd+dUvVizq4tkw7DnV30ppI6NIK5OC4U34O6
ZhSlXExdA6BDh5JcvKxDnF2To6P0nr7g07UeUUAyF1eM9udf6ppJtHIxde04
PTr0MHDRXFxsj7rW5KZJzVL5UOmdKCCXi8t6RV2zjFouDtS147R1KM3FpfX6
35Gza1J0lt7/rXFb5S1dBIxMLg5VvaKu2UYtF8eFn3vUtVM0degxpyybizm7
Nk16WV1lF46W3okCMrk43r1uyu9BXbOHZi6mrgFQ16HngC+aizm7tkBn6T29
wPxNXQSMWC6u6BV1zTaquZi6dpyGDn2nTdHfFwfOrq3xLB9UduFY6Z0oIJeL
y3pFXbOMei6mrh2mqkNJ2lzWIc6uydFZes9dYP6WLgJGMBeHLqOtrEddw0Q/
F1PXTlLWoUzaXNchzq5JkQ60rZL/QOmdKCCYi+Nj9fegrtnjQC4O1LWTlHQo
mzYF68X19qhrTTpL78kF5q8qqQMjmYs7jZa6ZowDuTguZFejrm0nq0OVtCma
i4vtUdea3AbzZsn/3yveVVKHRi4Xd1wBSV0zyIlcTF07SUaH6mlTMhcX26Ou
NeksvaeXrpfWI6oI5eKqXlHXbKOfi6lrJ8nqUDFtCteLObs2zzMcdQy0tfWI
KiK5OLXm6ntQ12yhm4sDde04GR0qps1lHeLsmhydpfdkoH1VSR0YsVxc0Svq
mm10c3G8d908VqOuafDUnEyNVkiHOLsmxXMw7xpoy+sRVeRycVmvqGuWUc/F
1DUAEs1J0ubvgwI6xNk1OTpL7+lAW1qPqCKYi0OX0VbWo65hop+LqWvHSTUn
U6MV0iHOrknx/HlY30D7oi6CRjAXx6XO96CumeFALg7UteNk6sVp7VVEhzi7
Jkdn6T2dOnhTFwEjmYs7jZa6ZowDuTg+lF2NuqZGciXyo/YqpEOcXZPidnZ0
ldRDZreSU8jl4p4rIP9WrrZHXQPiRC6mrkEQuzYp46a5OHls/D04uyZGZ+k9
ne4vrUdUWc/FJWvOvgd1zSD6uZi6hkFyJXJSexXSIc6uSfE8OzoG2tp6RJXV
XFy25sx7UNcMopyLqWtAJOdrpl68rEOcXZOjs/T+1Jr3dBEwswNtJg33XAFJ
XTOIai6mrgHxvBI5OSPFfl/M2TUBntPzXQNteT2iytxAm03DbaOlrhlEPRdT
12DInK9Jdy/rEGfX5OgsvefO6Ld0ETATA22lhtSVi4vrUdcw0c/F1DUM0iuR
M+qzpEOcXRPl+XOuvoH2RV0EzfBAm1pp1ZqT96CuGeRALg7UNQzu52u29rqg
Q5xdE6az9J5OHbypi4CZysWFNNxptNQ1YxzIxXEpuxp1TZHbdVXF2uvUWcrZ
NXluF473ldTrpXeiylwuzqXhjisgqWsGOZGLqWsYJPPCcSG32kTDnF2Tp7P0
nl66XlqPqDKZi8NdpWrWTF2zjn4upq5h8Py90fOMnNQhzq5toav0nirWu7oI
l8lcHJfurZT1irpmGb1cTF1D4/H99zgjJ3WIs2u7KE42fK3SWXonqszm4rtK
la35dwXqml20cjF1DY100E7UZ0WHOLu2iY7Se6pYb+siVOZycWqbbb2irllF
IxcH6hokj0E73L87p3WIs2vbaJfen4r1si7CZGygLVlp1pofL6Wu2UTnu5i6
hsezuz+P786FejFn1/bQKr0/Sw+v6yJIRgbaspV26BV1zShKuZi6Bsjje+2R
iyd1iLNrW/nVlb6pg1d2ER7dA+299vLJGG1Tr6hrNtH6LqauoXEbHZ6110kd
4uzaduql99vw+sKSOiqdA21ae8kYbYdeUdcMopaLA3UNjfuuT2bDJnWIs2sK
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
nS1fZWUunno9+SvAufhQ166iUQ2b1yGra9eTKB3834cIQmaibaThR8Nop/RK
XbsP4Fz8PLrsgv7f1Huv8zpkde1q+kPUuw2yi/OJtpmGG0a7sANSXQNBzsXq
2pWEati8Dlldu57eEPVvg+zhZKItOxGbnwd8/3KF0aprNLi5WF27lLj3OqVD
Vte2EIfo/DbILoYTbexEDPtF4eTG3039XHUNCS8Xq2ubaOwXZ3XI6tomyiHK
3AbZw2ku7qThhkp91QGprnGh5WJ1bR/h+c/pkNW1fbwNUf42yBbOc3ErDTdt
8wujVde4UHKxuoYgPP8JHbK6tpNQJngevf6hexvkehK5+Ci16VHqVXn6J0ar
rsFh5GJ1jcFj8Lx2v8Xq2i6KiTZ/G2QDiVz8PCq/o2ub80arrsEB5GJ1DcTw
eW1/g9W1fZQTbfo2yOVkcnGj27Fpmx8arboGZ3suVtdA1M9/KheH86yuXUSY
aI/8bZCrOc/FUZsaevV28vTPVdfgIHKxuoah97wOvsHq2j7CRPs8Kv+1exvk
UvoTba8T8dHQq2Nar9S1+8DIxeoag/j8J/eLra7tIU602dsg19ObaPudiA29
ilY683PVNTiQXHyoawzK5zWhQ1bXdhJKB8nbINfTnGiHnZL/3vXVb+D5tANS
XYMDycXPo/Jf1bXrebzfllMdsrq2mWK6zt0G2URjoh3vvfxbd6tcPKdX6tpd
oORidY1BqAs/D/rnWl3bTDm9Jm6DbKKTi8M0d/rbcab1Sl27D4xcrK4xeFS3
pfOUWl2DMHsbZBO9XNzaeznKL+u1c9Jo1bU7sDcXq2s0qvWv/ZRaXeMwdRtk
E91cfPxOcw1tirb5iV6pazdhZy5W12iEXHx0dcjqGoa52yCb6Obi59Hry3hW
w2jn9UpduwO7cvGhriGp+qUGudjqGoOZ2yCbGOXi3/lv9Ntxelaa++HqGp99
a7G6xiPm4sF+8c9/rK4RmLgNsolhLj5K5YznvU5uWmnyh6trcDbmYnUNSJgd
hvvFP0evL62ubSR7G2QTp7l4oE0hNX+kV+oan51rsbpGo5gxRjpkdY1F5jbI
Ts5zcV+bxp2S2Qt4/Uh1DcnWXHyoazQeYbU72k+p1TUa57dBdpLIxUdPm+rU
/MnEqK7R2bwWq2sowozR1yGrayz6t8EhYpDIxc+D7vcOrTR7Beoal925WF1j
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
vLu69h9oZwK+
   "], {{0, 0}, {1932, 1025}}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"ed089353-9acd-40ce-967a-\
6643f9102825"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["MultiRiffle", "Input"],
 StyleBox[" (a generalization of ", "Text",
  FontWeight->"Plain"],
 StyleBox["Riffle", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"31f62c06-3031-4c20-9ece-d883eb2dd20d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MultiRiffle"}]], "Input",ExpressionUUID->"e8b9efc0-4801-49fb-bebe-a994a89cf4af"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultiRiffle\\\", \
\\\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "MultiRiffle", "[", 
                    "ListTricks`Private`listsequence__List", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`p", "}"}], ",", 
                    RowBox[{"TakeBefore", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`listsequence", "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "ListTricks`Private`listsequence", "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"Length", "/@", 
                    RowBox[{"{", "ListTricks`Private`listsequence", "}"}]}], 
                    "]"}], "+", "1"}]}], "}"}], ",", "ListTricks`Private`p"}],
                     "]"}], "]"}], ",", "1"}], "]"}], ",", 
                    "ListTricks`Private`p"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "MultiRiffle", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MultiRiffle] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MultiRiffle\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultiRiffle\\\", \
\\\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives \\!\\(\\*RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MultiRiffle\", \"[\", RowBox[List[RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]], \",\", StyleBox[\"\\[Ellipsis]\
\", \"TR\"], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]]], \"]\"]]\) gives \
\!\(\*RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"b\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"z\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \
\"TR\"]]], \"}\"]]\).", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MultiRiffle, {ListTricks`MultiRiffle[
         Pattern[ListTricks`Private`listsequence, 
          BlankSequence[List]]] :> Module[{ListTricks`Private`p}, 
         ListTricks`TakeBefore[
          Flatten[
           Transpose[
            PadRight[{ListTricks`Private`listsequence}, {
              Length[{ListTricks`Private`listsequence}], Min[
                Map[Length, {ListTricks`Private`listsequence}]] + 1}, 
             ListTricks`Private`p]], 1], ListTricks`Private`p]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MultiRiffle, {
      SyntaxInformation[ListTricks`MultiRiffle] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`MultiRiffle"], False]]], "Output",ExpressionUUID->"18288afd-\
0035-430b-b960-c795f186627a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiRiffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ExponentialE]", ",", "\[Pi]", ",", "\[ImaginaryI]"}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"f79a0c07-98aa-4987-8511-839fbd4d8fe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "a", ",", "\[ExponentialE]", ",", "2", ",", "b", ",", "\[Pi]", 
   ",", "3", ",", "c", ",", "\[ImaginaryI]"}], "}"}]], "Output",ExpressionUUID\
->"d7121bf6-c3ec-40eb-824a-665090002d24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiRiffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ExponentialE]", ",", "\[Pi]", ",", "\[ImaginaryI]"}], "}"}], 
   ",", 
   RowBox[{"{", "z", "}"}]}], "]"}]], "Input",ExpressionUUID->"b94fd124-f21f-\
499c-b397-0098432ff726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "a", ",", "\[ExponentialE]", ",", "z", ",", "2", ",", "b", ",", 
   "\[Pi]"}], "}"}]], "Output",ExpressionUUID->"2d078a62-7e9e-4dd7-8157-\
6d9c75845a4f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MultirowArrayPlot", "Input"]], "Subsubsection",ExpressionUUID->"a26616b9-2b5d-49f2-bde5-7fb6bdaceceb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MultirowArrayPlot"}]], "Input",ExpressionUUID->"6d17e5c9-e446-4328-b623-1304e8231947"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultirowArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a plot of the \
values in an array after wrapping into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) \
super\[Hyphen]rows.\\n\\!\\(\\*RowBox[List[\\\"MultirowArrayPlot\\\", \\\"[\\\
\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves \\!\\(\\*StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]\\) white cells between successive super\[Hyphen]rows.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MultirowArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array", ":", 
                    RowBox[{"{", "__List", "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}], ",", 
                    RowBox[{"ListTricks`Private`spacing", ":", 
                    RowBox[{"_", "?", "NonNegative"}], ":", "10"}], ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`width", "=", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox[
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "ListTricks`Private`array"}], 
                    "]"}], "ListTricks`Private`n"], "]"}]}], ",", 
                    "ListTricks`Private`partition", ",", 
                    "ListTricks`Private`p"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`partition", "=", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"PadRight", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                    "ListTricks`Private`p"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    ",", "ListTricks`Private`width"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    ",", "ListTricks`Private`width"}], "}"}], ",", "1", ",", 
                    "ListTricks`Private`p"}], "]"}]}], ";", 
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ArrayFlatten", "[", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "ListTricks`Private`partition", "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`spacing", ",", 
                    "ListTricks`Private`width"}], "}"}]}], "]"}], "}"}], 
                    "}"}]}], "]"}], "]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"ListTricks`Private`p", "\[Rule]", 
                    RowBox[{"Sequence", "[", "]"}]}]}], ",", 
                    "ListTricks`Private`options"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "MultirowArrayPlot", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MultirowArrayPlot] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorRules", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"DataReversed", "\[Rule]", "False"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "False"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "GoldenRatio"}], "]"}]}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MissingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PixelConstrained", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","52","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","52","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MultirowArrayPlot\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultirowArrayPlot\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a plot of the \
values in an array after wrapping into at most \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) \
super\[Hyphen]rows.\\n\\!\\(\\*RowBox[List[\\\"MultirowArrayPlot\\\", \\\"[\\\
\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) leaves \\!\\(\\*StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]\\) white cells between successive super\[Hyphen]rows.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MultirowArrayPlot\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \
\"]\"]]\) generates a plot of the values in an array after wrapping into at \
most \!\(\*StyleBox[\"n\", \"TI\"]\) super\[Hyphen]rows.\n\
\!\(\*RowBox[List[\"MultirowArrayPlot\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"spacing\", \"TI\"]]], \"]\"]]\) leaves \
\!\(\*StyleBox[\"spacing\", \"TI\"]\) white cells between successive super\
\[Hyphen]rows.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MultirowArrayPlot, {ListTricks`MultirowArrayPlot[
         Pattern[ListTricks`Private`array, {
           BlankSequence[List]}], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 2], 
         Optional[
          Pattern[ListTricks`Private`spacing, 
           PatternTest[
            Blank[], NonNegative]], 10], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> Module[{ListTricks`Private`width = Ceiling[Max[
              Map[Length, ListTricks`Private`array]]/ListTricks`Private`n], 
          ListTricks`Private`partition, ListTricks`Private`p}, 
         ListTricks`Private`partition = Partition[
            PadRight[
            ListTricks`Private`array, {Automatic, Automatic}, 
             ListTricks`Private`p], {
             Length[ListTricks`Private`array], ListTricks`Private`width}, {
             Length[ListTricks`Private`array], ListTricks`Private`width}, 1, 
            ListTricks`Private`p]; ArrayPlot[
           ReplaceAll[
            ArrayFlatten[
             Riffle[
              Transpose[ListTricks`Private`partition], {{
                ConstantArray[
                0, {ListTricks`Private`spacing, 
                  ListTricks`Private`width}]}}]], ListTricks`Private`p -> 
            Sequence[]], ListTricks`Private`options]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MultirowArrayPlot, {
      SyntaxInformation[ListTricks`MultirowArrayPlot] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, 
      AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> 
      None, BaselinePosition -> Automatic, BaseStyle -> {}, ClippingStyle -> 
      None, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
      ColorOutput -> Automatic, ColorRules -> Automatic, ContentSelectable -> 
      Automatic, CoordinatesToolOptions -> Automatic, DataRange -> All, 
      DataReversed -> False, DisplayFunction :> $DisplayFunction, 
      Epilog -> {}, FormatType :> TraditionalForm, Frame -> Automatic, 
      FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, 
      FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, 
      ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, 
      ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxPlotPoints -> 
      DirectedInfinity[1], Mesh -> False, MeshStyle -> 
      GrayLevel[-1 + GoldenRatio], Method -> Automatic, MissingStyle -> 
      Automatic, PixelConstrained -> False, PlotLabel -> None, PlotLegends -> 
      None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> 
      Automatic, PlotRegion -> Automatic, PlotTheme :> $PlotTheme, 
      PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}}, 
    "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`MultirowArrayPlot"], False]]], "Output",ExpressionUUID->\
"90ca1df6-a8ef-4134-a746-e84004d34a51"]
}, Open  ]],

Cell["This plot is too wide to see much:", "Text",ExpressionUUID->"775d39a9-688d-464f-8d8c-878ed8d1ff1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"IntegerExponent", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       SuperscriptBox["2", "12"], "]"}], ",", "2"}], "]"}], ",", 
    SuperscriptBox["2", "10"]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"8d40abf3-524b-4c02-b5e6-387ab4687ef9"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmJiYGBgYYAQPNw8XEDMCaU50PjsBOTZKNTPOsD2s4xw/zOPcP+P
9Pgfzf8j2/+j+X9k+59phPt/pMf/aP4f2f5nHOH+H+nxP5r/R7b/mQAgwrGy

   "], {{0, 0}, {1024, 4}}, {0, 12}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"99c2fe65-2a4d-4b54-9d50-\
ff08fae29d5a"]
}, Open  ]],

Cell["Wrap it into multiple rows:", "Text",ExpressionUUID->"c74b4b25-58be-4fdd-b85c-a56f675b9efb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultirowArrayPlot", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"IntegerExponent", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        SuperscriptBox["2", "12"], "]"}], ",", "2"}], "]"}], ",", 
     SuperscriptBox["2", "10"]}], "]"}], ",", "8"}], "]"}]], "Input",Expressio\
nUUID->"c45fe77c-bf9b-4324-8a53-7664472be881"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2TEOgkAQhtEVERW5hFfiCBS2XIGju4WVjYXFX8x7yYYQQr7QTDLhue3r
NrTWXv0c/SyPZe7n/rnevu6vP55Pf76f7g/h/in+/QBVZefvRT/cB6gqO39H
/XAfoKr0/qFv/wNIyM7fs364D1BVev/Qt/8BJGTnb/7/V/U+QFXp/UM/2n8D
X35Wrg==
   "], {{0, 0}, {128, 102}}, {0, 12}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"dcf0c1b5-e4d0-41d1-9444-\
241933ff7f93"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MultisetComplement", "Input"]], "Subsubsection",ExpressionUUID->"974fda74-231d-4025-a8de-91e28bfaf96a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MultisetComplement"}]], "Input",ExpressionUUID->"1e0e8248-31ec-4bd8-a5bd-75d754d9e294"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultisetComplement\\\", \\\
\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"all\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) removes elements in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"all\\\", \\\"TI\\\"]]\\), respecting multiplicity.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"MultisetComplement", "[", 
                    RowBox[{
                    "ListTricks`Private`baseelements_List", ",", 
                    "ListTricks`Private`removalelements___List"}], "]"}], ":=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"{", "1", "}"}], ",", "1"}], "]"}], "&"}], ",", 
                    "ListTricks`Private`baseelements", ",", 
                    RowBox[{
                    "Join", "[", "ListTricks`Private`removalelements", 
                    "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "MultisetComplement", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`MultisetComplement] = {
                    "ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`MultisetComplement\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"MultisetComplement\\\", \\\
\"[\\\", RowBox[List[SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"all\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) removes elements in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"all\\\", \\\"TI\\\"]]\\), respecting multiplicity.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"MultisetComplement\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"all\", \
\"TI\"]], \",\", StyleBox[\"list\", \"TI\"]]], \"]\"]]\) removes elements in \
\!\(\*StyleBox[\"list\", \"TI\"]\) from \!\(\*SubscriptBox[StyleBox[\"list\", \
\"TI\"], StyleBox[\"all\", \"TI\"]]\), respecting multiplicity.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`MultisetComplement, {ListTricks`MultisetComplement[
         Pattern[ListTricks`Private`baseelements, 
          Blank[List]], 
         Pattern[ListTricks`Private`removalelements, 
          BlankNullSequence[List]]] :> 
       Fold[DeleteCases[#, #2, {1}, 1]& , ListTricks`Private`baseelements, 
         Join[ListTricks`Private`removalelements]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`MultisetComplement, {
      SyntaxInformation[ListTricks`MultisetComplement] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`MultisetComplement"], False]]], "Output",ExpressionUUID->\
"d45b107b-7bb8-4fb8-a7cb-4c02c6ec7ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultisetComplement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "b", ",", "b", ",", "c", ",", "c"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b", ",", "b", ",", "c"}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"ad8e7a9a-056f-4464-943a-d6648347a8cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "c"}], "}"}]], "Output",ExpressionUUID->"c44a92a1-aa97-4d30-969d-95e6ed794050"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Multisets", "Input"],
 StyleBox[" (a variant of ", "Text",
  FontWeight->"Plain"],
 StyleBox["Subsets", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"531caa77-1e68-46ed-841f-b10d8ece1bf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Multisets"}]], "Input",ExpressionUUID->"f85396db-9c55-49a0-bf20-92c44fb00df5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Multisets\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives all multisets of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) elements.\\n\\!\\(\\*RowBox[List[\
\\\"Multisets\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) gives all multisets containing exactly \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) elements.\\n\\!\\(\\*RowBox[List[\
\\\"Multisets\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives all multisets containing \
between \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) elements.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Multisets", "[", 
                    RowBox[{
                    RowBox[{"_", "[", "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", "?", "Positive"}], "}"}], "|", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`n1_Integer", ",", 
                    "ListTricks`Private`n2_Integer"}], "}"}], "/;", 
                    RowBox[{
                    "0", "<", "ListTricks`Private`n1", "\[LessEqual]", 
                    "ListTricks`Private`n2"}]}], ")"}]}]}], "]"}], ":=", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Multisets", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`h_", "[", "]"}], ",", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    RowBox[{"{", "0", "}"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"_Integer", "?", "NonNegative"}]}], "}"}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`h", "[", "]"}], "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Multisets", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`set", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`n_Integer", "?", "NonNegative"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Multisets", "[", 
                    RowBox[{"ListTricks`Private`set", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "ListTricks`Private`n"}], "}"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Multisets", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`set", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`n_Integer", "?", "NonNegative"}], 
                    "}"}]}], "]"}], ":=", 
                    RowBox[{"Multisets", "[", 
                    RowBox[{"ListTricks`Private`set", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`n", ",", "ListTricks`Private`n"}], 
                    "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Multisets", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`set", ":", 
                    RowBox[{"ListTricks`Private`h_", "[", "__", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`n1_Integer", ",", 
                    "ListTricks`Private`n2_Integer"}], "}"}], "/;", 
                    RowBox[{
                    "0", "\[LessEqual]", "ListTricks`Private`n1", 
                    "\[LessEqual]", "ListTricks`Private`n2"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`list", "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`set", "]"}], 
                    "-", "1"}], "}"}]}], "]"}], ",", 
                    "ListTricks`Private`n1"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`h", "@@", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Table", ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"List", "@@", "ListTricks`Private`set"}], ",", 
                    RowBox[{"List", "/@", "#1"}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}]}], "&"}], ")"}], "/@", 
                    RowBox[{
                    RowBox[{"Reap", "[", 
                    RowBox[{
                    RowBox[{"Sow", "[", "ListTricks`Private`list", "]"}], ";", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Most", "[", "ListTricks`Private`list", "]"}], 
                    "\[Equal]", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}], 
                    "-", "1"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "--"}], ";", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"#1", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "++"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#1", "+", "2"}], "\[LessEqual]", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"#1", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", 
                    "1"}]}], "}"}]}]}], "]"}]}], ")"}], "&"}], ")"}], "[", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Except", "[", "0", "]"}], ",", 
                    RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]",
                     "0"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"Sow", "[", "ListTricks`Private`list", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`n2", ",", 
                    RowBox[{"ListTricks`Private`n1", "-", "1"}]}], "}"}], "+", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     ",", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "]"}]}], "-", "1"}], "}"}]}], "]"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Multisets", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Multisets] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Multisets\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Multisets\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives all multisets of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) containing at most \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) elements.\\n\\!\\(\\*RowBox[List[\
\\\"Multisets\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) gives all multisets containing exactly \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) elements.\\n\\!\\(\\*RowBox[List[\
\\\"Multisets\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives all multisets containing \
between \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) elements.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Multisets\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) gives all multisets of \
\!\(\*StyleBox[\"list\", \"TI\"]\) containing at most \!\(\*StyleBox[\"n\", \
\"TI\"]\) elements.\n\!\(\*RowBox[List[\"Multisets\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", RowBox[List[\"{\", \
StyleBox[\"n\", \"TI\"], \"}\"]]]], \"]\"]]\) gives all multisets containing \
exactly \!\(\*StyleBox[\"n\", \"TI\"]\) elements.\n\
\!\(\*RowBox[List[\"Multisets\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\
\"], StyleBox[\"max\", \"TI\"]]]], \"}\"]]]], \"]\"]]\) gives all multisets \
containing between \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"min\
\", \"TI\"]]\) and \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"max\
\", \"TI\"]]\) elements.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Multisets, {ListTricks`Multisets[
         Blank[][], 
         Alternatives[{
           PatternTest[
            Blank[Integer], Positive]}, 
          Condition[{
            Pattern[ListTricks`Private`n1, 
             Blank[Integer]], 
            Pattern[ListTricks`Private`n2, 
             Blank[Integer]]}, 
           Inequality[
           0, Less, ListTricks`Private`n1, LessEqual, 
            ListTricks`Private`n2]]]] :> {}, ListTricks`Multisets[
         Pattern[ListTricks`Private`h, 
          Blank[]][], 
         Alternatives[
          PatternTest[
           Blank[Integer], NonNegative], {0}, {0, 
           PatternTest[
            Blank[Integer], NonNegative]}]] :> {
         ListTricks`Private`h[]}, ListTricks`Multisets[
         Pattern[ListTricks`Private`set, 
          Blank[][
           BlankSequence[]]], 
         PatternTest[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], NonNegative]] :> 
       ListTricks`Multisets[
        ListTricks`Private`set, {0, ListTricks`Private`n}], 
       ListTricks`Multisets[
         Pattern[ListTricks`Private`set, 
          Blank[][
           BlankSequence[]]], {
          PatternTest[
           Pattern[ListTricks`Private`n, 
            Blank[Integer]], NonNegative]}] :> 
       ListTricks`Multisets[
        ListTricks`Private`set, {ListTricks`Private`n, ListTricks`Private`n}],
        ListTricks`Multisets[
         Pattern[ListTricks`Private`set, 
          Pattern[ListTricks`Private`h, 
           Blank[]][
           BlankSequence[]]], 
         Condition[{
           Pattern[ListTricks`Private`n1, 
            Blank[Integer]], 
           Pattern[ListTricks`Private`n2, 
            Blank[Integer]]}, 0 <= ListTricks`Private`n1 <= 
          ListTricks`Private`n2]] :> Module[{ListTricks`Private`list = Prepend[
            Table[0, {Length[ListTricks`Private`set] - 1}], 
            ListTricks`Private`n1]}, 
         Map[Apply[ListTricks`Private`h, 
           Apply[Join, 
            Apply[Table, 
             Transpose[{
               Apply[List, ListTricks`Private`set], 
               Map[List, #]}], {1}]]]& , 
          Part[
           Reap[
           Sow[ListTricks`Private`list]; 
            Do[If[Most[ListTricks`Private`list] == 
                Table[0, {Length[ListTricks`Private`list] - 1}], {
                  Part[ListTricks`Private`list, -1], 
                  Part[ListTricks`Private`list, 1]} = {
                 0, Part[ListTricks`Private`list, -1] + 1}, 
                ((Decrement[
                  Part[ListTricks`Private`list, #]]; Increment[
                  Part[ListTricks`Private`list, # + 1]]; 
                If[# + 2 <= Length[ListTricks`Private`list], {
                    Part[ListTricks`Private`list, -1], 
                    Part[ListTricks`Private`list, # + 1]} = {
                   0, Part[ListTricks`Private`list, -1] + 1}])& )[
                 ListTricks`Occurrence[ListTricks`Private`list, 
                  Except[0], 
                  Missing["NotFound"], 
                  Evaluate[
                   If[Part[ListTricks`Private`list, -1] == 0, -1, -2]]]]]; 
              Sow[ListTricks`Private`list], {Apply[Subtract, 
                 
                 Binomial[{ListTricks`Private`n2, ListTricks`Private`n1 - 1} + 
                  Length[ListTricks`Private`list], 
                  Length[ListTricks`Private`list]]] - 1}]], 2, 1]]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Multisets, {
      SyntaxInformation[ListTricks`Multisets] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`Multisets"], 
   False]]], "Output",ExpressionUUID->"fbef5115-3273-47f5-9682-8bfdc765f836"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multisets", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "3"}], "]"}]], "Input",Expr\
essionUUID->"f69eac06-c61a-428b-b15a-5ca244920730"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "a", "}"}], ",", 
   RowBox[{"{", "b", "}"}], ",", 
   RowBox[{"{", "c", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "c", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "c", ",", "c"}], "}"}]}], "}"}]], "Output",ExpressionUUI\
D->"587f7560-061d-4c09-ac22-bd6de3a2d947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multisets", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "4"}], "]"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",ExpressionUUID->"266052ed-1beb-\
49ac-8469-8fefd2ec7309"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"20a1e286-ac35-48a6-b765-7a6ae31aff2c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Subsets", "Input"],
 " produces increasing tuples:"
}], "Text",ExpressionUUID->"964a918a-8ad1-44ca-ac0e-a530561846be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{
   RowBox[{"Range", "[", "8", "]"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",ExpressionUUID->"601f0ea2-34dc-\
45af-af27-d8ca061da029"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "}"}]], "Output",ExpressionUUI\
D->"11dbbe56-54dd-470f-b600-8feb10c01212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Subsets", "[", 
   RowBox[{
    RowBox[{"Range", "[", "8", "]"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "\[Equal]", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "8", "]"}], ",", "3"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Less", "@@", "#1"}], "&"}]}], "]"}]}]], "Input",ExpressionUUID->\
"0e1ad9ef-3353-4a98-995d-147b32419cf7"],

Cell[BoxData["True"], "Output",ExpressionUUID->"60f57b53-b47d-4ee5-bcb8-794eb95edc7b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Multisets", "Input"],
 " produces nondecreasing tuples:"
}], "Text",ExpressionUUID->"4d05356d-bc8b-450d-85c4-051104aacd22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multisets", "[", 
  RowBox[{
   RowBox[{"Range", "[", "8", "]"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",ExpressionUUID->"52e30911-cc6f-\
4d41-83b1-ab835cfcfb5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "8"}], "}"}]}], "}"}]], "Output",ExpressionUUI\
D->"13d923cb-294e-4a94-ada8-2b9bf4619dd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Multisets", "[", 
   RowBox[{
    RowBox[{"Range", "[", "8", "]"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "\[Equal]", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", "[", "8", "]"}], ",", "3"}], "]"}], ",", 
    RowBox[{
     RowBox[{"LessEqual", "@@", "#1"}], "&"}]}], "]"}]}]], "Input",ExpressionU\
UID->"39dc8b46-4348-40f2-a87e-c3dd7728b2cc"],

Cell[BoxData["True"], "Output",ExpressionUUID->"36979937-63cd-4560-963d-c000c36fd21b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["NextTuple", "Input"]], "Subsubsection",ExpressionUUID->"50600572-540f-4aa2-908c-4bf680f946ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NextTuple"}]], "Input",ExpressionUUID->"a5e0da97-97e6-4457-954e-26dcaf059ad8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"NextTuple\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"tuple\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"alphabet\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the tuple \
following \\!\\(\\*StyleBox[\\\"tuple\\\", \\\"TI\\\"]\\) in the \
lexicographic ordering specified by the order of \
\\!\\(\\*StyleBox[\\\"alphabet\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"NextTuple\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"tuple\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"alphabet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"alphabet\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) gives the following tuple in a mixed base.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"NextTuple", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`tuple", ":", 
                    RowBox[{"ListTricks`Private`h_", "[", "__", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`alphabets", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`h_", "[", "__", "]"}], 
                    "..."}], "}"}]}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"And", "@@", 
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    "UnsameQ", ",", "ListTricks`Private`alphabets", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`tuple", "]"}], 
                    "\[Equal]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`alphabets", "]"}]}], "&&", 
                    RowBox[{"And", "@@", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{"MemberQ", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`alphabets", ",", 
                    "ListTricks`Private`tuple"}], "}"}], ",", "1"}], "]"}]}], 
                    "&&", 
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"ListTricks`Private`tuple", ",", 
                    RowBox[{"ListTricks`Private`h", "@@", 
                    RowBox[{
                    "Last", "/@", "ListTricks`Private`alphabets"}]}]}], 
                    "]"}]}]}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "=", "ListTricks`Private`tuple"}],
                     ",", "ListTricks`Private`i"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`i", "=", 
                    RowBox[{"Length", "[", "ListTricks`Private`t", "]"}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`i", ">", "0"}], ",", 
                    RowBox[{"ListTricks`Private`i", "--"}], ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    RowBox[{"Most", "[", 
                    RowBox[{
                    "ListTricks`Private`alphabets", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], 
                    "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "ListTricks`Private`alphabets", "\[LeftDoubleBracket]", 
                    RowBox[{"ListTricks`Private`i", ",", 
                    RowBox[{"#1", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"Break", "[", "]"}]}], ")"}], "&"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "ListTricks`Private`alphabets", "\[LeftDoubleBracket]", 
                    RowBox[{"ListTricks`Private`i", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ";", 
                    "ListTricks`Private`t"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"NextTuple", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`tuple", ":", 
                    RowBox[{"ListTricks`Private`h_", "[", "__", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`alphabet", ":", 
                    RowBox[{"ListTricks`Private`h_", "[", "__", "]"}]}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{"UnsameQ", "@@", "ListTricks`Private`alphabet"}], 
                    "&&", 
                    RowBox[{"ContainsOnly", "[", 
                    RowBox[{
                    RowBox[{"List", "@@", "ListTricks`Private`tuple"}], ",", 
                    RowBox[{"List", "@@", "ListTricks`Private`alphabet"}]}], 
                    "]"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"ListTricks`Private`tuple", ",", 
                    RowBox[{"ListTricks`Private`h", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", "ListTricks`Private`alphabet", "]"}],
                     "..."}], "]"}]}], "]"}]}]}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "=", "ListTricks`Private`tuple"}],
                     ",", "ListTricks`Private`i"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`i", "=", 
                    RowBox[{"Length", "[", "ListTricks`Private`t", "]"}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`i", ">", "0"}], ",", 
                    RowBox[{"ListTricks`Private`i", "--"}], ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    RowBox[{"Most", "[", "ListTricks`Private`alphabet", "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], 
                    "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "ListTricks`Private`alphabet", "\[LeftDoubleBracket]", 
                    RowBox[{"#1", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"Break", "[", "]"}]}], ")"}], "&"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`t", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`i", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    "ListTricks`Private`alphabet", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}]}]}], "]"}]}], "]"}], ";", 
                    "ListTricks`Private`t"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "NextTuple", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`NextTuple] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`NextTuple\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"NextTuple\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"tuple\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"alphabet\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the tuple \
following \\!\\(\\*StyleBox[\\\"tuple\\\", \\\"TI\\\"]\\) in the \
lexicographic ordering specified by the order of \
\\!\\(\\*StyleBox[\\\"alphabet\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"NextTuple\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"tuple\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"alphabet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"alphabet\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) gives the following tuple in a mixed base.\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"NextTuple\", \"[\", RowBox[List[StyleBox[\"tuple\", \
\"TI\"], \",\", StyleBox[\"alphabet\", \"TI\"]]], \"]\"]]\) gives the tuple \
following \!\(\*StyleBox[\"tuple\", \"TI\"]\) in the lexicographic ordering \
specified by the order of \!\(\*StyleBox[\"alphabet\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"NextTuple\", \"[\", RowBox[List[StyleBox[\"tuple\", \
\"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"alphabet\", \"TI\"], StyleBox[\"1\", \"TR\
\"]], \",\", SubscriptBox[StyleBox[\"alphabet\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]]], \"]\"]]\) \
gives the following tuple in a mixed base.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`NextTuple, {Condition[
         ListTricks`NextTuple[
          Pattern[ListTricks`Private`tuple, 
           Pattern[ListTricks`Private`h, 
            Blank[]][
            BlankSequence[]]], 
          Pattern[ListTricks`Private`alphabets, {
            RepeatedNull[
             Pattern[ListTricks`Private`h, 
              Blank[]][
              BlankSequence[]]]}]], 
         And[
          Apply[And, 
           Apply[UnsameQ, ListTricks`Private`alphabets, {1}]], 
          Length[ListTricks`Private`tuple] == 
          Length[ListTricks`Private`alphabets], 
          Apply[And, 
           MapThread[
           MemberQ, {ListTricks`Private`alphabets, ListTricks`Private`tuple}, 
            1]], 
          Not[
           MatchQ[ListTricks`Private`tuple, 
            Apply[ListTricks`Private`h, 
             Map[Last, ListTricks`Private`alphabets]]]]]] :> 
       Module[{ListTricks`Private`t = ListTricks`Private`tuple, 
          ListTricks`Private`i}, 
         For[ListTricks`Private`i = Length[ListTricks`Private`t], 
           ListTricks`Private`i > 0, 
           Decrement[ListTricks`Private`i], 
           ListTricks`Occurrence[
            Most[
             Part[ListTricks`Private`alphabets, ListTricks`Private`i]], 
            Part[ListTricks`Private`t, ListTricks`Private`i] -> ((
             Part[ListTricks`Private`t, ListTricks`Private`i] = 
              Part[ListTricks`Private`alphabets, ListTricks`Private`i, # + 1]; 
             Break[])& ), Part[ListTricks`Private`t, ListTricks`Private`i] = 
            Part[ListTricks`Private`alphabets, ListTricks`Private`i, 1]]]; 
         ListTricks`Private`t], Condition[
         ListTricks`NextTuple[
          Pattern[ListTricks`Private`tuple, 
           Pattern[ListTricks`Private`h, 
            Blank[]][
            BlankSequence[]]], 
          Pattern[ListTricks`Private`alphabet, 
           Pattern[ListTricks`Private`h, 
            Blank[]][
            BlankSequence[]]]], 
         And[
          Apply[UnsameQ, ListTricks`Private`alphabet], 
          ContainsOnly[
           Apply[List, ListTricks`Private`tuple], 
           Apply[List, ListTricks`Private`alphabet]], 
          Not[
           MatchQ[ListTricks`Private`tuple, 
            ListTricks`Private`h[
             RepeatedNull[
              Last[ListTricks`Private`alphabet]]]]]]] :> 
       Module[{ListTricks`Private`t = ListTricks`Private`tuple, 
          ListTricks`Private`i}, 
         For[ListTricks`Private`i = Length[ListTricks`Private`t], 
           ListTricks`Private`i > 0, 
           Decrement[ListTricks`Private`i], 
           ListTricks`Occurrence[
            Most[ListTricks`Private`alphabet], 
            Part[ListTricks`Private`t, ListTricks`Private`i] -> ((
             Part[ListTricks`Private`t, ListTricks`Private`i] = 
              Part[ListTricks`Private`alphabet, # + 1]; Break[])& ), 
            Part[ListTricks`Private`t, ListTricks`Private`i] = 
            Part[ListTricks`Private`alphabet, 1]]]; ListTricks`Private`t]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`NextTuple, {
      SyntaxInformation[ListTricks`NextTuple] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`NextTuple"], 
   False]]], "Output",ExpressionUUID->"de6e1efb-c5a5-430c-bbde-96adb3a4dae2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextTuple", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",Expr\
essionUUID->"f4956014-d0c1-4b0a-b2d4-490e89043d9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "b"}], "}"}]], "Output",ExpressionUUID->\
"61a875d9-31b3-4063-a614-0e49672ca469"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextTuple", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "d", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",Expr\
essionUUID->"0aba393c-2bc6-45d2-8093-9854a094aa43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "a", ",", "a"}], "}"}]], "Output",ExpressionUUID->\
"7bf81aff-5aca-4d7f-a6bc-addda6f71617"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextTuple", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "1", ",", "5", ",", "1", ",", "2", ",", "2", ",", "4", ",", 
     "5"}], "}"}], ",", 
   RowBox[{"Range", "[", "5", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"dcb37b77-ff8a-4946-a49f-3f94133ca8bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "5", ",", "1", ",", "2", ",", "2", ",", "5", ",", "1"}],
   "}"}]], "Output",ExpressionUUID->"d39cb9d0-a552-4e9f-8511-a6f70655980e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextTuple", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "1", ",", "5", ",", "1", ",", "2", ",", "2", ",", "4", ",", 
     "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "5", ",", "3"}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"917dd5ef-4f26-4ccc-8ab8-f4b9ce1009e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "1", ",", "5", ",", "1", ",", "2", ",", "2", ",", "4", ",", "3"}],
   "}"}]], "Output",ExpressionUUID->"98815b17-022a-4284-b6f1-b71ad20961b4"]
}, Open  ]],

Cell["Count in binary:", "Text",ExpressionUUID->"0340a356-e145-42b7-b908-e8dab5a34a53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NextTuple", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{
    SuperscriptBox["2", "4"], "-", "1"}]}], "]"}]], "Input",ExpressionUUID->\
"58ba56ca-77e8-4501-92c4-3690998087d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"de0e8724-83c6-4372-9d94-64df8b40b95d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromDigits", "[", 
    RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "%"}]], "Input",ExpressionUUI\
D->"1505bc44-1da3-4a2e-9325-d3281fc1a89f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
   ",", "15"}], "}"}]], "Output",ExpressionUUID->"5006c842-5d78-4b7b-a27c-\
3c4e79cc7cb3"]
}, Open  ]],

Cell["Count down in binary;", "Text",ExpressionUUID->"9e626f88-6b6c-4496-97a2-8a3b289c492e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromDigits", "[", 
    RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NextTuple", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{
     SuperscriptBox["2", "4"], "-", "1"}]}], "]"}]}]], "Input",ExpressionUUID->\
"f0f0bccb-f1fb-4708-b3c4-09552e1e799f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9", ",", 
   "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", 
   ",", "0"}], "}"}]], "Output",ExpressionUUID->"2a133a4c-4891-45b4-9eee-\
a180da336a60"]
}, Open  ]],

Cell["Find the next tuple in a mixed base:", "Text",ExpressionUUID->"e6e65da3-0f82-4534-8a0e-a239ca1481d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextTuple", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ExponentialE]", ",", "\[Pi]"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"9dfd2b74-0a96-4a42-8a21-ae458e6efbbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", ",", "1", ",", "\[ExponentialE]"}], "}"}]], "Output",Expression\
UUID->"83c16f06-39cd-485f-ba60-7e1fe9266786"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Occurrence", "Input"],
 StyleBox[" (a variant of ", "Text",
  FontWeight->"Plain"],
 StyleBox["FirstPosition", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"21f8bed9-94bb-4d54-93cd-862fd606f837"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Occurrence"}]], "Input",ExpressionUUID->"7e993a72-b0de-465a-871f-fcb20f7f04b0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the position of \
the first element in \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) that \
matches \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\), or \
Missing[\\\"NotFound\\\"] if no such element is \
found.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\"\\\\[Rule]\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to the position of the matching \
element.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"default\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives \\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\
\\\"]\\) if no element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\) is found.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"default\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) \
finds the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th matching element, \
where negative \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the \
end of the list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`p_", "\[Rule]", 
                    "ListTricks`Private`f_"}], ",", 
                    RowBox[{"ListTricks`Private`default_", ":", 
                    RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "1"}]}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "\[GreaterEqual]", 
                    "ListTricks`Private`n"}], ",", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "]"}], ",", "ListTricks`Private`default"}], "]"}], "&"}],
                     ")"}], "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`p", 
                    ",", 
                    RowBox[{"{", "1", "}"}], ",", "ListTricks`Private`n", ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`p_", "\[Rule]", 
                    "ListTricks`Private`f_"}], ",", 
                    "ListTricks`Private`default_", ",", 
                    RowBox[{
                    "ListTricks`Private`n_Integer", "?", "Negative"}]}], 
                    "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "\[GreaterEqual]", 
                    RowBox[{"-", "ListTricks`Private`n"}]}], ",", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}], 
                    "+", "1", "-", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    "ListTricks`Private`default"}], "]"}], "&"}], ")"}], "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", "ListTricks`Private`list", "]"}], 
                    ",", "ListTricks`Private`p", ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"-", "ListTricks`Private`n"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`p_", ",", 
                    RowBox[{"ListTricks`Private`default_", ":", 
                    RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "ListTricks`Private`NonZero"}], 
                    ":", "1"}]}], "]"}], ":=", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`p", "\[Rule]", "Identity"}], 
                    ",", "ListTricks`Private`default", ",", 
                    "ListTricks`Private`n"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Occurrence", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_.", ",", "_."}], "}"}]}], 
                    "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Occurrence] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldRest", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Occurrence\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the position of \
the first element in \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) that \
matches \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\), or \
Missing[\\\"NotFound\\\"] if no such element is \
found.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\"\\\\[Rule]\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]]]], \\\"]\\\"]]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to the position of the matching \
element.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"default\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives \\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\
\\\"]\\) if no element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\) is found.\\n\\!\\(\\*RowBox[List[\\\"Occurrence\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"default\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) \
finds the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th matching element, \
where negative \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the \
end of the list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Occurrence\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) gives the position \
of the first element in \!\(\*StyleBox[\"list\", \"TI\"]\) that matches \
\!\(\*StyleBox[\"pattern\", \"TI\"]\), or Missing[\"NotFound\"] if no such \
element is found.\n\!\(\*RowBox[List[\"Occurrence\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", RowBox[List[StyleBox[\"pattern\
\", \"TI\"], \"\\[Rule]\", StyleBox[\"f\", \"TI\"]]]]], \"]\"]]\) applies \
\!\(\*StyleBox[\"f\", \"TI\"]\) to the position of the matching element.\n\
\!\(\*RowBox[List[\"Occurrence\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"default\", \
\"TI\"]]], \"]\"]]\) gives \!\(\*StyleBox[\"default\", \"TI\"]\) if no \
element matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) is found.\n\
\!\(\*RowBox[List[\"Occurrence\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"default\", \
\"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) finds the \
\!\(\*StyleBox[\"n\", \"TI\"]\)th matching element, where negative \
\!\(\*StyleBox[\"n\", \"TI\"]\) counts from the end of the list.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Occurrence, {ListTricks`Occurrence[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], Pattern[ListTricks`Private`p, 
           Blank[]] -> Pattern[ListTricks`Private`f, 
           Blank[]], 
         Optional[
          Pattern[ListTricks`Private`default, 
           Blank[]], 
          Missing["NotFound"]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], Positive]], 1]] :> (If[
        Length[#] >= ListTricks`Private`n, 
         ListTricks`Private`f[
          Part[#, -1, 1]], ListTricks`Private`default]& )[
         Position[
         ListTricks`Private`list, ListTricks`Private`p, {1}, 
          ListTricks`Private`n, Heads -> False]], ListTricks`Occurrence[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], Pattern[ListTricks`Private`p, 
           Blank[]] -> Pattern[ListTricks`Private`f, 
           Blank[]], 
         Pattern[ListTricks`Private`default, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], Negative]] :> (If[
        Length[#] >= -ListTricks`Private`n, 
         ListTricks`Private`f[
         Length[ListTricks`Private`list] + 1 - Part[#, -1, 1]], 
         ListTricks`Private`default]& )[
         Position[
          Reverse[ListTricks`Private`list], ListTricks`Private`p, {1}, -
          ListTricks`Private`n, Heads -> False]], ListTricks`Occurrence[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`default, 
           Blank[]], 
          Missing["NotFound"]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], ListTricks`Private`NonZero]], 1]] :> 
       ListTricks`Occurrence[
        ListTricks`Private`list, ListTricks`Private`p -> Identity, 
         ListTricks`Private`default, ListTricks`Private`n]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Occurrence, {
      SyntaxInformation[ListTricks`Occurrence] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldRest, Protected}, "FullName" -> 
    "ListTricks`Occurrence"], False]]], "Output",ExpressionUUID->"0bdb9122-\
6b45-47ae-a1be-60de5ffa4787"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "\[Pi]", ",", "7"}], "}"}], ",", 
   RowBox[{"_", "?", "NumericQ"}]}], "]"}]], "Input",ExpressionUUID->\
"71cb51b9-d174-461a-935d-2703297a5113"],

Cell[BoxData["4"], "Output",ExpressionUUID->"5ed14162-1a29-4153-b9ae-726ac97e81de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"_", "?", "NumericQ"}]}], "]"}]], "Input",ExpressionUUID->\
"25639a50-6ab7-41f5-97b4-80e67fe7515c"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}]], "Output",ExpressionUUID->"189e2b84-127e-49c5-a5d3-016e3915d6c0"]
}, Open  ]],

Cell["Find the tenth occurrence of 3 in the digits of \[Pi].", "Text",ExpressionUUID->"103fa856-ea40-4a6c-b29d-7394eea6ccd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"RealDigits", "[", 
     RowBox[{"N", "[", 
      RowBox[{"Pi", ",", "100"}], "]"}], "]"}], "]"}], ",", "3", ",", 
   RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}], ",", "10"}], 
  "]"}]], "Input",ExpressionUUID->"97352266-ade3-4c03-a219-bf51c4f2d6f8"],

Cell[BoxData["65"], "Output",ExpressionUUID->"91df3194-f0cc-4d4b-a732-d47aa8c42533"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"RealDigits", "[", 
     RowBox[{"N", "[", 
      RowBox[{"Pi", ",", "100"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"3", "\[Rule]", "FactorInteger"}], ",", 
   RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}], ",", "10"}], 
  "]"}]], "Input",ExpressionUUID->"9ea2ab60-e80d-4772-964a-d6c4c0761543"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"46612bed-7ea3-46d0-b825-06a19fc6fc85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "1", ",", "2", ",", "3", ",", "1", ",", "2",
      ",", "3", ",", "1", ",", "2", ",", "3"}], "}"}], ",", "1", ",", 
   RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",ExpressionUUID->"05a75d16-2204-454c-\
aaaf-736a9bc68c9f"],

Cell[BoxData["7"], "Output",ExpressionUUID->"e8f6dd53-3cfb-4220-bb95-47efd2cfab92"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Occurrence", "Input"],
 " only looks for elements on level ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", "1", "}"}], TraditionalForm]],ExpressionUUID->
  "3f916150-292b-4e06-b2d5-ab02a4cbae4c"],
 ":"
}], "Text",ExpressionUUID->"bb0d5f28-7808-4efb-a979-ed60b4d1e412"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Occurrence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", "a"}], "]"}]], "Input",Exp\
ressionUUID->"4ce4f23a-583e-458c-a85d-971c84d69d9c"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotFound\"\>", "]"}]], "Output",ExpressionUUID->"f1f538c4-e29a-435e-a2c0-1fac0a4ac465"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Only", "Input"]], "Subsubsection",ExpressionUUID->"7288f27b-516d-49ab-88a2-baec0a96f273"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Only"}]], "Input",ExpressionUUID->"5770003c-4070-4722-934d-9f9fe8093ec2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Only\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the only element in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has length 1, and gives \
$Failed otherwise.\\n\\!\\(\\*RowBox[List[\\\"Only\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"default\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives \
\\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) does not have a unique \
element.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Only", "[", 
                    RowBox[{
                    RowBox[{"_", "[", "ListTricks`Private`a_", "]"}], ",", 
                    RowBox[{"_", ":", "$Failed"}]}], "]"}], ":=", 
                    "ListTricks`Private`a"}]},
                    {
                    RowBox[{
                    RowBox[{"Only", "[", 
                    RowBox[{
                    RowBox[{"_", "[", "___", "]"}], ",", 
                    RowBox[{"ListTricks`Private`default_", ":", "$Failed"}]}],
                     "]"}], ":=", "ListTricks`Private`default"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Only", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`atom_", "?", "AtomQ"}], ",", 
                    RowBox[{"_", ":", "$Failed"}]}], "]"}], "/;", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Only", "::", "normal"}], "MessageName"], ",", 
                    "1", ",", 
                    RowBox[{"Only", "[", "ListTricks`Private`atom", "]"}]}], 
                    "]"}]}], ":=", "Null"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Only", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Only] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldRest", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Only\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Only\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the only element in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has length 1, and gives \
$Failed otherwise.\\n\\!\\(\\*RowBox[List[\\\"Only\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"default\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives \
\\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) does not have a unique \
element.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Only\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"]]\) \
gives the only element in \!\(\*StyleBox[\"expr\", \"TI\"]\) if \
\!\(\*StyleBox[\"expr\", \"TI\"]\) has length 1, and gives $Failed otherwise.\
\n\!\(\*RowBox[List[\"Only\", \"[\", RowBox[List[StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"default\", \"TI\"]]], \"]\"]]\) gives \
\!\(\*StyleBox[\"default\", \"TI\"]\) if \!\(\*StyleBox[\"expr\", \"TI\"]\) \
does not have a unique element.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Only, {ListTricks`Only[
         Blank[][
          Pattern[ListTricks`Private`a, 
           Blank[]]], 
         Optional[
          Blank[], $Failed]] :> ListTricks`Private`a, ListTricks`Only[
         Blank[][
          BlankNullSequence[]], 
         Optional[
          Pattern[ListTricks`Private`default, 
           Blank[]], $Failed]] :> ListTricks`Private`default, Condition[
         ListTricks`Only[
          PatternTest[
           Pattern[ListTricks`Private`atom, 
            Blank[]], AtomQ], 
          Optional[
           Blank[], $Failed]], 
         Message[
          MessageName[ListTricks`Only, "normal"], 1, 
          HoldForm[ListTricks`Only][ListTricks`Private`atom]]] :> Null}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Only, {
      SyntaxInformation[ListTricks`Only] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldRest, Protected}, "FullName" -> 
    "ListTricks`Only"], False]]], "Output",ExpressionUUID->"ebe492cf-a566-\
4282-91f6-faafd7e9d2b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Only", "[", 
  RowBox[{"{", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Only", "[", 
  RowBox[{"{", "1", "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Only", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "Input",ExpressionUUID->"f11113bc-\
65bd-446a-aa94-95b6c2a85f50"],

Cell[BoxData["$Failed"], "Output",ExpressionUUID->"689b7033-9cb0-40fb-a9a9-ae0b5ab12aea"],

Cell[BoxData["1"], "Output",ExpressionUUID->"38f4ebe6-088f-4e45-8b50-427f2049a37b"],

Cell[BoxData["$Failed"], "Output",ExpressionUUID->"4198af3a-332b-4a88-b591-92035200256c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Only", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "foo"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Only", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", "foo"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Only", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "foo"}], "]"}]}], "Input",ExpressionU\
UID->"f52ac283-d563-4076-8c03-5f1737411320"],

Cell[BoxData["foo"], "Output",ExpressionUUID->"f63066bb-c46d-4ce0-ad7c-26deeef28207"],

Cell[BoxData["1"], "Output",ExpressionUUID->"c585c762-440f-4998-bddc-8f02becd946a"],

Cell[BoxData["foo"], "Output",ExpressionUUID->"58343e83-9da3-4f20-91cc-e8739d3cec5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Orbit", "Input"],
 StyleBox[" (a generalization of ", "Text",
  FontWeight->"Plain"],
 StyleBox["FixedPointList", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"7f6f3e07-3579-4c27-9bff-2ea7d1c1bfab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Orbit"}]], "Input",ExpressionUUID->"eb68e9e7-e73f-4cf1-959c-be985890420e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Orbit\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a list of all \
expressions that can be reached from \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) by applying \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) repeatedly.\\n\
\\!\\(\\*RowBox[List[\\\"Orbit\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) generates a list of all expressions that can be reached from \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) by applying sequences of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Orbit", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`function", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    "ListTricks`Private`expression_"}], "]"}], ":=", 
                    RowBox[{"Orbit", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`function", "}"}], ",", 
                    "ListTricks`Private`expression"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Orbit", "[", 
                    RowBox[{
                    "ListTricks`Private`functions_List", ",", 
                    "ListTricks`Private`expression_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`orbit", "=", 
                    RowBox[{"{", "ListTricks`Private`expression", "}"}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`elementindex", "=", "1"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`elementindex", "\[LessEqual]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`orbit", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`orbit", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"ListTricks`Private`orbit", ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Through", "[", 
                    RowBox[{"ListTricks`Private`functions", "[", 
                    RowBox[{
                    "ListTricks`Private`orbit", "\[LeftDoubleBracket]", 
                    "ListTricks`Private`elementindex", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "Alternatives", "@@", "ListTricks`Private`orbit"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"ListTricks`Private`elementindex", "++"}]}]}], 
                    "]"}], ";", "ListTricks`Private`orbit"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Orbit", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Orbit] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Orbit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Orbit\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) generates a list of all \
expressions that can be reached from \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) by applying \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) repeatedly.\\n\
\\!\\(\\*RowBox[List[\\\"Orbit\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) generates a list of all expressions that can be reached from \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) by applying sequences of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Orbit\", \"[\", RowBox[List[StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"expr\", \"TI\"]]], \"]\"]]\) generates a list of all \
expressions that can be reached from \!\(\*StyleBox[\"expr\", \"TI\"]\) by \
applying \!\(\*StyleBox[\"f\", \"TI\"]\) repeatedly.\n\
\!\(\*RowBox[List[\"Orbit\", \"[\", RowBox[List[RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]], \",\", StyleBox[\"expr\", \"TI\
\"]]], \"]\"]]\) generates a list of all expressions that can be reached from \
\!\(\*StyleBox[\"expr\", \"TI\"]\) by applying sequences of \
\!\(\*SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Orbit, {ListTricks`Orbit[
         Pattern[ListTricks`Private`function, 
          Except[
           Blank[List]]], 
         Pattern[ListTricks`Private`expression, 
          Blank[]]] :> 
       ListTricks`Orbit[{ListTricks`Private`function}, 
         ListTricks`Private`expression], ListTricks`Orbit[
         Pattern[ListTricks`Private`functions, 
          Blank[List]], 
         Pattern[ListTricks`Private`expression, 
          Blank[]]] :> 
       Module[{ListTricks`Private`orbit = {ListTricks`Private`expression}, 
          ListTricks`Private`elementindex = 1}, 
         While[ListTricks`Private`elementindex <= 
           Length[ListTricks`Private`orbit], 
           ListTricks`Private`orbit = Join[ListTricks`Private`orbit, 
              DeleteCases[
               Through[
                ListTricks`Private`functions[
                 Part[
                 ListTricks`Private`orbit, ListTricks`Private`elementindex]]], 
               Apply[Alternatives, ListTricks`Private`orbit]]]; 
           Increment[ListTricks`Private`elementindex]]; 
         ListTricks`Private`orbit]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Orbit, {
      SyntaxInformation[ListTricks`Orbit] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`Orbit"], 
   False]]], "Output",ExpressionUUID->"32a24965-8299-46db-93bb-5b27472b50d7"]
}, Open  ]],

Cell[TextData[{
 "An orbit of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "n"}], "+", "1"}], TraditionalForm]],ExpressionUUID->
  "a6378a90-1593-4700-b382-a5eff1b942a9"],
 " map:"
}], "Text",ExpressionUUID->"efbe5019-7d08-4a56-a406-e9e4366e7ccb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Orbit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "#", "]"}], ",", 
      RowBox[{"#", "/", "2"}], ",", 
      RowBox[{
       RowBox[{"3", "#"}], "+", "1"}]}], "]"}], "&"}], ",", "40"}], 
  "]"}]], "Input",ExpressionUUID->"1657749f-8179-40bc-944b-b9c4d9ccd2d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "40", ",", "20", ",", "10", ",", "5", ",", "16", ",", "8", ",", "4", ",", 
   "2", ",", "1"}], "}"}]], "Output",ExpressionUUID->"2432f778-aaa4-4458-9709-\
5ebe6006b422"]
}, Open  ]],

Cell[TextData[{
 "For the orbit of a single function that ends in a periodic point, ",
 StyleBox["Orbit", "Input"],
 " is similar to ",
 StyleBox["FixedPointList", "Input"],
 ":"
}], "Text",ExpressionUUID->"dc43261b-f5b5-4f1c-9716-3039d4c9c7aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Orbit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{"#", "/", "2"}], "]"}]}], "&"}], ",", "1000"}], "]"}]], "Input",\
ExpressionUUID->"733a389b-5607-4b2e-9573-e06ac742ac71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "501", ",", "251", ",", "126", ",", "64", ",", "33", ",", "17",
    ",", "9", ",", "5", ",", "3", ",", "2"}], "}"}]], "Output",ExpressionUUID->\
"de760fdb-1973-46b1-a520-8c67714e3ddf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{"#", "/", "2"}], "]"}]}], "&"}], ",", "1000"}], "]"}]], "Input",\
ExpressionUUID->"c697e7f5-79b6-495d-ad54-a5fb0c40046b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "501", ",", "251", ",", "126", ",", "64", ",", "33", ",", "17",
    ",", "9", ",", "5", ",", "3", ",", "2", ",", "2"}], "}"}]], "Output",Expre\
ssionUUID->"b224eaff-6320-45d7-89e1-1fc6c92f718f"]
}, Open  ]],

Cell["Compute the orbit of a string under two functions:", "Text",ExpressionUUID->"4ced4781-b292-42b3-8a2a-41159d49c5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Orbit", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"StringReverse", ",", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<b\>\""}], ",", 
          RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<a\>\""}]}], "}"}]}], "]"}], 
      "&"}]}], "}"}], ",", "\"\<aaba\>\""}], "]"}]], "Input",ExpressionUUID->\
"a9c583f5-9e51-4330-b970-d48ad589363b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aaba\"\>", ",", "\<\"abaa\"\>", ",", "\<\"bbab\"\>", 
   ",", "\<\"babb\"\>"}], "}"}]], "Output",ExpressionUUID->"a103e817-c680-\
49ea-a4ff-e691d95c2ad3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["OrbitRepresentatives", "Input"]], "Subsubsection",ExpressionUUID->"41e59a80-cc37-4e45-9c5b-7dfe53772b23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "OrbitRepresentatives"}]], "Input",ExpressionUUID->"f8e55e2a-fb3b-449f-bdee-35f0952f1df6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"OrbitRepresentatives\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives a list of \
representatives from each orbit of the elements in \\!\\(\\*StyleBox[\\\"list\
\\\", \\\"TI\\\"]\\) under applications of \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"OrbitRepresentatives\\\", \
\\\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"list\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) gives representatives of orbits under \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"OrbitRepresentatives", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`function", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], ",", 
                    "ListTricks`Private`list_List"}], "]"}], ":=", 
                    RowBox[{"OrbitRepresentatives", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`function", "}"}], ",", 
                    "ListTricks`Private`list"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"OrbitRepresentatives", "[", 
                    RowBox[{
                    "ListTricks`Private`functions_List", ",", 
                    "ListTricks`Private`list_List"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`representatives", "=", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`remainingelements", "=", 
                    "ListTricks`Private`list"}], ",", 
                    "ListTricks`Private`orbit"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`remainingelements", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`orbit", "=", 
                    RowBox[{"Orbit", "[", 
                    RowBox[{"ListTricks`Private`functions", ",", 
                    RowBox[{
                    "First", "[", "ListTricks`Private`remainingelements", 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"ListTricks`Private`remainingelements", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"ListTricks`Private`remainingelements", ",", 
                    RowBox[{
                    "Alternatives", "@@", "ListTricks`Private`orbit"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ListTricks`Private`representatives", ",", 
                    RowBox[{
                    "FirstSortedElement", "[", "ListTricks`Private`orbit", 
                    "]"}]}], "]"}]}]}], "]"}], ";", 
                    "ListTricks`Private`representatives"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "OrbitRepresentatives", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`OrbitRepresentatives] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`OrbitRepresentatives\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"OrbitRepresentatives\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives a list of \
representatives from each orbit of the elements in \\!\\(\\*StyleBox[\\\"list\
\\\", \\\"TI\\\"]\\) under applications of \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"OrbitRepresentatives\\\", \
\\\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]], \\\",\\\", StyleBox[\\\"list\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) gives representatives of orbits under \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"OrbitRepresentatives\", \"[\", RowBox[List[StyleBox[\
\"f\", \"TI\"], \",\", StyleBox[\"list\", \"TI\"]]], \"]\"]]\) gives a list \
of representatives from each orbit of the elements in \
\!\(\*StyleBox[\"list\", \"TI\"]\) under applications of \
\!\(\*StyleBox[\"f\", \"TI\"]\).\n\!\(\*RowBox[List[\"OrbitRepresentatives\", \
\"[\", RowBox[List[RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]], \",\", StyleBox[\"list\", \"TI\
\"]]], \"]\"]]\) gives representatives of orbits under \
\!\(\*RowBox[List[SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"f\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]]\).", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`OrbitRepresentatives, {
      ListTricks`OrbitRepresentatives[
         Pattern[ListTricks`Private`function, 
          Except[
           Blank[List]]], 
         Pattern[ListTricks`Private`list, 
          Blank[List]]] :> 
       ListTricks`OrbitRepresentatives[{ListTricks`Private`function}, 
         ListTricks`Private`list], ListTricks`OrbitRepresentatives[
         Pattern[ListTricks`Private`functions, 
          Blank[List]], 
         Pattern[ListTricks`Private`list, 
          Blank[List]]] :> 
       Module[{ListTricks`Private`representatives = {}, 
          ListTricks`Private`remainingelements = ListTricks`Private`list, 
          ListTricks`Private`orbit}, 
         While[ListTricks`Private`remainingelements != {}, 
           ListTricks`Private`orbit = 
            ListTricks`Orbit[ListTricks`Private`functions, 
              First[ListTricks`Private`remainingelements]]; 
           ListTricks`Private`remainingelements = 
            DeleteCases[ListTricks`Private`remainingelements, 
              Apply[Alternatives, ListTricks`Private`orbit]]; 
           AppendTo[ListTricks`Private`representatives, 
             ListTricks`FirstSortedElement[ListTricks`Private`orbit]]]; 
         ListTricks`Private`representatives]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`OrbitRepresentatives, {
      SyntaxInformation[ListTricks`OrbitRepresentatives] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`OrbitRepresentatives"], False]]], "Output",ExpressionUUID->\
"91e46323-fd43-46a2-b352-76fd6aceac74"]
}, Open  ]],

Cell[TextData[{
 StyleBox["OrbitRepresentatives", "Input"],
 " is useful for \[OpenCurlyDoubleQuote]modding out\[CloseCurlyDoubleQuote] a \
list of objects by some symmetries."
}], "Text",ExpressionUUID->"208da000-cf7b-4a9b-8dd4-faec51af87d3"],

Cell[TextData[{
 "Find representatives of the equivalence classes of length-",
 Cell[BoxData[
  FormBox["4", TraditionalForm]],ExpressionUUID->
  "e96149ca-d35c-4060-8b18-1ff2080b831a"],
 " binary lists under rotation:"
}], "Text",ExpressionUUID->"e7d4ab6b-0286-4a90-8c1b-ce49b8fd4b3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{"RotateRight", ",", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}]}], "]"}]], "Input",Exp\
ressionUUID->"35bb626d-7ad4-4267-9061-7b3206d59ffc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"2e7e192a-008f-4948-939c-c949e390f6a1"]
}, Open  ]],

Cell["Find representatives under rotation and complementation:", "Text",ExpressionUUID->"a990cc62-8690-4904-929e-23c4ce85083b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"RotateRight", ",", 
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}]}], "}"}], ",", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}]}], "]"}]], "Input",Exp\
ressionUUID->"14c146fe-9556-4814-80b2-e48d6ac99448"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"e7b3f9c7-8f0a-4f36-b964-36c3baae6153"]
}, Open  ]],

Cell["\<\
Find a representative of a string under reversal and interchange of letters:\
\>", "Text",ExpressionUUID->"20b96571-86cc-4a11-bfb6-267784cfc46b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"StringReverse", ",", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<b\>\""}], ",", 
          RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<a\>\""}]}], "}"}]}], "]"}], 
      "&"}]}], "}"}], ",", 
   RowBox[{"{", "\"\<babb\>\"", "}"}]}], "]"}]], "Input",ExpressionUUID->\
"dad64396-c6dc-4867-bed8-8470ffab53ad"],

Cell[BoxData[
 RowBox[{"{", "\<\"aaba\"\>", "}"}]], "Output",ExpressionUUID->"a9a82841-2d85-47a2-98ec-73dbf075ab7c"]
}, Open  ]],

Cell["\<\
Representatives under one operation and then another is in general not the \
same as representatives under both:\
\>", "Text",ExpressionUUID->"95a08b0b-cddf-43e3-9f3e-5d9f0a5711e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "-", "#"}], "&"}], ",", 
   RowBox[{"OrbitRepresentatives", "[", 
    RowBox[{"RotateRight", ",", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}]}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"32a7aa58-321a-4054-8ea1-7bf6d9101822"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",Exp\
ressionUUID->"6617c58b-2da4-4e33-bfdb-27c90085e7f3"]
}, Open  ]],

Cell["\<\
If the list is not closed under the functions, then it's possible to get \
elements that aren't in the original list:\
\>", "Text",ExpressionUUID->"96d589f9-c8c9-458c-88c8-bb70c24ffea2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "#"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"9e06432e-8e05-452f-9140-686021d894e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",ExpressionUUID->"bea156b0-4886-4c78-\
9e9f-69da1d16f572"]
}, Open  ]],

Cell["\<\
If some elements in an orbit aren\[CloseCurlyQuote]t reachable from others, \
it\[CloseCurlyQuote]s possible to get duplicate representatives:\
\>", "Text",ExpressionUUID->"b8327322-5c47-439e-ae78-db3f8f6bdcac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "#", "]"}], ",", 
      RowBox[{"#", "/", "2"}], ",", 
      RowBox[{
       RowBox[{"3", "#"}], "+", "1"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"44b7c2b6-83f5-4e24-ae63-ce3b7e172b54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",ExpressionUUID->"93e44db5-6a3e-409c-8e1f-33b7c18e376a"]
}, Open  ]],

Cell["\<\
If such elements appear sorted in the list, then the representatives will not \
be duplicated:\
\>", "Text",ExpressionUUID->"907bb569-3056-4216-b5ac-6b7dcd9e34b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrbitRepresentatives", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", "#", "]"}], ",", 
      RowBox[{"#", "/", "2"}], ",", 
      RowBox[{
       RowBox[{"3", "#"}], "+", "1"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"bdf393c7-1ff5-4c8e-904f-5dd53004783a"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",ExpressionUUID->"a763da3b-b5a7-494d-8be3-8a0a398a3b05"]
}, Open  ]],

Cell[TextData[{
 StyleBox["OrbitRepresentatives", "Input"],
 " only handles finite orbits:"
}], "Text",ExpressionUUID->"87562602-59ab-4d84-8ce1-2cd88ddc8cd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeConstrained", "[", 
  RowBox[{
   RowBox[{"OrbitRepresentatives", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", "1"}], "&"}], ",", 
     RowBox[{"{", "0", "}"}]}], "]"}], ",", "1"}], "]"}]], "Input",ExpressionU\
UID->"4cc3aec1-82cb-4ed3-bce5-79b0e8ed09ba"],

Cell[BoxData["$Aborted"], "Output",ExpressionUUID->"bfb91778-8222-44e5-a118-baa40104c425"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ParallelSelect", "Input"]], "Subsubsection",ExpressionUUID->"a4222c63-e506-4583-acc0-64b686d6bf78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ParallelSelect"}]], "Input",ExpressionUUID->"046a252c-760d-4522-a7bc-78735e8cc107"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ParallelSelect\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"crit\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) picks out in parallel \
all elements \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\
\\\"i\\\", \\\"TI\\\"]]\\) of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
for which \\!\\(\\*RowBox[List[StyleBox[\\\"crit\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"]]\\) is True.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ParallelSelect", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`f_", ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"ParallelCombine", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", "ListTricks`Private`f", "]"}], ",",
                     "ListTricks`Private`list", ",", 
                    "ListTricks`Private`options"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ParallelSelect", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`ParallelSelect] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "DistributedContexts", "\[RuleDelayed]", 
                    "$DistributedContexts"}], ",", 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`ParallelSelect\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ParallelSelect\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"crit\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) picks out in parallel \
all elements \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\
\\\"i\\\", \\\"TI\\\"]]\\) of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
for which \\!\\(\\*RowBox[List[StyleBox[\\\"crit\\\", \\\"TI\\\"], \\\"[\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]], \\\"]\\\"]]\\) is True.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"ParallelSelect\", \"[\", RowBox[List[StyleBox[\"list\
\", \"TI\"], \",\", StyleBox[\"crit\", \"TI\"]]], \"]\"]]\) picks out in \
parallel all elements \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) of \!\(\*StyleBox[\"list\", \"TI\"]\) for which \!\
\(\*RowBox[List[StyleBox[\"crit\", \"TI\"], \"[\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \"TI\"]], \"]\"]]\) is \
True.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`ParallelSelect, {ListTricks`ParallelSelect[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> ParallelCombine[
         Select[ListTricks`Private`f], ListTricks`Private`list, 
         ListTricks`Private`options]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`ParallelSelect, {
      SyntaxInformation[ListTricks`ParallelSelect] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     DistributedContexts :> $DistributedContexts, Method -> Automatic}, 
    "Attributes" -> {Protected}, "FullName" -> "ListTricks`ParallelSelect"], 
   False]]], "Output",ExpressionUUID->"357218b4-9912-4b22-88ed-1a577175dfca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSelect", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", "PrimeQ"}], "]"}]], "Input",Express\
ionUUID->"9ee40127-8969-4b9b-9302-028bb99e8ea5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",ExpressionUUID\
->"056aaf12-8684-4961-bbac-50c7ca2ac53e"]
}, Open  ]],

Cell[TextData[{
 "ParallelSelect is implemented using ",
 StyleBox["ParallelCombine", "Input"],
 ":"
}], "Text",ExpressionUUID->"f2ad614f-e217-4bf0-9196-57b6696b019f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelCombine", "[", 
  RowBox[{
   RowBox[{"Select", "[", "PrimeQ", "]"}], ",", 
   RowBox[{"Range", "[", "10", "]"}]}], "]"}]], "Input",ExpressionUUID->\
"d014b297-51ab-43eb-8ec9-1392aaf977b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",ExpressionUUID\
->"9f2980c4-ead1-45d1-8393-d88440899554"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["PartitionAfter", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["PartitionBefore", "Input"]
}], "Subsubsection",ExpressionUUID->"dcf14bd6-7aac-47fd-906e-98c591ce3d95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PartitionAfter"}]], "Input",ExpressionUUID->"6288c59b-f683-47c3-838e-64d54b07f60d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionAfter\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) partitions \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) by placing a break after each \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) places a break after each of the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) such elements.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PartitionAfter", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`p_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    "\[Infinity]"}], ":", "\[Infinity]"}]}], "]"}], ":=", 
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`p", 
                    ",", 
                    RowBox[{"{", "1", "}"}], ",", "ListTricks`Private`n", ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}], 
                    ",", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "PartitionAfter", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`PartitionAfter] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`PartitionAfter\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionAfter\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) partitions \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) by placing a break after each \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) places a break after each of the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) such elements.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"PartitionAfter\", \"[\", RowBox[List[StyleBox[\"list\
\", \"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) partitions \
\!\(\*StyleBox[\"list\", \"TI\"]\) by placing a break after each element \
matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"PartitionAfter\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) places a break after each of the first \
\!\(\*StyleBox[\"n\", \"TI\"]\) such elements.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`PartitionAfter, {ListTricks`PartitionAfter[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Alternatives[
            PatternTest[
             Blank[Integer], NonNegative], 
            DirectedInfinity[1]]], 
          DirectedInfinity[1]]] :> 
       ListTricks`PartitionAt[ListTricks`Private`list, 
         DeleteCases[
          Flatten[
           Position[
           ListTricks`Private`list, ListTricks`Private`p, {1}, 
            ListTricks`Private`n, Heads -> False]], 
          Length[ListTricks`Private`list]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`PartitionAfter, {
      SyntaxInformation[ListTricks`PartitionAfter] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`PartitionAfter"], False]]], "Output",ExpressionUUID->\
"a3cbdb62-2b0a-4ce2-95f2-e7be3fd7bac5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionAfter", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{"10", "!"}], ",", "2"}], "]"}], ",", "0"}], "]"}]], "Input",Expre\
ssionUUID->"16f9e4d2-60f5-406e-8439-daa4abdbf0ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",ExpressionUUID->"33751ef8-1b84-\
4145-8ebb-7f4047152c76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PartitionBefore"}]], "Input",ExpressionUUID->"438cb7d9-8401-4581-8801-87f0f6c1b1ef"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionBefore\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) partitions \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) by placing a break before each \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) places a break before the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) such elements.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PartitionBefore", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`p_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{
                    RowBox[{"_Integer", "?", "NonNegative"}], "|", 
                    "\[Infinity]"}], ":", "\[Infinity]"}]}], "]"}], ":=", 
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`p", 
                    ",", 
                    RowBox[{"{", "1", "}"}], ",", "ListTricks`Private`n", ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], "]"}], 
                    "-", "1"}], ",", "0"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "PartitionBefore", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`PartitionBefore] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`PartitionBefore\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionBefore\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) partitions \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) by placing a break before each \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) places a break before the first \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) such elements.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"PartitionBefore\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) partitions \!\(\*StyleBox[\"list\", \"TI\"]\) by placing \
a break before each element matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"PartitionBefore\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) places a break before the first \!\(\*StyleBox[\"n\", \
\"TI\"]\) such elements.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`PartitionBefore, {ListTricks`PartitionBefore[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Alternatives[
            PatternTest[
             Blank[Integer], NonNegative], 
            DirectedInfinity[1]]], 
          DirectedInfinity[1]]] :> 
       ListTricks`PartitionAt[ListTricks`Private`list, 
         DeleteCases[Flatten[
            Position[
            ListTricks`Private`list, ListTricks`Private`p, {1}, 
             ListTricks`Private`n, Heads -> False]] - 1, 0]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`PartitionBefore, {
      SyntaxInformation[ListTricks`PartitionBefore] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`PartitionBefore"], False]]], "Output",ExpressionUUID->\
"8d56e584-6e19-43c5-9c15-c40943f1301e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionBefore", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{"10", "!"}], ",", "2"}], "]"}], ",", "0"}], "]"}]], "Input",Expre\
ssionUUID->"efca39c4-b530-4451-99b2-681a6ccfba68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",ExpressionUUID->"9925ca0f-f93d-\
47b3-af55-23d9424db75c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PartitionAt", "Input"]], "Subsubsection",ExpressionUUID->"96e1fd16-1ce7-472f-9524-6f5f01e5ac6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PartitionAt"}]], "Input",ExpressionUUID->"fc1d365f-d575-40fb-9b7a-744f47590b3e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionAt\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) by placing breaks after positions \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionAt\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) places a break after \
position \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Head", "[", "ListTricks`Private`list", "]"}], 
                    "[", "ListTricks`Private`list", "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`positions", ":", 
                    RowBox[{"{", "__Integer", "}"}]}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Abs", "[", "ListTricks`Private`positions", "]"}],
                     "]"}], "\[LessEqual]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`list", "]"}]}]}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"#1", "+", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "}"}], ",", 
                    RowBox[{
                    "ListTricks`Private`positions", "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`n_Integer", "?", "Negative"}],
                     "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}], 
                    "+", "ListTricks`Private`n"}]}]}]}], "]"}], "]"}], ",", 
                    "2", ",", "1"}], "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{
                    "ListTricks`Private`list_", ",", 
                    "ListTricks`Private`n_Integer"}], "]"}], ":=", 
                    RowBox[{"PartitionAt", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"{", "ListTricks`Private`n", "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "PartitionAt", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`PartitionAt] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`PartitionAt\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PartitionAt\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]]], \\\"]\\\"]]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) by placing breaks after positions \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]]\\).\\n\\!\\(\\*RowBox[List[\\\"PartitionAt\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) places a break after \
position \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"PartitionAt\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \
\"TR\"]]], \"}\"]]]], \"]\"]]\) partitions \!\(\*StyleBox[\"list\", \"TI\"]\) \
by placing breaks after positions \!\(\*RowBox[List[SubscriptBox[StyleBox[\"n\
\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \
\"TR\"]]]\).\n\!\(\*RowBox[List[\"PartitionAt\", \"[\", RowBox[List[StyleBox[\
\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) places a break \
after position \!\(\*StyleBox[\"n\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`PartitionAt, {ListTricks`PartitionAt[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], {}] :> 
       Head[ListTricks`Private`list][ListTricks`Private`list], Condition[
         ListTricks`PartitionAt[
          Pattern[ListTricks`Private`list, 
           Blank[][
            BlankNullSequence[]]], 
          Pattern[ListTricks`Private`positions, {
            BlankSequence[Integer]}]], Max[
           Abs[ListTricks`Private`positions]] <= 
         Length[ListTricks`Private`list]] :> 
       Map[Take[ListTricks`Private`list, # + {1, 0}]& , 
         Partition[
          Sort[
           Join[{0, 
             Length[ListTricks`Private`list]}, 
            ReplaceAll[ListTricks`Private`positions, PatternTest[
               Pattern[ListTricks`Private`n, 
                Blank[Integer]], Negative] :> 
             Length[ListTricks`Private`list] + ListTricks`Private`n]]], 2, 
          1]], ListTricks`PartitionAt[
         Pattern[ListTricks`Private`list, 
          Blank[]], 
         Pattern[ListTricks`Private`n, 
          Blank[Integer]]] :> 
       ListTricks`PartitionAt[
        ListTricks`Private`list, {ListTricks`Private`n}]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`PartitionAt, {
      SyntaxInformation[ListTricks`PartitionAt] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`PartitionAt"], False]]], "Output",ExpressionUUID->"6c3aefba-\
0454-46bc-8a9e-bf470511556b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionAt", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"05c49b5b-239f-423d-8d24-b6620819f80a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "f", ",", "g"}], "}"}]}], "}"}]], "Output",ExpressionUUI\
D->"55e8aa93-2c8a-4178-a82f-cfc35cfd485a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionAt", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", "2"}], "]"}]], "Input",ExpressionUUID->"80fda6b3-ac3b-4ffa-\
844e-c494a5b42e25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d", ",", "e", ",", "f", ",", "g"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"e070b187-9343-41e2-a6af-3b155d977425"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionAt", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4", ",", "4", ",", "5", ",", "7", ",", "7"}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"3ac95696-1a44-46aa-8a5b-ce0df1208a12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "e", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",ExpressionUUID->"a0a83ffd-5c67-41eb-\
81a2-d36368925adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{"PartitionAt", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       SuperscriptBox["2", "7"], "-", "1"}]}], "]"}], ",", 
    SuperscriptBox["2", 
     RowBox[{"Range", "[", "6", "]"}]]}], "]"}]}]], "Input",ExpressionUUID->\
"d72bc782-8b53-4aeb-816d-589d2ec085fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "22", ",", "92", ",", "376", ",", "1520", ",", "6112"}],
   "}"}]], "Output",ExpressionUUID->"7c682a88-9614-4996-9131-390adc22c235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"n", "-", "3"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SuperscriptBox["2", "n"]}], "-", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"36c30723-6f29-4d8e-803b-110dd620f0b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "5", ",", "22", ",", "92", ",", "376", ",", "1520", ",", "6112", 
   ",", "24512", ",", "98176", ",", "392960"}], "}"}]], "Output",ExpressionUUI\
D->"7f24631b-0029-4536-bb51-1c9096261ba2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Period", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["PeriodLength", "Input"]
}], "Subsubsection",ExpressionUUID->"4ffc285a-f93a-4d0a-90b3-4ef7351dfdee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Period"}]], "Input",ExpressionUUID->"7270ad30-836b-4133-99fd-f15dda495d5a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Period\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the repetition \
period of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Period", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], "]"}], ":=", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    "PeriodLength", "[", "ListTricks`Private`list", "]"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Period", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Period] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Period\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Period\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the repetition \
period of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Period\", \"[\", StyleBox[\"list\", \"TI\"], \"]\"]]\
\) gives the repetition period of \!\(\*StyleBox[\"list\", \"TI\"]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Period, {ListTricks`Period[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]]] :> Take[ListTricks`Private`list, 
         ListTricks`PeriodLength[ListTricks`Private`list]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Period, {
      SyntaxInformation[ListTricks`Period] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`Period"], 
   False]]], "Output",ExpressionUUID->"6a7b31ab-a2b2-4efd-9fb8-d22d16c6e6ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Period", "[", 
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "a", ",", "b", ",", "c", ",", "a", ",", 
    "b"}], "}"}], "]"}]], "Input",ExpressionUUID->"04f52ff3-17d5-487d-b3bc-\
a0f8ea72c896"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",ExpressionUUID->\
"0855f5f1-bd14-43dc-b619-a216facf72dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Period", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",Express\
ionUUID->"6dfe67ba-4fa7-4943-af08-057e80caec16"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",ExpressionUUID->"8185a3b2-c2f0-4f58-a67f-2f0f607aabbc"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"Period", "[", "list", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7e0ff538-6671-45ce-bece-c725890e85a3"],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"FindRepeat", "[", "list", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c763ec7e-cc40-4694-84e6-044a80282023"],
 ", but ",
 StyleBox["Period", "Input"],
 " issues a warning if the period does not occur at least twice:"
}], "Text",ExpressionUUID->"48645564-a243-4714-9e7f-85a4f164271e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRepeat", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "a"}], "}"}], "]"}]], "Input",ExpressionUUID->\
"1460a0b3-924a-4652-8adb-f86da697b3b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b"}], "}"}]], "Output",ExpressionUUID->"820ec9e0-8226-4409-ae34-9a53999dfec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FormBox["Period",
   TraditionalForm], "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "a"}], "}"}], "]"}]], "Input",ExpressionUUID->\
"6910307e-9a44-4af2-9f8e-89fefdd5911e"],

Cell[BoxData[
 TemplateBox[{
  "PeriodLength","full",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\"}], \
\\\"}\\\"}]\\) does not repeat in full.\"",2,6,3,18341137933045000834,"Local",
   "ListTricks`PeriodLength"},
  "MessageTemplate2"]], "Message", \
"MSG",ExpressionUUID->"95ee3eba-cdb0-4735-948d-1b4d622402d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b"}], "}"}]], "Output",ExpressionUUID->"794d3113-6602-4104-a410-ad1056aec4dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PeriodLength"}]], "Input",ExpressionUUID->"b1bd225b-42fb-413b-95fc-a89462f73499"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PeriodLength\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
period length of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"PeriodLength", "[", 
                    RowBox[{"_", "[", "]"}], "]"}], "=", "0"}]},
                    {
                    RowBox[{
                    RowBox[{"PeriodLength", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`length", "=", "1"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`length"}], "]"}], "=!=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"-", "ListTricks`Private`length"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`length", "++"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}], 
                    "<", 
                    RowBox[{"2", " ", "ListTricks`Private`length"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"PeriodLength", "::", "full"}], "MessageName"], 
                    ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`length"}], "]"}]}], "]"}]}], "]"}], 
                    ";", "ListTricks`Private`length"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "PeriodLength", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`PeriodLength] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`PeriodLength\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"PeriodLength\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the \
period length of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"PeriodLength\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"]]\) gives the period length of \!\(\*StyleBox[\"list\", \"TI\"]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`PeriodLength, {ListTricks`PeriodLength[
         Blank[][]] -> 0, ListTricks`PeriodLength[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]]] :> 
       Module[{ListTricks`Private`length = 1}, 
         While[Drop[ListTricks`Private`list, ListTricks`Private`length] =!= 
           Drop[ListTricks`Private`list, -ListTricks`Private`length], 
           Increment[ListTricks`Private`length]]; 
         If[Length[ListTricks`Private`list] < 2 ListTricks`Private`length, 
           Message[
            MessageName[ListTricks`PeriodLength, "full"], 
            Take[ListTricks`Private`list, ListTricks`Private`length]]]; 
         ListTricks`Private`length]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`PeriodLength, {
      SyntaxInformation[ListTricks`PeriodLength] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`PeriodLength"], False]]], "Output",ExpressionUUID->"fd12bd6b-\
b79e-4316-9f04-2afd7c86a84a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PeriodLength", "[", 
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "a", ",", "b", ",", "c", ",", "a", ",", 
    "b"}], "}"}], "]"}]], "Input",ExpressionUUID->"5050799e-0025-458a-9b43-\
5ffe511522aa"],

Cell[BoxData["3"], "Output",ExpressionUUID->"c09a92a5-5726-4e7e-8129-b88e21d60a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PeriodLength", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",Express\
ionUUID->"7b814320-510b-4215-9ff9-bf338cd57d3e"],

Cell[BoxData["1"], "Output",ExpressionUUID->"d3ef5dc3-1cec-4b7d-9d29-8b507d0867e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PeriodLength", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2", ",", "1", ",", "1"}], "}"}], 
  "]"}]], "Input",ExpressionUUID->"5f9e336f-fea2-458b-8a04-21f9c5818b2f"],

Cell[BoxData[
 TemplateBox[{
  "PeriodLength","full",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\", \\\
\",\\\", \\\"2\\\"}], \\\"}\\\"}]\\) does not repeat in full.\"",2,184,1,
   18341126569099187888,"Local","ListTricks`PeriodLength"},
  "MessageTemplate2"]], "Message", \
"MSG",ExpressionUUID->"554fa065-1c85-420a-bf85-09b7bf7927dc"],

Cell[BoxData["3"], "Output",ExpressionUUID->"fed0f43d-6d3e-4831-9161-1c890132c529"]
}, Open  ]],

Cell["\<\
Find the period of digits in the binary representation of 1/163:\
\>", "Text",ExpressionUUID->"4557b04e-834a-4584-8ea7-762203ff3d01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Period", "[", 
  RowBox[{"Most", "[", 
   RowBox[{"First", "[", 
    RowBox[{"RealDigits", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{
        FractionBox["1", "163"], ",", "100"}], "]"}], ",", "2"}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",ExpressionUUID->"13c21396-0df9-40da-a6c1-\
33c914607f77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
   "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",ExpressionUUID->\
"ac8f4411-ffcf-4d4a-ab29-27e3ea7441f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "%", "]"}]], "Input",ExpressionUUID->"d077e05b-86fb-43bb-a0d2-4926141fd207"],

Cell[BoxData["162"], "Output",ExpressionUUID->"89b4162d-284f-4c69-8592-ecd484886d72"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Portion", "Input"]], "Subsubsection",ExpressionUUID->"71b084cd-f4bf-4af2-a484-824b3a3dd632"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Portion"}]], "Input",ExpressionUUID->"e428b592-f670-4f8d-b566-fd96f3706f70"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the first half of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
FractionBox[StyleBox[\\\"1\\\", \\\"TR\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]]], \\\"]\\\"]]\\) gives the first \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\)th of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"frac\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\
\"]\\)th fraction of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\\n\\!\\(\
\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"frac\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives parts \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \\\"TI\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Portion", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`frac_", ":", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"ListTricks`Private`i", ":", 
                    RowBox[{"Except", "[", "_List", "]"}], ":", "1"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Portion", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`frac",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`i", ",", "ListTricks`Private`i"}], 
                    "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Portion", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`frac_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`imin_", ",", 
                    "ListTricks`Private`imax_"}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    "1", "\[LessEqual]", "ListTricks`Private`imin", 
                    "\[LessEqual]", "ListTricks`Private`imax", "\[LessEqual]", 
                    FractionBox["1", "ListTricks`Private`frac"]}]}], ":=", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ListTricks`Private`imin", "-", "1"}], ")"}], " ",
                     "ListTricks`Private`frac", " ", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "]"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`StrictFloor", "[", 
                    RowBox[{
                    "ListTricks`Private`imax", " ", "ListTricks`Private`frac",
                     " ", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "]"}], "+", "1"}]}], "}"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Portion", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Portion] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Portion\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the first half of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
FractionBox[StyleBox[\\\"1\\\", \\\"TR\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]]]], \\\"]\\\"]]\\) gives the first \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\)th of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"frac\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"i\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\
\"]\\)th fraction of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\\n\\!\\(\
\\*RowBox[List[\\\"Portion\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"frac\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) gives parts \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \\\"TI\\\"]]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Portion\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"]]\) gives the first half of \!\(\*StyleBox[\"list\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"Portion\", \"[\", RowBox[List[StyleBox[\"list\", \"TI\"], \
\",\", FractionBox[StyleBox[\"1\", \"TR\"], StyleBox[\"n\", \"TI\"]]]], \
\"]\"]]\) gives the first \!\(\*StyleBox[\"n\", \"TI\"]\)th of \
\!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Portion\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"frac\", \"TI\"], \
\",\", StyleBox[\"i\", \"TI\"]]], \"]\"]]\) gives the \!\(\*StyleBox[\"i\", \
\"TI\"]\)th fraction of \!\(\*StyleBox[\"list\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"Portion\", \"[\", RowBox[List[StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"frac\", \"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"}\"]]]], \"]\"]]\) gives parts \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]\) through \!\(\*SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Portion, {ListTricks`Portion[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Optional[
          Pattern[ListTricks`Private`frac, 
           Blank[]], 
          Rational[1, 2]], 
         Optional[
          Pattern[ListTricks`Private`i, 
           Except[
            Blank[List]]], 1]] :> 
       ListTricks`Portion[
        ListTricks`Private`list, ListTricks`Private`frac, {
         ListTricks`Private`i, ListTricks`Private`i}], Condition[
         ListTricks`Portion[
          Pattern[ListTricks`Private`list, 
           Blank[][
            BlankNullSequence[]]], 
          Pattern[ListTricks`Private`frac, 
           Blank[]], {
           Pattern[ListTricks`Private`imin, 
            Blank[]], 
           Pattern[ListTricks`Private`imax, 
            Blank[]]}], 1 <= ListTricks`Private`imin <= 
         ListTricks`Private`imax <= 1/ListTricks`Private`frac] :> 
       Take[ListTricks`Private`list, {
         Ceiling[(ListTricks`Private`imin - 1) ListTricks`Private`frac 
            Length[ListTricks`Private`list]] + 1, 
          ListTricks`Private`StrictFloor[
           ListTricks`Private`imax ListTricks`Private`frac 
            Length[ListTricks`Private`list]] + 1}]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Portion, {
      SyntaxInformation[ListTricks`Portion] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Portion"], False]]], "Output",ExpressionUUID->"9cf7881b-bf9d-\
473f-89fb-24b3eb1f3ded"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{"Range", "[", "11", "]"}], "]"}]], "Input",ExpressionUUID->\
"d8e19c9b-6af0-4623-94ae-a400b413bc9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",ExpressionUUID->"82a0834a-a9b7-48e1-a4f8-1daa363732d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"Range", "[", "11", "]"}], ",", 
   FractionBox["1", "2"]}], "]"}]], "Input",ExpressionUUID->"f5ca5b38-6890-\
4357-a4b3-b2db14f02331"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",ExpressionUUID->"25636555-6a37-484f-a776-ef0de3094dbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"Range", "[", "11", "]"}], ",", 
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Input",ExpressionUUID->\
"1324f60f-fa3d-40fd-84f3-0ec9279f16c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "8", ",", "9", ",", "10", ",", "11"}], "}"}]], "Output",Ex\
pressionUUID->"0534e0c5-46ed-48e9-9f3c-d172e74ce6e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"Range", "[", "11", "]"}], ",", 
   FractionBox["2", "3"]}], "]"}]], "Input",ExpressionUUID->"e7704ee1-fe1c-\
4489-8b95-033a175ae5a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",ExpressionUUID->"d139a9e7-c83b-417d-b0b8-03285e026b68"]
}, Open  ]],

Cell["Extract the middle third of a list:", "Text",ExpressionUUID->"36694df8-4e5b-468c-bf6d-9704b5051e5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", 
   FractionBox["1", "3"], ",", "2"}], "]"}]], "Input",ExpressionUUID->\
"6cfcec4c-e6fe-46cc-acb1-fec0c7fbc28f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", ",",
    "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", 
   ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", 
   "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", 
   ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67"}], 
  "}"}]], "Output",ExpressionUUID->"2fa28271-2168-4f41-ae63-7a807f293222"]
}, Open  ]],

Cell["Extract the final two thirds of a list:", "Text",ExpressionUUID->"20b12de6-38d1-4aba-8f28-4590e6c2ff46"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Portion", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", 
   FractionBox["1", "3"], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"b3efdd61-e9d1-4fc8-9c00-6a0df7463246"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", ",",
    "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", 
   ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", 
   "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", 
   ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", ",", 
   "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", "74", 
   ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", ",", 
   "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", "87", 
   ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", ",", 
   "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", "100"}], 
  "}"}]], "Output",ExpressionUUID->"8a711e68-4a0f-4984-9cef-751fc1a0d30b"]
}, Open  ]],

Cell["A list is always partitioned by its portions:", "Text",ExpressionUUID->"eda33364-5bf4-49ac-86a0-028a9d1465c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Range", "[", "r", "]"}], "\[Equal]", 
      RowBox[{"Join", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Portion", "[", 
          RowBox[{
           RowBox[{"Range", "[", "r", "]"}], ",", 
           FractionBox["1", "n"], ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "]"}]}]], "Input",ExpressionUU\
ID->"d6de785f-c8de-44a5-9027-019e5cc6dc9e"],

Cell[BoxData["True"], "Output",ExpressionUUID->"aa6f2fff-ca4d-4a12-9ad9-f5df4efab16b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["RaggedArrayDepth", "Input"]], "Subsubsection",ExpressionUUID->"7220b506-0528-404e-a69a-583faff691b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RaggedArrayDepth"}]], "Input",ExpressionUUID->"e979e9c6-5df3-4dc4-a034-5fadc40234fd"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RaggedArrayDepth\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the depth \
to which \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) consists of nested \
lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "RaggedArrayDepth", "[", "ListTricks`Private`array_", 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`depth", "=", 
                    RowBox[{"Depth", "[", "ListTricks`Private`array", "]"}]}],
                     ",", 
                    RowBox[{"ListTricks`Private`i", "=", "0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListTricks`Private`i", "\[LessEqual]", 
                    RowBox[{"ListTricks`Private`depth", "-", "2"}]}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"Except", "[", "_List", "]"}], ",", 
                    RowBox[{"{", "ListTricks`Private`i", "}"}]}], "]"}]}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`i", "++"}]}], "]"}], ";", 
                    "ListTricks`Private`i"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "RaggedArrayDepth", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RaggedArrayDepth] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RaggedArrayDepth\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RaggedArrayDepth\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the depth \
to which \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) consists of nested \
lists.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RaggedArrayDepth\", \"[\", StyleBox[\"expr\", \
\"TI\"], \"]\"]]\) gives the depth to which \!\(\*StyleBox[\"expr\", \
\"TI\"]\) consists of nested lists.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RaggedArrayDepth, {ListTricks`RaggedArrayDepth[
         Pattern[ListTricks`Private`array, 
          Blank[]]] :> 
       Module[{ListTricks`Private`depth = Depth[ListTricks`Private`array], 
          ListTricks`Private`i = 0}, While[
           And[ListTricks`Private`i <= ListTricks`Private`depth - 2, 
            Not[
             MemberQ[ListTricks`Private`array, 
              Except[
               Blank[List]], {ListTricks`Private`i}]]], 
           Increment[ListTricks`Private`i]]; ListTricks`Private`i]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RaggedArrayDepth, {
      SyntaxInformation[ListTricks`RaggedArrayDepth] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RaggedArrayDepth"], False]]], "Output",ExpressionUUID->\
"38865d03-bc60-472a-8e43-cad3f9705ff1"]
}, Open  ]],

Cell["This expression is a list of lists of lists:", "Text",ExpressionUUID->"9191e964-2047-4583-899e-37ea3ec0ef10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RaggedArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "h"}], "}"}], ",", 
      RowBox[{"{", "i", "}"}]}], "}"}]}], "}"}], "]"}]], "Input",ExpressionUUI\
D->"a69e6766-2d6f-46a0-ab6e-74ada205e9ef"],

Cell[BoxData["3"], "Output",ExpressionUUID->"b8b45482-d6aa-48a4-aee6-05bf74cded14"]
}, Open  ]],

Cell["This expression is a list but not a list of lists:", "Text",ExpressionUUID->"2cf2af36-2587-4873-86a3-9e67f08ca89f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RaggedArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "c"}], "}"}], "]"}]], "Input",Expres\
sionUUID->"082fa989-36d5-4496-96b8-36f610e9bbe7"],

Cell[BoxData["1"], "Output",ExpressionUUID->"fdf64330-68a2-4d39-bab2-f78090b37ceb"]
}, Open  ]],

Cell[TextData[{
 "For full arrays, ",
 StyleBox["RaggedArrayDepth", "Input"],
 " agrees with ",
 StyleBox["ArrayDepth", "Input"],
 "."
}], "Text",ExpressionUUID->"61fe3cdd-7ed9-408a-b625-be00ff3e48d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RaggedArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}], "]"}]], "Input",Expres\
sionUUID->"a2214221-9f40-4340-887d-89d64beca819"],

Cell[BoxData["2"], "Output",ExpressionUUID->"dd894fb6-b72d-491c-8cd7-d3deb41e3fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}], "]"}]], "Input",Expres\
sionUUID->"67b8d117-ce86-432f-8384-770275ad775a"],

Cell[BoxData["2"], "Output",ExpressionUUID->"4e7e2a2e-14d7-4980-9a67-598f9a8d409e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["RationalRange", "Input"]], "Subsubsection",ExpressionUUID->"9d0dad21-7ce6-49eb-b6ca-ea60e7e3cbdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RationalRange"}]], "Input",ExpressionUUID->"aa0c49c1-69f9-45a6-a14d-6c446796ca2e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RationalRange\\\", \\\"[\\\
\", RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"]\\\"]]\\) generates the list of \
all rational numbers from \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) with denominator at most \\!\\(\\*SubscriptBox[StyleBox[\\\"d\
\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"RationalRange\\\", \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) generates rational numbers with \
denominators \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) through \
\\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"RationalRange", "[", 
                    RowBox[{
                    "ListTricks`Private`intervalmin_", ",", 
                    "ListTricks`Private`intervalmax_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`denominatormin_Integer", "?", 
                    "Positive"}], ",", 
                    RowBox[{
                    "ListTricks`Private`denominatormax_Integer", "?", 
                    "Positive"}], ",", 
                    RowBox[{
                    "ListTricks`Private`denominatorstep_Integer", "?", 
                    "Positive"}]}], "}"}]}], "]"}], "/;", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`intervalmin", ",", 
                    "ListTricks`Private`intervalmax"}], "}"}], "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "]"}]}], ":=", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    "ListTricks`Private`denominator", " ", 
                    "ListTricks`Private`intervalmin"}], "]"}], ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    "ListTricks`Private`denominator", " ", 
                    "ListTricks`Private`intervalmax"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"CoprimeQ", "[", 
                    RowBox[{"#1", ",", "ListTricks`Private`denominator"}], 
                    "]"}], "&"}]}], "]"}], "ListTricks`Private`denominator"], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`denominator", ",", 
                    "ListTricks`Private`denominatormin", ",", 
                    "ListTricks`Private`denominatormax", ",", 
                    "ListTricks`Private`denominatorstep"}], "}"}]}], "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"RationalRange", "[", 
                    RowBox[{
                    "ListTricks`Private`imin_", ",", 
                    "ListTricks`Private`imax_", ",", 
                    RowBox[{
                    "ListTricks`Private`denominatormax_Integer", "?", 
                    "Positive"}]}], "]"}], ":=", 
                    RowBox[{"RationalRange", "[", 
                    RowBox[{
                    "ListTricks`Private`imin", ",", "ListTricks`Private`imax",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "1", ",", "ListTricks`Private`denominatormax", ",", "1"}],
                     "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"RationalRange", "[", 
                    RowBox[{
                    "ListTricks`Private`imin_", ",", 
                    "ListTricks`Private`imax_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`denominatormin_Integer", "?", 
                    "Positive"}], ",", 
                    RowBox[{
                    "ListTricks`Private`denominatormax_Integer", "?", 
                    "Positive"}]}], "}"}]}], "]"}], ":=", 
                    RowBox[{"RationalRange", "[", 
                    RowBox[{
                    "ListTricks`Private`imin", ",", "ListTricks`Private`imax",
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`denominatormin", ",", 
                    "ListTricks`Private`denominatormax", ",", "1"}], "}"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "RationalRange", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RationalRange] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RationalRange\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RationalRange\\\", \\\"[\\\
\", RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]]], \\\"]\\\"]]\\) generates the list of \
all rational numbers from \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) with denominator at most \\!\\(\\*SubscriptBox[StyleBox[\\\"d\
\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"RationalRange\\\", \\\"[\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) generates rational numbers with \
denominators \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) through \
\\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RationalRange\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"max\", \"TI\"]]]], \
\"]\"]]\) generates the list of all rational numbers from \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) with \
denominator at most \!\(\*SubscriptBox[StyleBox[\"d\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]\).\n\!\(\*RowBox[List[\"RationalRange\", \"[\", \
RowBox[List[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \
\",\", RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"d\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"d\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]]], \"}\"]]]], \"]\"]]\) generates rational numbers \
with denominators \!\(\*SubscriptBox[StyleBox[\"d\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]\) through \!\(\*SubscriptBox[StyleBox[\"d\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]\).", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RationalRange, {Condition[
         ListTricks`RationalRange[
          Pattern[ListTricks`Private`intervalmin, 
           Blank[]], 
          Pattern[ListTricks`Private`intervalmax, 
           Blank[]], {
           PatternTest[
            Pattern[ListTricks`Private`denominatormin, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[ListTricks`Private`denominatormax, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[ListTricks`Private`denominatorstep, 
             Blank[Integer]], Positive]}], 
         TrueQ[
          
          Element[{
           ListTricks`Private`intervalmin, ListTricks`Private`intervalmax}, 
           Reals]]] :> Sort[
         Apply[Join, 
          Table[Select[
             Range[
              Ceiling[
              ListTricks`Private`denominator ListTricks`Private`intervalmin], 
              Floor[
              ListTricks`Private`denominator ListTricks`Private`intervalmax]],
              CoprimeQ[#, ListTricks`Private`denominator]& ]/
           ListTricks`Private`denominator, {
           ListTricks`Private`denominator, ListTricks`Private`denominatormin, 
            ListTricks`Private`denominatormax, 
            ListTricks`Private`denominatorstep}]]], ListTricks`RationalRange[
         Pattern[ListTricks`Private`imin, 
          Blank[]], 
         Pattern[ListTricks`Private`imax, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`denominatormax, 
           Blank[Integer]], Positive]] :> 
       ListTricks`RationalRange[
        ListTricks`Private`imin, ListTricks`Private`imax, {
         1, ListTricks`Private`denominatormax, 1}], ListTricks`RationalRange[
         Pattern[ListTricks`Private`imin, 
          Blank[]], 
         Pattern[ListTricks`Private`imax, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`denominatormin, 
            Blank[Integer]], Positive], 
          PatternTest[
           Pattern[ListTricks`Private`denominatormax, 
            Blank[Integer]], Positive]}] :> 
       ListTricks`RationalRange[
        ListTricks`Private`imin, ListTricks`Private`imax, {
         ListTricks`Private`denominatormin, ListTricks`Private`denominatormax,
           1}]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RationalRange, {
      SyntaxInformation[ListTricks`RationalRange] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RationalRange"], False]]], "Output",ExpressionUUID->"2e812043-\
aa24-4b32-8bc9-aa06cb6ebce5"]
}, Open  ]],

Cell[TextData[{
 "List all rational numbers in the interval from ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],ExpressionUUID->
  "5c794a6d-c166-4e0d-81bd-03a88c0ef0af"],
 " to ",
 Cell[BoxData[
  FormBox["3", TraditionalForm]],ExpressionUUID->
  "02132f43-11a6-42cb-9705-6948795fc6fb"],
 " with denominator at most ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],ExpressionUUID->
  "6a4ba712-ec4a-4abc-bcdb-ce5ff3b2e08b"],
 ":"
}], "Text",ExpressionUUID->"f84fec8f-9deb-474c-9510-09e9cf9bfd12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalRange", "[", 
  RowBox[{"2", ",", "3", ",", "10"}], "]"}]], "Input",ExpressionUUID->\
"336c9144-2555-4e4d-b410-ed71a8bb4b43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", 
   FractionBox["21", "10"], ",", 
   FractionBox["19", "9"], ",", 
   FractionBox["17", "8"], ",", 
   FractionBox["15", "7"], ",", 
   FractionBox["13", "6"], ",", 
   FractionBox["11", "5"], ",", 
   FractionBox["20", "9"], ",", 
   FractionBox["9", "4"], ",", 
   FractionBox["16", "7"], ",", 
   FractionBox["23", "10"], ",", 
   FractionBox["7", "3"], ",", 
   FractionBox["19", "8"], ",", 
   FractionBox["12", "5"], ",", 
   FractionBox["17", "7"], ",", 
   FractionBox["22", "9"], ",", 
   FractionBox["5", "2"], ",", 
   FractionBox["23", "9"], ",", 
   FractionBox["18", "7"], ",", 
   FractionBox["13", "5"], ",", 
   FractionBox["21", "8"], ",", 
   FractionBox["8", "3"], ",", 
   FractionBox["27", "10"], ",", 
   FractionBox["19", "7"], ",", 
   FractionBox["11", "4"], ",", 
   FractionBox["25", "9"], ",", 
   FractionBox["14", "5"], ",", 
   FractionBox["17", "6"], ",", 
   FractionBox["20", "7"], ",", 
   FractionBox["23", "8"], ",", 
   FractionBox["26", "9"], ",", 
   FractionBox["29", "10"], ",", "3"}], "}"}]], "Output",ExpressionUUID->\
"6432c0e9-8ec9-454f-91e3-6848cd44ab86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalRange", "[", 
  RowBox[{"2", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "9", ",", "2"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"f149033d-3a1a-4b96-8ab7-2b141ca10e1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["19", "9"], ",", 
   FractionBox["15", "7"], ",", 
   FractionBox["20", "9"], ",", 
   FractionBox["16", "7"], ",", 
   FractionBox["17", "7"], ",", 
   FractionBox["22", "9"], ",", 
   FractionBox["23", "9"], ",", 
   FractionBox["18", "7"], ",", 
   FractionBox["19", "7"], ",", 
   FractionBox["25", "9"], ",", 
   FractionBox["20", "7"], ",", 
   FractionBox["26", "9"]}], "}"}]], "Output",ExpressionUUID->"4ea38d2d-10be-\
4a27-8ff0-a3752c5da0bf"]
}, Open  ]],

Cell[TextData[{
 "Find rational approximations of ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]],ExpressionUUID->
  "c89715e8-2967-4feb-a88e-70df36d3729d"],
 " with small denominators:"
}], "Text",ExpressionUUID->"2af7827a-dd59-4385-b56e-5f300d163973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RationalRange", "[", 
  RowBox[{
   RowBox[{"\[Pi]", "-", 
    FractionBox["1", "100"]}], ",", 
   RowBox[{"\[Pi]", "+", 
    FractionBox["1", "100"]}], ",", "20"}], "]"}]], "Input",ExpressionUUID->\
"10b613fa-7cb5-4cf8-9f3a-f4a4f05faa9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["47", "15"], ",", 
   FractionBox["22", "7"], ",", 
   FractionBox["63", "20"]}], "}"}]], "Output",ExpressionUUID->"f99ab356-d038-\
4aa6-8707-4a4ee2db0330"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ReverseAll", "Input"]], "Subsubsection",ExpressionUUID->"84493758-e980-403d-b1c7-801f615a45d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ReverseAll"}]], "Input",ExpressionUUID->"b10bf871-d546-4c7f-822c-fdfb47158d1f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ReverseAll\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) reverses every \
subexpression in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ReverseAll", "[", 
                    RowBox[{"ListTricks`Private`expr", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], "]"}], ":=", 
                    RowBox[{"ReverseAll", "/@", 
                    RowBox[{
                    "Reverse", "[", "ListTricks`Private`expr", "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "ReverseAll", "[", "ListTricks`Private`expr_", "]"}], ":=",
                     "ListTricks`Private`expr"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "ReverseAll", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "_", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`ReverseAll] = {
                    "ArgumentsPattern" -> {
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`ReverseAll\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"ReverseAll\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) reverses every \
subexpression in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"ReverseAll\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\
\"]]\) reverses every subexpression in \!\(\*StyleBox[\"expr\", \"TI\"]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`ReverseAll, {ListTricks`ReverseAll[
         Pattern[ListTricks`Private`expr, 
          Blank[][
           BlankSequence[]]]] :> Map[ListTricks`ReverseAll, 
         Reverse[ListTricks`Private`expr]], ListTricks`ReverseAll[
         Pattern[ListTricks`Private`expr, 
          Blank[]]] :> ListTricks`Private`expr}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`ReverseAll, {
      SyntaxInformation[ListTricks`ReverseAll] -> {"ArgumentsPattern" -> {
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`ReverseAll"],
    False]]], "Output",ExpressionUUID->"3cea6bf8-5164-4e34-a06b-0067e358e94b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"expr", "=", 
     RowBox[{"a", "[", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"c", ",", "d"}], "]"}], ",", 
       RowBox[{"e", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"g", ",", "h", ",", "i"}], "]"}], ",", 
         RowBox[{"j", "[", "]"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TreeForm", "[", "expr", "]"}], ",", 
     RowBox[{"TreeForm", "[", 
      RowBox[{"ReverseAll", "[", "expr", "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"c33f0b1b-a634-4f1d-a823-e29a86a6f983"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.2026755886059097`, 2.4053511772118195`}, {
      0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
      0.8017837257372732, 0.8017837257372731}, {2.0044593143431833`, 
      1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
      0.8017837257372732, 0.}, {1.6035674514745464`, 0.}, {
      2.4053511772118195`, 0.}, {2.4053511772118195`, 0.8017837257372731}}, {
       {RGBColor[0.55, 0.45, 0.45], 
        LineBox[{{1, 2}, {1, 5}, {2, 3}, {2, 4}, {5, 6}, {5, 10}, {6, 7}, {6, 
         8}, {6, 9}}]}, {
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["a", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 1],
          TagBox[
           RowBox[{"a", "[", 
             RowBox[{
               RowBox[{"b", "[", 
                 RowBox[{"c", ",", "d"}], "]"}], ",", 
               RowBox[{"e", "[", 
                 RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"g", ",", "h", ",", "i"}], "]"}], ",", 
                   RowBox[{"j", "[", "]"}]}], "]"}]}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`a[
            $CellContext`b[$CellContext`c, $CellContext`d], 
            $CellContext`e[
             $CellContext`f[$CellContext`g, $CellContext`h, $CellContext`i], 
             $CellContext`j[]]]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["b", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 2],
          TagBox[
           RowBox[{"b", "[", 
             RowBox[{"c", ",", "d"}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`b[$CellContext`c, $CellContext`d]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["c",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 3],
          TagBox["c", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`c], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["d",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 4],
          TagBox["d", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`d], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["e", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 5],
          TagBox[
           RowBox[{"e", "[", 
             RowBox[{
               RowBox[{"f", "[", 
                 RowBox[{"g", ",", "h", ",", "i"}], "]"}], ",", 
               RowBox[{"j", "[", "]"}]}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`e[
            $CellContext`f[$CellContext`g, $CellContext`h, $CellContext`i], 
            $CellContext`j[]]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["f", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 6],
          TagBox[
           RowBox[{"f", "[", 
             RowBox[{"g", ",", "h", ",", "i"}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`f[$CellContext`g, $CellContext`h, $CellContext`i]], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["g",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 7],
          TagBox["g", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`g], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["h",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 8],
          TagBox["h", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`h], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["i",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 9],
          TagBox["i", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`i], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox[
              RowBox[{"j", "[", "]"}],
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 10],
          TagBox[
           RowBox[{"j", "[", "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`j[]], "Tooltip"]& ]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.2026755886059097`, 2.4053511772118195`}, {
       0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
       0.8017837257372732, 0.8017837257372731}, {2.0044593143431833`, 
       1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
       0.8017837257372732, 0.}, {1.6035674514745464`, 0.}, {
       2.4053511772118195`, 0.}, {2.4053511772118195`, 
       0.8017837257372731}}]& ],
    AspectRatio->NCache[2 3^Rational[-1, 2], 1.1547005383792517`],
    FormatType:>StandardForm,
    FrameTicks->Automatic,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], ",", 
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{1.2026755886059097`, 2.4053511772118195`}, {
      0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
      0.8017837257372732, 0.8017837257372731}, {0., 0.}, {0.8017837257372732, 
      0.}, {1.6035674514745464`, 0.}, {2.0044593143431833`, 
      1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
      2.4053511772118195`, 0.8017837257372731}}, {
       {RGBColor[0.55, 0.45, 0.45], 
        LineBox[{{1, 2}, {1, 8}, {2, 3}, {2, 4}, {4, 5}, {4, 6}, {4, 7}, {8, 
         9}, {8, 10}}]}, {
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["a", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 1],
          TagBox[
           RowBox[{"a", "[", 
             RowBox[{
               RowBox[{"e", "[", 
                 RowBox[{
                   RowBox[{"j", "[", "]"}], ",", 
                   RowBox[{"f", "[", 
                    RowBox[{"i", ",", "h", ",", "g"}], "]"}]}], "]"}], ",", 
               RowBox[{"b", "[", 
                 RowBox[{"d", ",", "c"}], "]"}]}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`a[
            $CellContext`e[
             $CellContext`j[], 
             $CellContext`f[$CellContext`i, $CellContext`h, $CellContext`g]], 
            $CellContext`b[$CellContext`d, $CellContext`c]]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["e", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 2],
          TagBox[
           RowBox[{"e", "[", 
             RowBox[{
               RowBox[{"j", "[", "]"}], ",", 
               RowBox[{"f", "[", 
                 RowBox[{"i", ",", "h", ",", "g"}], "]"}]}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`e[
            $CellContext`j[], 
            $CellContext`f[$CellContext`i, $CellContext`h, $CellContext`g]]], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox[
              RowBox[{"j", "[", "]"}],
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 3],
          TagBox[
           RowBox[{"j", "[", "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`j[]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["f", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 4],
          TagBox[
           RowBox[{"f", "[", 
             RowBox[{"i", ",", "h", ",", "g"}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`f[$CellContext`i, $CellContext`h, $CellContext`g]], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["i",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 5],
          TagBox["i", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`i], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["h",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 6],
          TagBox["h", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`h], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["g",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 7],
          TagBox["g", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`g], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox["b", "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 8],
          TagBox[
           RowBox[{"b", "[", 
             RowBox[{"d", ",", "c"}], "]"}], HoldForm]],
         Annotation[#, 
          HoldForm[
           $CellContext`b[$CellContext`d, $CellContext`c]], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["d",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 9],
          TagBox["d", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`d], "Tooltip"]& ], 
        TagBox[
         TooltipBox[InsetBox[
           FrameBox[
            StyleBox[
             TagBox["c",
              HoldForm], "StandardForm", "Output",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontSize->Scaled[0.05],
             FontColor->GrayLevel[0]],
            Background->RGBColor[1., 1., 0.871],
            FrameStyle->GrayLevel[0.5],
            StripOnInput->False], 10],
          TagBox["c", HoldForm]],
         Annotation[#, 
          HoldForm[$CellContext`c], "Tooltip"]& ]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{1.2026755886059097`, 2.4053511772118195`}, {
       0.4008918628686366, 1.6035674514745462`}, {0., 0.8017837257372731}, {
       0.8017837257372732, 0.8017837257372731}, {0., 0.}, {0.8017837257372732,
        0.}, {1.6035674514745464`, 0.}, {2.0044593143431833`, 
       1.6035674514745462`}, {1.6035674514745464`, 0.8017837257372731}, {
       2.4053511772118195`, 0.8017837257372731}}]& ],
    AspectRatio->NCache[2 3^Rational[-1, 2], 1.1547005383792517`],
    FormatType:>StandardForm,
    FrameTicks->Automatic,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]]}], "}"}]], "Output",ExpressionUUID->\
"21314084-8b53-41a1-abc5-7de66800c741"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["RotateClockwise", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["RotateCounterClockwise", "Input"]
}], "Subsubsection",ExpressionUUID->"b7b9a2ce-8db5-409e-9ffd-ee45ea1cad14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RotateClockwise"}]], "Input",ExpressionUUID->"83cdc2fd-5af7-45ac-aabf-fc31e3e2d393"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateClockwise\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) clockwise \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
times.\\n\\!\\(\\*RowBox[List[\\\"RotateClockwise\\\", \\\"[\\\", StyleBox[\\\
\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates clockwise once.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"RotateClockwise", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array_", "/;", 
                    RowBox[{
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}], 
                    "\[GreaterEqual]", "2"}]}], ",", 
                    RowBox[{"ListTricks`Private`n_Integer", ":", "1"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Nest", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Reverse", "[", "#1", "]"}], "]"}], "&"}], ",", 
                    "ListTricks`Private`array", ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"ListTricks`Private`n", ",", "4"}], "]"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "RotateClockwise", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RotateClockwise] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RotateClockwise\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateClockwise\\\", \\\"[\
\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) clockwise \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
times.\\n\\!\\(\\*RowBox[List[\\\"RotateClockwise\\\", \\\"[\\\", StyleBox[\\\
\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates clockwise once.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RotateClockwise\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \
\"]\"]]\) rotates \!\(\*StyleBox[\"array\", \"TI\"]\) clockwise \
\!\(\*StyleBox[\"n\", \"TI\"]\) times.\n\
\!\(\*RowBox[List[\"RotateClockwise\", \"[\", StyleBox[\"array\", \"TI\"], \
\"]\"]]\) rotates clockwise once.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RotateClockwise, {ListTricks`RotateClockwise[
         Condition[
          Pattern[ListTricks`Private`array, 
           Blank[]], ArrayDepth[ListTricks`Private`array] >= 2], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], 1]] :> Nest[Transpose[
          Reverse[#]]& , ListTricks`Private`array, 
         Mod[ListTricks`Private`n, 4]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RotateClockwise, {
      SyntaxInformation[ListTricks`RotateClockwise] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RotateClockwise"], False]]], "Output",ExpressionUUID->\
"b664f428-8690-4ba8-8fe5-7e8e15782e14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RotateCounterClockwise"}]], "Input",ExpressionUUID->"06e350cb-7eaa-4697-ad12-6200ffebe3b6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateCounterClockwise\\\",\
 \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) counter\[Hyphen]clockwise \\!\
\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
times.\\n\\!\\(\\*RowBox[List[\\\"RotateCounterClockwise\\\", \\\"[\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \
counter\[Hyphen]clockwise once.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"RotateCounterClockwise", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array_", "/;", 
                    RowBox[{
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}], 
                    "\[GreaterEqual]", "2"}]}], ",", 
                    RowBox[{"ListTricks`Private`n_Integer", ":", "1"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Nest", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Reverse", "[", 
                    RowBox[{"Transpose", "[", "#1", "]"}], "]"}], "&"}], ",", 
                    "ListTricks`Private`array", ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"ListTricks`Private`n", ",", "4"}], "]"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "RotateCounterClockwise", "]"}],
                     "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RotateCounterClockwise] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RotateCounterClockwise\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateCounterClockwise\\\",\
 \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) counter\[Hyphen]clockwise \\!\
\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
times.\\n\\!\\(\\*RowBox[List[\\\"RotateCounterClockwise\\\", \\\"[\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \
counter\[Hyphen]clockwise once.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RotateCounterClockwise\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \
\"]\"]]\) rotates \!\(\*StyleBox[\"array\", \"TI\"]\) \
counter\[Hyphen]clockwise \!\(\*StyleBox[\"n\", \"TI\"]\) times.\n\
\!\(\*RowBox[List[\"RotateCounterClockwise\", \"[\", StyleBox[\"array\", \"TI\
\"], \"]\"]]\) rotates counter\[Hyphen]clockwise once.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RotateCounterClockwise, {
      ListTricks`RotateCounterClockwise[
         Condition[
          Pattern[ListTricks`Private`array, 
           Blank[]], ArrayDepth[ListTricks`Private`array] >= 2], 
         Optional[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], 1]] :> Nest[Reverse[
          Transpose[#]]& , ListTricks`Private`array, 
         Mod[ListTricks`Private`n, 4]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RotateCounterClockwise, {
      SyntaxInformation[ListTricks`RotateCounterClockwise] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RotateCounterClockwise"], False]]], "Output",ExpressionUUID->\
"562ddf5d-92df-4b03-94e3-d345269df848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "}"}]}], "}"}], 
  "]"}]], "Input",ExpressionUUID->"265ce052-2c12-42f4-999b-417c578a6ce6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"a", "b", "c", "d"},
    {"e", "f", "g", "h"},
    {"i", "j", "k", "l"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"1e0930fa-295d-43c9-80d1-3d3dcfd18a06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"RotateClockwise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"17d7146c-525e-417d-9e50-09dbf6f74909"],

Cell[BoxData[
 TagBox[GridBox[{
    {"i", "e", "a"},
    {"j", "f", "b"},
    {"k", "g", "c"},
    {"l", "h", "d"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"f2e2bdf0-6ed1-43a1-ba77-7e9f39566d9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"RotateClockwise", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "}"}]}], "}"}], ",", 
    "2"}], "]"}], "]"}]], "Input",ExpressionUUID->"d67da738-ee0b-4749-896e-\
7bd53fb7d13a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"l", "k", "j", "i"},
    {"h", "g", "f", "e"},
    {"d", "c", "b", "a"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"9ece5b38-db29-437b-96b9-6e60c138bdd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"RotateCounterClockwise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "f", ",", "g", ",", "h"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"5aa7aa5b-a8b4-4be0-abe0-5600d0ff7c42"],

Cell[BoxData[
 TagBox[GridBox[{
    {"d", "h", "l"},
    {"c", "g", "k"},
    {"b", "f", "j"},
    {"a", "e", "i"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"62728338-66d3-4be6-9e98-2d72a12fa431"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["RotateLeftTo", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["RotateRightTo", "Input"]
}], "Subsubsection",ExpressionUUID->"3f518332-212c-41cc-a4f5-71caf2286f52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RotateLeftTo"}]], "Input",ExpressionUUID->"e885d496-6d7a-40d8-abc2-9696c876252d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateLeftTo\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) left until an element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) is in the first position. \
If no such element exists, \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) is \
returned.\\n\\!\\(\\*RowBox[List[\\\"RotateLeftTo\\\", \\\"[\\\", StyleBox[\\\
\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) left until a nonzero element \
is in the first position.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "RotateLeftTo", "[", "ListTricks`Private`list_", "]"}], ":=", 
                    RowBox[{"RotateLeftTo", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Except", "[", "0", "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"RotateLeftTo", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`p_"}], "]"}], ":=", 
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`p", 
                    ",", "1"}], "]"}], "-", "1"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "RotateLeftTo", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RotateLeftTo] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RotateLeftTo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateLeftTo\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) left until an element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) is in the first position. \
If no such element exists, \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) is \
returned.\\n\\!\\(\\*RowBox[List[\\\"RotateLeftTo\\\", \\\"[\\\", StyleBox[\\\
\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) left until a nonzero element \
is in the first position.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RotateLeftTo\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) rotates \!\(\*StyleBox[\"list\", \"TI\"]\) left until an \
element matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) is in the first \
position. If no such element exists, \!\(\*StyleBox[\"list\", \"TI\"]\) is \
returned.\n\!\(\*RowBox[List[\"RotateLeftTo\", \"[\", StyleBox[\"list\", \"TI\
\"], \"]\"]]\) rotates \!\(\*StyleBox[\"list\", \"TI\"]\) left until a \
nonzero element is in the first position.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RotateLeftTo, {ListTricks`RotateLeftTo[
         Pattern[ListTricks`Private`list, 
          Blank[]]] :> ListTricks`RotateLeftTo[ListTricks`Private`list, 
         Except[0]], ListTricks`RotateLeftTo[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]]] :> 
       RotateLeft[
        ListTricks`Private`list, 
         ListTricks`Occurrence[
          ListTricks`Private`list, ListTricks`Private`p, 1] - 1]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RotateLeftTo, {
      SyntaxInformation[ListTricks`RotateLeftTo] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RotateLeftTo"], False]]], "Output",ExpressionUUID->"c7063cff-\
7b7d-448f-8cfc-47d00aebbcf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateLeftTo", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"0bca673c-972c-4cdc-9927-d88f0a204c02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", 
   SqrtBox["5"], ",", "1.2`", ",", "\[Pi]"}], "}"}]], "Output",ExpressionUUID->\
"0ac91bcb-5ccc-4d05-bb5c-6d89b5168964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateLeftTo", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "0"}], "}"}], 
  "]"}]], "Input",ExpressionUUID->"a0ad9529-bf59-4aac-84e8-d17de65a6ed0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "2", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",ExpressionUUID->"de6de82b-2fbb-4e9a-92ca-e83b88887c00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RotateRightTo"}]], "Input",ExpressionUUID->"23385554-ac9a-4251-b245-aa2430109b07"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateRightTo\\\", \\\"[\\\
\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) right until an element \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) is in the last \
position. If no such element exists, \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\
\"]\\) is returned.\\n\\!\\(\\*RowBox[List[\\\"RotateRightTo\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \\!\\(\\*StyleBox[\
\\\"list\\\", \\\"TI\\\"]\\) right until a nonzero element is in the last \
position.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "RotateRightTo", "[", "ListTricks`Private`list_", "]"}], ":=", 
                    RowBox[{"RotateRightTo", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Except", "[", "0", "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"RotateRightTo", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`p_"}], "]"}], ":=", 
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`p", 
                    ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "RotateRightTo", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`RotateRightTo] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`RotateRightTo\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"RotateRightTo\\\", \\\"[\\\
\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) right until an element \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) is in the last \
position. If no such element exists, \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\
\"]\\) is returned.\\n\\!\\(\\*RowBox[List[\\\"RotateRightTo\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) rotates \\!\\(\\*StyleBox[\
\\\"list\\\", \\\"TI\\\"]\\) right until a nonzero element is in the last \
position.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"RotateRightTo\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) rotates \!\(\*StyleBox[\"list\", \"TI\"]\) right until \
an element matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) is in the last \
position. If no such element exists, \!\(\*StyleBox[\"list\", \"TI\"]\) is \
returned.\n\!\(\*RowBox[List[\"RotateRightTo\", \"[\", StyleBox[\"list\", \
\"TI\"], \"]\"]]\) rotates \!\(\*StyleBox[\"list\", \"TI\"]\) right until a \
nonzero element is in the last position.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`RotateRightTo, {ListTricks`RotateRightTo[
         Pattern[ListTricks`Private`list, 
          Blank[]]] :> ListTricks`RotateRightTo[ListTricks`Private`list, 
         Except[0]], ListTricks`RotateRightTo[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`p, 
          Blank[]]] :> RotateLeft[ListTricks`Private`list, 
         ListTricks`Occurrence[
         ListTricks`Private`list, ListTricks`Private`p, 1, -1]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`RotateRightTo, {
      SyntaxInformation[ListTricks`RotateRightTo] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`RotateRightTo"], False]]], "Output",ExpressionUUID->"611c9117-\
d20a-4c31-9929-8ef999c293a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateRightTo", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"1bdd3541-c725-4098-8451-e4765d556435"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox["5"], ",", "1.2`", ",", "\[Pi]", ",", "2", ",", "3"}], 
  "}"}]], "Output",ExpressionUUID->"370d5935-5036-4d0a-a246-c744efa43582"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateRightTo", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "0"}], "}"}], 
  "]"}]], "Input",ExpressionUUID->"817d8396-0e9b-4c15-b041-3045bf5c48cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "2"}], 
  "}"}]], "Output",ExpressionUUID->"071584db-ac3e-48c8-ace9-17caa4c3ea56"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Second", "Input"]], "Subsubsection",ExpressionUUID->"4b096df4-c743-4441-baa5-0a71f8ec484e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Second"}]], "Input",ExpressionUUID->"9c67e7ef-5891-4f4c-9af9-8a87b68b0b4b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Second\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the second element \
in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Second\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"default\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the second \
element if it exists, or \\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\\\"]\\) \
otherwise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Second", "[", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{
                    "_", ",", "ListTricks`Private`second_", ",", "___"}], 
                    "]"}], ",", 
                    RowBox[{"_", ":", "$Failed"}]}], "]"}], ":=", 
                    "ListTricks`Private`second"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Second", "[", 
                    RowBox[{"ListTricks`Private`expression", ":", 
                    RowBox[{
                    RowBox[{"_", "[", "]"}], "|", 
                    RowBox[{"_", "[", "_", "]"}]}]}], "]"}], "/;", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Second", "::", "nosecond"}], "MessageName"], ",",
                     "ListTricks`Private`expression"}], "]"}]}], ":=", 
                    "Null"}]},
                    {
                    RowBox[{
                    RowBox[{"Second", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`expression", ":", 
                    RowBox[{
                    RowBox[{"_", "[", "]"}], "|", 
                    RowBox[{"_", "[", "_", "]"}]}]}], ",", 
                    "ListTricks`Private`default_"}], "]"}], ":=", 
                    "ListTricks`Private`default"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Second", "[", 
                    RowBox[{"ListTricks`Private`atom_", "?", "AtomQ"}], "]"}],
                     "/;", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Second", "::", "normal"}], "MessageName"], ",", 
                    "1", ",", 
                    RowBox[{"Second", "[", "ListTricks`Private`atom", "]"}]}],
                     "]"}]}], ":=", "Null"}]},
                    {
                    RowBox[{
                    RowBox[{"Second", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`atom_", "?", "AtomQ"}], ",", 
                    "ListTricks`Private`default_"}], "]"}], ":=", 
                    "ListTricks`Private`default"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Second", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Second] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldRest", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Second\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Second\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the second element \
in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Second\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"default\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the second \
element if it exists, or \\!\\(\\*StyleBox[\\\"default\\\", \\\"TI\\\"]\\) \
otherwise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Second\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"]]\
\) gives the second element in \!\(\*StyleBox[\"expr\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"Second\", \"[\", RowBox[List[StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"default\", \"TI\"]]], \"]\"]]\) gives the second element if \
it exists, or \!\(\*StyleBox[\"default\", \"TI\"]\) otherwise.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Second, {ListTricks`Second[
         Blank[][
          Blank[], 
          Pattern[ListTricks`Private`second, 
           Blank[]], 
          BlankNullSequence[]], 
         Optional[
          Blank[], $Failed]] :> ListTricks`Private`second, Condition[
         ListTricks`Second[
          Pattern[ListTricks`Private`expression, 
           Alternatives[
            Blank[][], 
            Blank[][
             Blank[]]]]], 
         Message[
          MessageName[ListTricks`Second, "nosecond"], 
          ListTricks`Private`expression]] :> Null, ListTricks`Second[
         Pattern[ListTricks`Private`expression, 
          Alternatives[
           Blank[][], 
           Blank[][
            Blank[]]]], 
         Pattern[ListTricks`Private`default, 
          Blank[]]] :> ListTricks`Private`default, Condition[
         ListTricks`Second[
          PatternTest[
           Pattern[ListTricks`Private`atom, 
            Blank[]], AtomQ]], 
         Message[
          MessageName[ListTricks`Second, "normal"], 1, 
          HoldForm[ListTricks`Second][ListTricks`Private`atom]]] :> Null, 
       ListTricks`Second[
         PatternTest[
          Pattern[ListTricks`Private`atom, 
           Blank[]], AtomQ], 
         Pattern[ListTricks`Private`default, 
          Blank[]]] :> ListTricks`Private`default}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Second, {
      SyntaxInformation[ListTricks`Second] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldRest, Protected}, "FullName" -> 
    "ListTricks`Second"], False]]], "Output",ExpressionUUID->"6e848fd8-7ee6-\
4918-b344-73579a054e0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Second", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",ExpressionUUID->\
"5ac9d901-cb58-4459-bae8-ac8d69dcb61e"],

Cell[BoxData["b"], "Output",ExpressionUUID->"46e2de22-60fe-4476-b638-9fd7e51330f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Second", "[", 
  RowBox[{
   RowBox[{"a", "^", "2"}], "+", 
   RowBox[{"b", "^", "2"}]}], "]"}]], "Input",ExpressionUUID->"34aa3ec8-e40b-\
46b4-8e81-0d042f06374d"],

Cell[BoxData[
 SuperscriptBox["b", "2"]], "Output",ExpressionUUID->"d46f7214-d87a-40cf-be1d-a84b85865403"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Second", "[", 
  RowBox[{"{", "}"}], "]"}]], "Input",ExpressionUUID->"ff5cf6bd-db71-4ee2-8911-5fa9d187582e"],

Cell[BoxData[
 TemplateBox[{
  "Second","nosecond",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has no second element.\"",2,
   221,2,18341126569099187888,"Local","ListTricks`Second"},
  "MessageTemplate2"]], "Message", \
"MSG",ExpressionUUID->"c357b282-7bf4-4c1f-9a57-230f2c88f1e2"],

Cell[BoxData[
 RowBox[{"Second", "[", 
  RowBox[{"{", "}"}], "]"}]], "Output",ExpressionUUID->"bbb692f2-06b0-4030-\
9e42-b96e5ffb6954"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Second", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "\"\<none\>\""}], "]"}]], "Input",ExpressionUUID->\
"bf6d1e7a-50c6-4996-9a21-d5950933dfd9"],

Cell[BoxData["\<\"none\"\>"], "Output",ExpressionUUID->"a1d92580-d8c4-43df-b5f4-e1e9f542ec59"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Shear", "Input"]], "Subsubsection",ExpressionUUID->"e1bc0f85-0230-4c13-b071-168b513603a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Shear"}]], "Input",ExpressionUUID->"c86a6296-f7c3-4516-b045-56b50271a304"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Shear\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates each row of \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) by \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with respect to the previous row.\
\\n\\!\\(\\*RowBox[List[\\\"Shear\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"r\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) shears \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\) at the angle \\!\\(\\*RowBox[List[\\\"ArcTan\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"]]\\) and additionally rotates each \
row by \\!\\(\\*StyleBox[\\\"r\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"Shear\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) rotates each subarray on level 1 \
of \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) by the vector \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\) with respect to the previous subarray.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Shear", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"ListTricks`Private`v", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "ListTricks`Private`RealNumberQ"}], 
                    "}"}]}], ",", 
                    RowBox[{"ListTricks`Private`r", ":", 
                    RowBox[{
                    RowBox[{"_", "?", "ListTricks`Private`RealNumberQ"}], "|", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "ListTricks`Private`RealNumberQ"}], 
                    "}"}]}], ":", "0"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}], 
                    "\[GreaterEqual]", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`v", "]"}], "+",
                     "1"}]}], "]"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NumberQ", "[", "ListTricks`Private`r", "]"}], "||", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`v", "]"}], 
                    "\[Equal]", 
                    RowBox[{"Length", "[", "ListTricks`Private`r", "]"}]}]}], 
                    ")"}]}]}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`d", "=", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Axis", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Top", "\[Rule]", "1"}], ",", 
                    RowBox[{"Center", "\[Rule]", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    "+", "1"}], ")"}]}], "]"}]}], ",", 
                    RowBox[{"Bottom", "\[Rule]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`array", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`a_Integer", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "\[LessEqual]", "#1", "\[LessEqual]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`array", "]"}]}], "&"}],
                     ")"}]}], "\[RuleDelayed]", "ListTricks`Private`a"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`a_Integer", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "\[LessEqual]", 
                    RowBox[{"-", "#1"}], "\[LessEqual]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`array", "]"}]}], "&"}],
                     ")"}]}], "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"Length", "[", "ListTricks`Private`array", "]"}], 
                    "+", "ListTricks`Private`a", "+", "1"}]}], ",", 
                    RowBox[{"ListTricks`Private`a_", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Shear", "::", "axis"}], "MessageName"], ",", 
                    "ListTricks`Private`a"}], "]"}], ";", "1"}], ")"}]}]}], 
                    "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RotateRight", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", 
                    "ListTricks`Private`d"}], ")"}], " ", 
                    "ListTricks`Private`v"}], "]"}], "+", 
                    "ListTricks`Private`r"}]}], "]"}], "&"}], ",", 
                    "ListTricks`Private`array"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Shear", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`array_", "/;", 
                    RowBox[{
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}], 
                    "\[GreaterEqual]", "2"}]}], ",", 
                    RowBox[{"ListTricks`Private`x", ":", 
                    RowBox[{"_", "?", "ListTricks`Private`RealNumberQ"}], ":",
                     "1"}], ",", 
                    RowBox[{"ListTricks`Private`r", ":", 
                    RowBox[{"_", "?", "ListTricks`Private`RealNumberQ"}], ":",
                     "0"}], ",", 
                    RowBox[{"ListTricks`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Shear", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", "ListTricks`Private`x", "}"}], ",", 
                    "ListTricks`Private`r", ",", 
                    "ListTricks`Private`options"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Shear", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Shear] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Axis", "\[Rule]", "Top"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Shear\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Shear\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) rotates each row of \
\\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) by \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) with respect to the previous row.\
\\n\\!\\(\\*RowBox[List[\\\"Shear\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"r\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) shears \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\) at the angle \\!\\(\\*RowBox[List[\\\"ArcTan\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"]]\\) and additionally rotates each \
row by \\!\\(\\*StyleBox[\\\"r\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"Shear\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) rotates each subarray on level 1 \
of \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\) by the vector \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \
\\\"}\\\"]]\\) with respect to the previous subarray.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Shear\", \"[\", RowBox[List[StyleBox[\"array\", \"TI\
\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) rotates each row of \
\!\(\*StyleBox[\"array\", \"TI\"]\) by \!\(\*StyleBox[\"n\", \"TI\"]\) with \
respect to the previous row.\n\!\(\*RowBox[List[\"Shear\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"], \
\",\", StyleBox[\"r\", \"TI\"]]], \"]\"]]\) shears \!\(\*StyleBox[\"array\", \
\"TI\"]\) at the angle \!\(\*RowBox[List[\"ArcTan\", \"[\", StyleBox[\"x\", \
\"TI\"], \"]\"]]\) and additionally rotates each row by \!\(\*StyleBox[\"r\", \
\"TI\"]\).\n\!\(\*RowBox[List[\"Shear\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]]], \"]\"]]\) rotates each \
subarray on level 1 of \!\(\*StyleBox[\"array\", \"TI\"]\) by the vector \!\(\
\*RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \
\"}\"]]\) with respect to the previous subarray.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[DownValues, ListTricks`Shear, {Condition[
         ListTricks`Shear[
          Pattern[ListTricks`Private`array, 
           Blank[]], 
          Pattern[ListTricks`Private`v, {
            PatternTest[
             BlankNullSequence[], ListTricks`Private`RealNumberQ]}], 
          Optional[
           Pattern[ListTricks`Private`r, 
            Alternatives[
             PatternTest[
              Blank[], ListTricks`Private`RealNumberQ], {
              PatternTest[
               BlankNullSequence[], ListTricks`Private`RealNumberQ]}]], 0], 
          OptionsPattern[]], 
         And[
         ArrayDepth[ListTricks`Private`array] >= 
          Max[2, Length[ListTricks`Private`v] + 1], 
          Or[
           NumberQ[ListTricks`Private`r], Length[ListTricks`Private`v] == 
           Length[ListTricks`Private`r]]]] :> 
       With[{ListTricks`Private`d = Replace[
            OptionValue[Axis], {
            Top -> 1, Center -> 
             Floor[(Length[ListTricks`Private`array] + 1)/2], Bottom -> 
             Length[ListTricks`Private`array], PatternTest[
               Pattern[ListTricks`Private`a, 
                Blank[Integer]], 1 <= # <= 
               Length[ListTricks`Private`array]& ] :> ListTricks`Private`a, 
             PatternTest[
               Pattern[ListTricks`Private`a, 
                Blank[Integer]], 1 <= -# <= 
               Length[ListTricks`Private`array]& ] :> 
             Length[ListTricks`Private`array] + ListTricks`Private`a + 1, 
             Pattern[ListTricks`Private`a, 
               Blank[]] :> (Message[
                MessageName[ListTricks`Shear, "axis"], ListTricks`Private`a]; 
              1)}]}, 
         MapIndexed[
         RotateRight[#, 
           Floor[(First[#2] - ListTricks`Private`d) ListTricks`Private`v] + 
           ListTricks`Private`r]& , ListTricks`Private`array]], 
       ListTricks`Shear[
         Condition[
          Pattern[ListTricks`Private`array, 
           Blank[]], ArrayDepth[ListTricks`Private`array] >= 2], 
         Optional[
          Pattern[ListTricks`Private`x, 
           PatternTest[
            Blank[], ListTricks`Private`RealNumberQ]], 1], 
         Optional[
          Pattern[ListTricks`Private`r, 
           PatternTest[
            Blank[], ListTricks`Private`RealNumberQ]], 0], 
         Pattern[ListTricks`Private`options, 
          OptionsPattern[]]] :> 
       ListTricks`Shear[
        ListTricks`Private`array, {ListTricks`Private`x}, 
         ListTricks`Private`r, ListTricks`Private`options]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Shear, {
      SyntaxInformation[ListTricks`Shear] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Axis -> Top}, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Shear"], False]]], "Output",ExpressionUUID->"a11e0b6d-5b6f-\
4133-946e-4f0f5acf4468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Shear", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Range", "[", "10", "]"}], ",", 
     RowBox[{"{", "10", "}"}]}], "]"}], "]"}], "]"}]], "Input",ExpressionUUID->\
"736c2ab0-d86c-426a-a627-002919451ae3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
    {"9", "10", "1", "2", "3", "4", "5", "6", "7", "8"},
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"7", "8", "9", "10", "1", "2", "3", "4", "5", "6"},
    {"6", "7", "8", "9", "10", "1", "2", "3", "4", "5"},
    {"5", "6", "7", "8", "9", "10", "1", "2", "3", "4"},
    {"4", "5", "6", "7", "8", "9", "10", "1", "2", "3"},
    {"3", "4", "5", "6", "7", "8", "9", "10", "1", "2"},
    {"2", "3", "4", "5", "6", "7", "8", "9", "10", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"04cdf055-49e6-4a87-bc2c-44a5610e3293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Shear", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", 
      RowBox[{"{", "10", "}"}]}], "]"}], ",", 
    FractionBox["1", "2"]}], "]"}], "]"}]], "Input",ExpressionUUID->"d5038034-\
948a-4515-82ff-f88178e72610"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
    {"9", "10", "1", "2", "3", "4", "5", "6", "7", "8"},
    {"9", "10", "1", "2", "3", "4", "5", "6", "7", "8"},
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"7", "8", "9", "10", "1", "2", "3", "4", "5", "6"},
    {"7", "8", "9", "10", "1", "2", "3", "4", "5", "6"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"556791ce-8978-4fa6-8072-f6af6a667911"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Shear", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", 
      RowBox[{"{", "10", "}"}]}], "]"}], ",", "2", ",", "3"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"7d0f6ba0-9997-4ba8-8dd3-de9408102dbb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"6", "7", "8", "9", "10", "1", "2", "3", "4", "5"},
    {"4", "5", "6", "7", "8", "9", "10", "1", "2", "3"},
    {"2", "3", "4", "5", "6", "7", "8", "9", "10", "1"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"6", "7", "8", "9", "10", "1", "2", "3", "4", "5"},
    {"4", "5", "6", "7", "8", "9", "10", "1", "2", "3"},
    {"2", "3", "4", "5", "6", "7", "8", "9", "10", "1"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"dd538c6f-9363-43fa-965a-f6b805e08397"]
}, Open  ]],

Cell[TextData[{
 "Use the option ",
 StyleBox["Axis", "Input"],
 " to specify a subarray that is to remain in its original rotation.\n\
Possible values are ",
 StyleBox["Top", "Input"],
 ", ",
 StyleBox["Center", "Input"],
 ", ",
 StyleBox["Bottom", "Input"],
 ", or the position of the subarray."
}], "Text",ExpressionUUID->"e23fb646-ead6-448f-b255-b148b13d5821"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Shear", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", 
      RowBox[{"{", "10", "}"}]}], "]"}], ",", "3", ",", 
    RowBox[{"Axis", "\[Rule]", "5"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"ea3ca7c3-5962-471f-a1d1-cad3cfcfb62c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"3", "4", "5", "6", "7", "8", "9", "10", "1", "2"},
    {"10", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
    {"7", "8", "9", "10", "1", "2", "3", "4", "5", "6"},
    {"4", "5", "6", "7", "8", "9", "10", "1", "2", "3"},
    {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"8", "9", "10", "1", "2", "3", "4", "5", "6", "7"},
    {"5", "6", "7", "8", "9", "10", "1", "2", "3", "4"},
    {"2", "3", "4", "5", "6", "7", "8", "9", "10", "1"},
    {"9", "10", "1", "2", "3", "4", "5", "6", "7", "8"},
    {"6", "7", "8", "9", "10", "1", "2", "3", "4", "5"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"103bef06-045d-462e-b79e-ebafb0efb6ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Shear", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"30", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", "100"}], "]"}], ",", 
     RowBox[{"Axis", "\[Rule]", "Bottom"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",ExpressionUUID->\
"ae50a974-b493-4f2f-b176-26578ab32af6"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
afwlMCJ+A50GPXE=
   "], {{0, 0}, {201, 101}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"43e815e1-90cb-4c6e-aa17-\
fc49aa8bcd47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Shear", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"30", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "0"}], "}"}], ",", "100"}], "]"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"Axis", "\[Rule]", "Bottom"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]], "Input",ExpressionUUID->\
"713cf6df-bae0-4450-b67d-9843043e74b1"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
/4SRydp/DWQ9cQ==
   "], {{0, 0}, {201, 101}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"58fdde64-df66-4564-b9b4-\
b212ec5c592c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Shear", "[", 
    RowBox[{
     RowBox[{"PadLeft", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        SuperscriptBox["3", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "255"}], "]"}]], ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "None"}], ",", 
   RowBox[{"PixelConstrained", "\[Rule]", "1"}]}], "]"}]], "Input",ExpressionU\
UID->"dc80ccdb-1559-43af-a544-73ad4105243f"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
frYpbHyw7UCehxeOu1O8bQWd43KHD1592eTnm4qyDrYpE/6R/BniVHvmtvuY
OXRxdLhs8vONZ5Tm9BTI9dCX4y68dcrO7ZJTTMkXzq/2k00PKTqDcSbmkKvj
rs/KVBTRdLu7K6xenPxK4xmlH1DmoS/VJmconXP14JIDm4vOZZNfbXkOWUew
Ve5zQO7UlOOc68eVPNaI66v9WssJNuWlYSCHrrxWmumcu55XSjdczya/1Va5
8LN4iRrAV5rhjvW4UuF2P95c7ecbDxbKsNRx13SKTjiZc1aeaibIKPsfurnP
2lZ91wl5USPw9ThY4yI9SOYRcgi92m+0CoQv7/Kzkj8+4+aiqsZ6jpybrkeT
P2n5BoSzcbCXK/gox13A1xMKoXXZ5PdbUsZnY57kMVFo69jAh6wUm0Xq1X6r
JWbW2Xg/TaavT2S3eyg6rVeXTf6s4QOdjf2QnrKeoMMGOWt1EjBH56v9fiu/
yNmYOKKqyx3c40MCafaeG/iKbX0VoqdCniFhKE/z3EO8+ZHxan/W1jcheiYs
iNARWQ/wPoBxbrtc8hptxY0eCvVwMvAn2XJfvlXx1wFX++P2EEd5ErxdBmqS
7X7fGIlfFyWv0/SMcn/rbxj1hZe/7tL3jjzJXzZ5tcajiJ4i/YieaCLZ2kaa
8nPZ5PWaAwlDpILws/N4uB/y0/9qr9Z4Yq/wQqXJ95HKtvyu3f9qr9Y40oaW
FBrVkenbZNzZ/2qv1nLkKqXTXKGQtI7FTT/3v9qrNZcJ1ZNO6cjFl950WI+W
V3vVppqRpxMOXX7Bw2NOw1cxeZvGl7x5OoGi48Wq+nzZdbXXbnnwizEaho4X
q+pfjyZv1/j2t/S1ex4I+RJYpFD2r/YmrRRMOVrxzELV5yjWpu9qb9DyheKc
vqZ+OMf0VaVqztXequVrLs5W+TvJPB/e+uVryOvR5K2bD76DudBvasp8JXMV
kzdvYiF1ZYpKq5zoe8jLJm/d+GPV+gJST/DdENV92eQdWh7L8+zYcoie5ufi
xcnbt0mmeUzXH7rwTvpdNnmXxkOjqdlf3u9z2NXevFHTzc0clXUk68sm79Yq
J6schO+fcyTLuflq79PyB0QdhOdzf9t12eQdm89ceULUh1y42ru1fejKa/7u
eP3Z5P0bf3Hn0YSv7OeR5Wrv2lJKyq9TWa5i8hFtvvXNM0n+/ptvi6/23o2n
kXlknFPy9VeTD2vH4YtnxuvPJh/X/F+x6L+buP5s8pFN323NX4bnO8mPXdh3
bjytH//9ysXJx7Xy88mcxS6bfGzjv1WZ2n49m3x4m69Rcua6qsnHNx7d91/n
r/aBzY8m159NnqTpD47Xo8mzNP8x+LLJk7QYpS+bPE2r/N9lk6dp/BfdH72S
q6XpvyC62rO06//Z5Anb9WjyhO2qJk/YLps8Ybs4ecL2f4ZPMP0=
   "], {{0, 0}, Offset[{405, 256}, {0, 0}]}, {0, 1}],
  Frame->None,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{405, 256},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{0, 405}, {0, 256}},
  PlotRangeClipping->True]], "Output",ExpressionUUID->"7700aa2a-33df-4462-\
96b0-15da92fe1145"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       SuperscriptBox["3", "3"], "]"}], ",", "3"}], "]"}], ",", "3"}], 
   "]"}]}]], "Input",ExpressionUUID->"b4b4fd8f-12f6-4529-9ec8-a9bfe4d36a82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3"},
       {"4", "5", "6"},
       {"7", "8", "9"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"10", "11", "12"},
       {"13", "14", "15"},
       {"16", "17", "18"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"19", "20", "21"},
       {"22", "23", "24"},
       {"25", "26", "27"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",ExpressionUUID->"2be5653d-\
f17d-466e-9b85-bfea6960c798"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"Shear", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         SuperscriptBox["3", "3"], "]"}], ",", "3"}], "]"}], ",", "3"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]], "Input",ExpressionUUID->\
"5ed880dc-a007-4797-b274-185c4454e75c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "3"},
       {"4", "5", "6"},
       {"7", "8", "9"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"17", "18", "16"},
       {"11", "12", "10"},
       {"14", "15", "13"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"24", "22", "23"},
       {"27", "25", "26"},
       {"21", "19", "20"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",ExpressionUUID->"4a70b943-\
68fc-4bf4-82df-ed7a8b489d79"]
}, Open  ]],

Cell["A pyramid and a sheared pyramid:", "Text",ExpressionUUID->"16d77ce8-6d22-4ce2-82cd-208ce29a4598"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pyramid", "=", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1022", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "1", "}"}], "}"}], ",", "0"}], "}"}], ",", "10"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Cuboid", "/@", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#3", ",", "#2", ",", 
            RowBox[{"-", "#1"}]}], "}"}], "&"}], ")"}], "@@@", 
        RowBox[{"Position", "[", 
         RowBox[{"pyramid", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Cuboid", "/@", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#3", ",", "#2", ",", 
            RowBox[{"-", "#1"}]}], "}"}], "&"}], ")"}], "@@@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Shear", "[", 
           RowBox[{"pyramid", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"Axis", "\[Rule]", "Bottom"}]}], "]"}], ",", "1"}], 
         "]"}]}]}], "]"}]}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"94ec43a7-5e86-4880-bdfc-ce6e327ab832"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{CuboidBox[{11, 11, -1}], CuboidBox[{10, 10, -2}], 
     CuboidBox[{11, 10, -2}], CuboidBox[{12, 10, -2}], 
     CuboidBox[{10, 11, -2}], CuboidBox[{11, 11, -2}], 
     CuboidBox[{12, 11, -2}], CuboidBox[{10, 12, -2}], 
     CuboidBox[{11, 12, -2}], CuboidBox[{12, 12, -2}], CuboidBox[{9, 9, -3}], 
     CuboidBox[{10, 9, -3}], CuboidBox[{11, 9, -3}], CuboidBox[{12, 9, -3}], 
     CuboidBox[{13, 9, -3}], CuboidBox[{9, 10, -3}], CuboidBox[{10, 10, -3}], 
     CuboidBox[{11, 10, -3}], CuboidBox[{12, 10, -3}], 
     CuboidBox[{13, 10, -3}], CuboidBox[{9, 11, -3}], CuboidBox[{10, 11, -3}],
      CuboidBox[{11, 11, -3}], CuboidBox[{12, 11, -3}], 
     CuboidBox[{13, 11, -3}], CuboidBox[{9, 12, -3}], CuboidBox[{10, 12, -3}],
      CuboidBox[{11, 12, -3}], CuboidBox[{12, 12, -3}], 
     CuboidBox[{13, 12, -3}], CuboidBox[{9, 13, -3}], CuboidBox[{10, 13, -3}],
      CuboidBox[{11, 13, -3}], CuboidBox[{12, 13, -3}], 
     CuboidBox[{13, 13, -3}], CuboidBox[{8, 8, -4}], CuboidBox[{9, 8, -4}], 
     CuboidBox[{10, 8, -4}], CuboidBox[{11, 8, -4}], CuboidBox[{12, 8, -4}], 
     CuboidBox[{13, 8, -4}], CuboidBox[{14, 8, -4}], CuboidBox[{8, 9, -4}], 
     CuboidBox[{9, 9, -4}], CuboidBox[{10, 9, -4}], CuboidBox[{11, 9, -4}], 
     CuboidBox[{12, 9, -4}], CuboidBox[{13, 9, -4}], CuboidBox[{14, 9, -4}], 
     CuboidBox[{8, 10, -4}], CuboidBox[{9, 10, -4}], CuboidBox[{10, 10, -4}], 
     CuboidBox[{11, 10, -4}], CuboidBox[{12, 10, -4}], 
     CuboidBox[{13, 10, -4}], CuboidBox[{14, 10, -4}], CuboidBox[{8, 11, -4}],
      CuboidBox[{9, 11, -4}], CuboidBox[{10, 11, -4}], 
     CuboidBox[{11, 11, -4}], CuboidBox[{12, 11, -4}], 
     CuboidBox[{13, 11, -4}], CuboidBox[{14, 11, -4}], CuboidBox[{8, 12, -4}],
      CuboidBox[{9, 12, -4}], CuboidBox[{10, 12, -4}], 
     CuboidBox[{11, 12, -4}], CuboidBox[{12, 12, -4}], 
     CuboidBox[{13, 12, -4}], CuboidBox[{14, 12, -4}], CuboidBox[{8, 13, -4}],
      CuboidBox[{9, 13, -4}], CuboidBox[{10, 13, -4}], 
     CuboidBox[{11, 13, -4}], CuboidBox[{12, 13, -4}], 
     CuboidBox[{13, 13, -4}], CuboidBox[{14, 13, -4}], CuboidBox[{8, 14, -4}],
      CuboidBox[{9, 14, -4}], CuboidBox[{10, 14, -4}], 
     CuboidBox[{11, 14, -4}], CuboidBox[{12, 14, -4}], 
     CuboidBox[{13, 14, -4}], CuboidBox[{14, 14, -4}], CuboidBox[{7, 7, -5}], 
     CuboidBox[{8, 7, -5}], CuboidBox[{9, 7, -5}], CuboidBox[{10, 7, -5}], 
     CuboidBox[{11, 7, -5}], CuboidBox[{12, 7, -5}], CuboidBox[{13, 7, -5}], 
     CuboidBox[{14, 7, -5}], CuboidBox[{15, 7, -5}], CuboidBox[{7, 8, -5}], 
     CuboidBox[{8, 8, -5}], CuboidBox[{9, 8, -5}], CuboidBox[{10, 8, -5}], 
     CuboidBox[{11, 8, -5}], CuboidBox[{12, 8, -5}], CuboidBox[{13, 8, -5}], 
     CuboidBox[{14, 8, -5}], CuboidBox[{15, 8, -5}], CuboidBox[{7, 9, -5}], 
     CuboidBox[{8, 9, -5}], CuboidBox[{9, 9, -5}], CuboidBox[{10, 9, -5}], 
     CuboidBox[{11, 9, -5}], CuboidBox[{12, 9, -5}], CuboidBox[{13, 9, -5}], 
     CuboidBox[{14, 9, -5}], CuboidBox[{15, 9, -5}], CuboidBox[{7, 10, -5}], 
     CuboidBox[{8, 10, -5}], CuboidBox[{9, 10, -5}], CuboidBox[{10, 10, -5}], 
     CuboidBox[{11, 10, -5}], CuboidBox[{12, 10, -5}], 
     CuboidBox[{13, 10, -5}], CuboidBox[{14, 10, -5}], 
     CuboidBox[{15, 10, -5}], CuboidBox[{7, 11, -5}], CuboidBox[{8, 11, -5}], 
     CuboidBox[{9, 11, -5}], CuboidBox[{10, 11, -5}], CuboidBox[{11, 11, -5}],
      CuboidBox[{12, 11, -5}], CuboidBox[{13, 11, -5}], 
     CuboidBox[{14, 11, -5}], CuboidBox[{15, 11, -5}], CuboidBox[{7, 12, -5}],
      CuboidBox[{8, 12, -5}], CuboidBox[{9, 12, -5}], CuboidBox[{10, 12, -5}],
      CuboidBox[{11, 12, -5}], CuboidBox[{12, 12, -5}], 
     CuboidBox[{13, 12, -5}], CuboidBox[{14, 12, -5}], 
     CuboidBox[{15, 12, -5}], CuboidBox[{7, 13, -5}], CuboidBox[{8, 13, -5}], 
     CuboidBox[{9, 13, -5}], CuboidBox[{10, 13, -5}], CuboidBox[{11, 13, -5}],
      CuboidBox[{12, 13, -5}], CuboidBox[{13, 13, -5}], 
     CuboidBox[{14, 13, -5}], CuboidBox[{15, 13, -5}], CuboidBox[{7, 14, -5}],
      CuboidBox[{8, 14, -5}], CuboidBox[{9, 14, -5}], CuboidBox[{10, 14, -5}],
      CuboidBox[{11, 14, -5}], CuboidBox[{12, 14, -5}], 
     CuboidBox[{13, 14, -5}], CuboidBox[{14, 14, -5}], 
     CuboidBox[{15, 14, -5}], CuboidBox[{7, 15, -5}], CuboidBox[{8, 15, -5}], 
     CuboidBox[{9, 15, -5}], CuboidBox[{10, 15, -5}], CuboidBox[{11, 15, -5}],
      CuboidBox[{12, 15, -5}], CuboidBox[{13, 15, -5}], 
     CuboidBox[{14, 15, -5}], CuboidBox[{15, 15, -5}], CuboidBox[{6, 6, -6}], 
     CuboidBox[{7, 6, -6}], CuboidBox[{8, 6, -6}], CuboidBox[{9, 6, -6}], 
     CuboidBox[{10, 6, -6}], CuboidBox[{11, 6, -6}], CuboidBox[{12, 6, -6}], 
     CuboidBox[{13, 6, -6}], CuboidBox[{14, 6, -6}], CuboidBox[{15, 6, -6}], 
     CuboidBox[{16, 6, -6}], CuboidBox[{6, 7, -6}], CuboidBox[{7, 7, -6}], 
     CuboidBox[{8, 7, -6}], CuboidBox[{9, 7, -6}], CuboidBox[{10, 7, -6}], 
     CuboidBox[{11, 7, -6}], CuboidBox[{12, 7, -6}], CuboidBox[{13, 7, -6}], 
     CuboidBox[{14, 7, -6}], CuboidBox[{15, 7, -6}], CuboidBox[{16, 7, -6}], 
     CuboidBox[{6, 8, -6}], CuboidBox[{7, 8, -6}], CuboidBox[{8, 8, -6}], 
     CuboidBox[{9, 8, -6}], CuboidBox[{10, 8, -6}], CuboidBox[{11, 8, -6}], 
     CuboidBox[{12, 8, -6}], CuboidBox[{13, 8, -6}], CuboidBox[{14, 8, -6}], 
     CuboidBox[{15, 8, -6}], CuboidBox[{16, 8, -6}], CuboidBox[{6, 9, -6}], 
     CuboidBox[{7, 9, -6}], CuboidBox[{8, 9, -6}], CuboidBox[{9, 9, -6}], 
     CuboidBox[{10, 9, -6}], CuboidBox[{11, 9, -6}], CuboidBox[{12, 9, -6}], 
     CuboidBox[{13, 9, -6}], CuboidBox[{14, 9, -6}], CuboidBox[{15, 9, -6}], 
     CuboidBox[{16, 9, -6}], CuboidBox[{6, 10, -6}], CuboidBox[{7, 10, -6}], 
     CuboidBox[{8, 10, -6}], CuboidBox[{9, 10, -6}], CuboidBox[{10, 10, -6}], 
     CuboidBox[{11, 10, -6}], CuboidBox[{12, 10, -6}], 
     CuboidBox[{13, 10, -6}], CuboidBox[{14, 10, -6}], 
     CuboidBox[{15, 10, -6}], CuboidBox[{16, 10, -6}], CuboidBox[{6, 11, -6}],
      CuboidBox[{7, 11, -6}], CuboidBox[{8, 11, -6}], CuboidBox[{9, 11, -6}], 
     CuboidBox[{10, 11, -6}], CuboidBox[{11, 11, -6}], 
     CuboidBox[{12, 11, -6}], CuboidBox[{13, 11, -6}], 
     CuboidBox[{14, 11, -6}], CuboidBox[{15, 11, -6}], 
     CuboidBox[{16, 11, -6}], CuboidBox[{6, 12, -6}], CuboidBox[{7, 12, -6}], 
     CuboidBox[{8, 12, -6}], CuboidBox[{9, 12, -6}], CuboidBox[{10, 12, -6}], 
     CuboidBox[{11, 12, -6}], CuboidBox[{12, 12, -6}], 
     CuboidBox[{13, 12, -6}], CuboidBox[{14, 12, -6}], 
     CuboidBox[{15, 12, -6}], CuboidBox[{16, 12, -6}], CuboidBox[{6, 13, -6}],
      CuboidBox[{7, 13, -6}], CuboidBox[{8, 13, -6}], CuboidBox[{9, 13, -6}], 
     CuboidBox[{10, 13, -6}], CuboidBox[{11, 13, -6}], 
     CuboidBox[{12, 13, -6}], CuboidBox[{13, 13, -6}], 
     CuboidBox[{14, 13, -6}], CuboidBox[{15, 13, -6}], 
     CuboidBox[{16, 13, -6}], CuboidBox[{6, 14, -6}], CuboidBox[{7, 14, -6}], 
     CuboidBox[{8, 14, -6}], CuboidBox[{9, 14, -6}], CuboidBox[{10, 14, -6}], 
     CuboidBox[{11, 14, -6}], CuboidBox[{12, 14, -6}], 
     CuboidBox[{13, 14, -6}], CuboidBox[{14, 14, -6}], 
     CuboidBox[{15, 14, -6}], CuboidBox[{16, 14, -6}], CuboidBox[{6, 15, -6}],
      CuboidBox[{7, 15, -6}], CuboidBox[{8, 15, -6}], CuboidBox[{9, 15, -6}], 
     CuboidBox[{10, 15, -6}], CuboidBox[{11, 15, -6}], 
     CuboidBox[{12, 15, -6}], CuboidBox[{13, 15, -6}], 
     CuboidBox[{14, 15, -6}], CuboidBox[{15, 15, -6}], 
     CuboidBox[{16, 15, -6}], CuboidBox[{6, 16, -6}], CuboidBox[{7, 16, -6}], 
     CuboidBox[{8, 16, -6}], CuboidBox[{9, 16, -6}], CuboidBox[{10, 16, -6}], 
     CuboidBox[{11, 16, -6}], CuboidBox[{12, 16, -6}], 
     CuboidBox[{13, 16, -6}], CuboidBox[{14, 16, -6}], 
     CuboidBox[{15, 16, -6}], CuboidBox[{16, 16, -6}], CuboidBox[{5, 5, -7}], 
     CuboidBox[{6, 5, -7}], CuboidBox[{7, 5, -7}], CuboidBox[{8, 5, -7}], 
     CuboidBox[{9, 5, -7}], CuboidBox[{10, 5, -7}], CuboidBox[{11, 5, -7}], 
     CuboidBox[{12, 5, -7}], CuboidBox[{13, 5, -7}], CuboidBox[{14, 5, -7}], 
     CuboidBox[{15, 5, -7}], CuboidBox[{16, 5, -7}], CuboidBox[{17, 5, -7}], 
     CuboidBox[{5, 6, -7}], CuboidBox[{6, 6, -7}], CuboidBox[{7, 6, -7}], 
     CuboidBox[{8, 6, -7}], CuboidBox[{9, 6, -7}], CuboidBox[{10, 6, -7}], 
     CuboidBox[{11, 6, -7}], CuboidBox[{12, 6, -7}], CuboidBox[{13, 6, -7}], 
     CuboidBox[{14, 6, -7}], CuboidBox[{15, 6, -7}], CuboidBox[{16, 6, -7}], 
     CuboidBox[{17, 6, -7}], CuboidBox[{5, 7, -7}], CuboidBox[{6, 7, -7}], 
     CuboidBox[{7, 7, -7}], CuboidBox[{8, 7, -7}], CuboidBox[{9, 7, -7}], 
     CuboidBox[{10, 7, -7}], CuboidBox[{11, 7, -7}], CuboidBox[{12, 7, -7}], 
     CuboidBox[{13, 7, -7}], CuboidBox[{14, 7, -7}], CuboidBox[{15, 7, -7}], 
     CuboidBox[{16, 7, -7}], CuboidBox[{17, 7, -7}], CuboidBox[{5, 8, -7}], 
     CuboidBox[{6, 8, -7}], CuboidBox[{7, 8, -7}], CuboidBox[{8, 8, -7}], 
     CuboidBox[{9, 8, -7}], CuboidBox[{10, 8, -7}], CuboidBox[{11, 8, -7}], 
     CuboidBox[{12, 8, -7}], CuboidBox[{13, 8, -7}], CuboidBox[{14, 8, -7}], 
     CuboidBox[{15, 8, -7}], CuboidBox[{16, 8, -7}], CuboidBox[{17, 8, -7}], 
     CuboidBox[{5, 9, -7}], CuboidBox[{6, 9, -7}], CuboidBox[{7, 9, -7}], 
     CuboidBox[{8, 9, -7}], CuboidBox[{9, 9, -7}], CuboidBox[{10, 9, -7}], 
     CuboidBox[{11, 9, -7}], CuboidBox[{12, 9, -7}], CuboidBox[{13, 9, -7}], 
     CuboidBox[{14, 9, -7}], CuboidBox[{15, 9, -7}], CuboidBox[{16, 9, -7}], 
     CuboidBox[{17, 9, -7}], CuboidBox[{5, 10, -7}], CuboidBox[{6, 10, -7}], 
     CuboidBox[{7, 10, -7}], CuboidBox[{8, 10, -7}], CuboidBox[{9, 10, -7}], 
     CuboidBox[{10, 10, -7}], CuboidBox[{11, 10, -7}], 
     CuboidBox[{12, 10, -7}], CuboidBox[{13, 10, -7}], 
     CuboidBox[{14, 10, -7}], CuboidBox[{15, 10, -7}], 
     CuboidBox[{16, 10, -7}], CuboidBox[{17, 10, -7}], CuboidBox[{5, 11, -7}],
      CuboidBox[{6, 11, -7}], CuboidBox[{7, 11, -7}], CuboidBox[{8, 11, -7}], 
     CuboidBox[{9, 11, -7}], CuboidBox[{10, 11, -7}], CuboidBox[{11, 11, -7}],
      CuboidBox[{12, 11, -7}], CuboidBox[{13, 11, -7}], 
     CuboidBox[{14, 11, -7}], CuboidBox[{15, 11, -7}], 
     CuboidBox[{16, 11, -7}], CuboidBox[{17, 11, -7}], CuboidBox[{5, 12, -7}],
      CuboidBox[{6, 12, -7}], CuboidBox[{7, 12, -7}], CuboidBox[{8, 12, -7}], 
     CuboidBox[{9, 12, -7}], CuboidBox[{10, 12, -7}], CuboidBox[{11, 12, -7}],
      CuboidBox[{12, 12, -7}], CuboidBox[{13, 12, -7}], 
     CuboidBox[{14, 12, -7}], CuboidBox[{15, 12, -7}], 
     CuboidBox[{16, 12, -7}], CuboidBox[{17, 12, -7}], CuboidBox[{5, 13, -7}],
      CuboidBox[{6, 13, -7}], CuboidBox[{7, 13, -7}], CuboidBox[{8, 13, -7}], 
     CuboidBox[{9, 13, -7}], CuboidBox[{10, 13, -7}], CuboidBox[{11, 13, -7}],
      CuboidBox[{12, 13, -7}], CuboidBox[{13, 13, -7}], 
     CuboidBox[{14, 13, -7}], CuboidBox[{15, 13, -7}], 
     CuboidBox[{16, 13, -7}], CuboidBox[{17, 13, -7}], CuboidBox[{5, 14, -7}],
      CuboidBox[{6, 14, -7}], CuboidBox[{7, 14, -7}], CuboidBox[{8, 14, -7}], 
     CuboidBox[{9, 14, -7}], CuboidBox[{10, 14, -7}], CuboidBox[{11, 14, -7}],
      CuboidBox[{12, 14, -7}], CuboidBox[{13, 14, -7}], 
     CuboidBox[{14, 14, -7}], CuboidBox[{15, 14, -7}], 
     CuboidBox[{16, 14, -7}], CuboidBox[{17, 14, -7}], CuboidBox[{5, 15, -7}],
      CuboidBox[{6, 15, -7}], CuboidBox[{7, 15, -7}], CuboidBox[{8, 15, -7}], 
     CuboidBox[{9, 15, -7}], CuboidBox[{10, 15, -7}], CuboidBox[{11, 15, -7}],
      CuboidBox[{12, 15, -7}], CuboidBox[{13, 15, -7}], 
     CuboidBox[{14, 15, -7}], CuboidBox[{15, 15, -7}], 
     CuboidBox[{16, 15, -7}], CuboidBox[{17, 15, -7}], CuboidBox[{5, 16, -7}],
      CuboidBox[{6, 16, -7}], CuboidBox[{7, 16, -7}], CuboidBox[{8, 16, -7}], 
     CuboidBox[{9, 16, -7}], CuboidBox[{10, 16, -7}], CuboidBox[{11, 16, -7}],
      CuboidBox[{12, 16, -7}], CuboidBox[{13, 16, -7}], 
     CuboidBox[{14, 16, -7}], CuboidBox[{15, 16, -7}], 
     CuboidBox[{16, 16, -7}], CuboidBox[{17, 16, -7}], CuboidBox[{5, 17, -7}],
      CuboidBox[{6, 17, -7}], CuboidBox[{7, 17, -7}], CuboidBox[{8, 17, -7}], 
     CuboidBox[{9, 17, -7}], CuboidBox[{10, 17, -7}], CuboidBox[{11, 17, -7}],
      CuboidBox[{12, 17, -7}], CuboidBox[{13, 17, -7}], 
     CuboidBox[{14, 17, -7}], CuboidBox[{15, 17, -7}], 
     CuboidBox[{16, 17, -7}], CuboidBox[{17, 17, -7}], CuboidBox[{4, 4, -8}], 
     CuboidBox[{5, 4, -8}], CuboidBox[{6, 4, -8}], CuboidBox[{7, 4, -8}], 
     CuboidBox[{8, 4, -8}], CuboidBox[{9, 4, -8}], CuboidBox[{10, 4, -8}], 
     CuboidBox[{11, 4, -8}], CuboidBox[{12, 4, -8}], CuboidBox[{13, 4, -8}], 
     CuboidBox[{14, 4, -8}], CuboidBox[{15, 4, -8}], CuboidBox[{16, 4, -8}], 
     CuboidBox[{17, 4, -8}], CuboidBox[{18, 4, -8}], CuboidBox[{4, 5, -8}], 
     CuboidBox[{5, 5, -8}], CuboidBox[{6, 5, -8}], CuboidBox[{7, 5, -8}], 
     CuboidBox[{8, 5, -8}], CuboidBox[{9, 5, -8}], CuboidBox[{10, 5, -8}], 
     CuboidBox[{11, 5, -8}], CuboidBox[{12, 5, -8}], CuboidBox[{13, 5, -8}], 
     CuboidBox[{14, 5, -8}], CuboidBox[{15, 5, -8}], CuboidBox[{16, 5, -8}], 
     CuboidBox[{17, 5, -8}], CuboidBox[{18, 5, -8}], CuboidBox[{4, 6, -8}], 
     CuboidBox[{5, 6, -8}], CuboidBox[{6, 6, -8}], CuboidBox[{7, 6, -8}], 
     CuboidBox[{8, 6, -8}], CuboidBox[{9, 6, -8}], CuboidBox[{10, 6, -8}], 
     CuboidBox[{11, 6, -8}], CuboidBox[{12, 6, -8}], CuboidBox[{13, 6, -8}], 
     CuboidBox[{14, 6, -8}], CuboidBox[{15, 6, -8}], CuboidBox[{16, 6, -8}], 
     CuboidBox[{17, 6, -8}], CuboidBox[{18, 6, -8}], CuboidBox[{4, 7, -8}], 
     CuboidBox[{5, 7, -8}], CuboidBox[{6, 7, -8}], CuboidBox[{7, 7, -8}], 
     CuboidBox[{8, 7, -8}], CuboidBox[{9, 7, -8}], CuboidBox[{10, 7, -8}], 
     CuboidBox[{11, 7, -8}], CuboidBox[{12, 7, -8}], CuboidBox[{13, 7, -8}], 
     CuboidBox[{14, 7, -8}], CuboidBox[{15, 7, -8}], CuboidBox[{16, 7, -8}], 
     CuboidBox[{17, 7, -8}], CuboidBox[{18, 7, -8}], CuboidBox[{4, 8, -8}], 
     CuboidBox[{5, 8, -8}], CuboidBox[{6, 8, -8}], CuboidBox[{7, 8, -8}], 
     CuboidBox[{8, 8, -8}], CuboidBox[{9, 8, -8}], CuboidBox[{10, 8, -8}], 
     CuboidBox[{11, 8, -8}], CuboidBox[{12, 8, -8}], CuboidBox[{13, 8, -8}], 
     CuboidBox[{14, 8, -8}], CuboidBox[{15, 8, -8}], CuboidBox[{16, 8, -8}], 
     CuboidBox[{17, 8, -8}], CuboidBox[{18, 8, -8}], CuboidBox[{4, 9, -8}], 
     CuboidBox[{5, 9, -8}], CuboidBox[{6, 9, -8}], CuboidBox[{7, 9, -8}], 
     CuboidBox[{8, 9, -8}], CuboidBox[{9, 9, -8}], CuboidBox[{10, 9, -8}], 
     CuboidBox[{11, 9, -8}], CuboidBox[{12, 9, -8}], CuboidBox[{13, 9, -8}], 
     CuboidBox[{14, 9, -8}], CuboidBox[{15, 9, -8}], CuboidBox[{16, 9, -8}], 
     CuboidBox[{17, 9, -8}], CuboidBox[{18, 9, -8}], CuboidBox[{4, 10, -8}], 
     CuboidBox[{5, 10, -8}], CuboidBox[{6, 10, -8}], CuboidBox[{7, 10, -8}], 
     CuboidBox[{8, 10, -8}], CuboidBox[{9, 10, -8}], CuboidBox[{10, 10, -8}], 
     CuboidBox[{11, 10, -8}], CuboidBox[{12, 10, -8}], 
     CuboidBox[{13, 10, -8}], CuboidBox[{14, 10, -8}], 
     CuboidBox[{15, 10, -8}], CuboidBox[{16, 10, -8}], 
     CuboidBox[{17, 10, -8}], CuboidBox[{18, 10, -8}], CuboidBox[{4, 11, -8}],
      CuboidBox[{5, 11, -8}], CuboidBox[{6, 11, -8}], CuboidBox[{7, 11, -8}], 
     CuboidBox[{8, 11, -8}], CuboidBox[{9, 11, -8}], CuboidBox[{10, 11, -8}], 
     CuboidBox[{11, 11, -8}], CuboidBox[{12, 11, -8}], 
     CuboidBox[{13, 11, -8}], CuboidBox[{14, 11, -8}], 
     CuboidBox[{15, 11, -8}], CuboidBox[{16, 11, -8}], 
     CuboidBox[{17, 11, -8}], CuboidBox[{18, 11, -8}], CuboidBox[{4, 12, -8}],
      CuboidBox[{5, 12, -8}], CuboidBox[{6, 12, -8}], CuboidBox[{7, 12, -8}], 
     CuboidBox[{8, 12, -8}], CuboidBox[{9, 12, -8}], CuboidBox[{10, 12, -8}], 
     CuboidBox[{11, 12, -8}], CuboidBox[{12, 12, -8}], 
     CuboidBox[{13, 12, -8}], CuboidBox[{14, 12, -8}], 
     CuboidBox[{15, 12, -8}], CuboidBox[{16, 12, -8}], 
     CuboidBox[{17, 12, -8}], CuboidBox[{18, 12, -8}], CuboidBox[{4, 13, -8}],
      CuboidBox[{5, 13, -8}], CuboidBox[{6, 13, -8}], CuboidBox[{7, 13, -8}], 
     CuboidBox[{8, 13, -8}], CuboidBox[{9, 13, -8}], CuboidBox[{10, 13, -8}], 
     CuboidBox[{11, 13, -8}], CuboidBox[{12, 13, -8}], 
     CuboidBox[{13, 13, -8}], CuboidBox[{14, 13, -8}], 
     CuboidBox[{15, 13, -8}], CuboidBox[{16, 13, -8}], 
     CuboidBox[{17, 13, -8}], CuboidBox[{18, 13, -8}], CuboidBox[{4, 14, -8}],
      CuboidBox[{5, 14, -8}], CuboidBox[{6, 14, -8}], CuboidBox[{7, 14, -8}], 
     CuboidBox[{8, 14, -8}], CuboidBox[{9, 14, -8}], CuboidBox[{10, 14, -8}], 
     CuboidBox[{11, 14, -8}], CuboidBox[{12, 14, -8}], 
     CuboidBox[{13, 14, -8}], CuboidBox[{14, 14, -8}], 
     CuboidBox[{15, 14, -8}], CuboidBox[{16, 14, -8}], 
     CuboidBox[{17, 14, -8}], CuboidBox[{18, 14, -8}], CuboidBox[{4, 15, -8}],
      CuboidBox[{5, 15, -8}], CuboidBox[{6, 15, -8}], CuboidBox[{7, 15, -8}], 
     CuboidBox[{8, 15, -8}], CuboidBox[{9, 15, -8}], CuboidBox[{10, 15, -8}], 
     CuboidBox[{11, 15, -8}], CuboidBox[{12, 15, -8}], 
     CuboidBox[{13, 15, -8}], CuboidBox[{14, 15, -8}], 
     CuboidBox[{15, 15, -8}], CuboidBox[{16, 15, -8}], 
     CuboidBox[{17, 15, -8}], CuboidBox[{18, 15, -8}], CuboidBox[{4, 16, -8}],
      CuboidBox[{5, 16, -8}], CuboidBox[{6, 16, -8}], CuboidBox[{7, 16, -8}], 
     CuboidBox[{8, 16, -8}], CuboidBox[{9, 16, -8}], CuboidBox[{10, 16, -8}], 
     CuboidBox[{11, 16, -8}], CuboidBox[{12, 16, -8}], 
     CuboidBox[{13, 16, -8}], CuboidBox[{14, 16, -8}], 
     CuboidBox[{15, 16, -8}], CuboidBox[{16, 16, -8}], 
     CuboidBox[{17, 16, -8}], CuboidBox[{18, 16, -8}], CuboidBox[{4, 17, -8}],
      CuboidBox[{5, 17, -8}], CuboidBox[{6, 17, -8}], CuboidBox[{7, 17, -8}], 
     CuboidBox[{8, 17, -8}], CuboidBox[{9, 17, -8}], CuboidBox[{10, 17, -8}], 
     CuboidBox[{11, 17, -8}], CuboidBox[{12, 17, -8}], 
     CuboidBox[{13, 17, -8}], CuboidBox[{14, 17, -8}], 
     CuboidBox[{15, 17, -8}], CuboidBox[{16, 17, -8}], 
     CuboidBox[{17, 17, -8}], CuboidBox[{18, 17, -8}], CuboidBox[{4, 18, -8}],
      CuboidBox[{5, 18, -8}], CuboidBox[{6, 18, -8}], CuboidBox[{7, 18, -8}], 
     CuboidBox[{8, 18, -8}], CuboidBox[{9, 18, -8}], CuboidBox[{10, 18, -8}], 
     CuboidBox[{11, 18, -8}], CuboidBox[{12, 18, -8}], 
     CuboidBox[{13, 18, -8}], CuboidBox[{14, 18, -8}], 
     CuboidBox[{15, 18, -8}], CuboidBox[{16, 18, -8}], 
     CuboidBox[{17, 18, -8}], CuboidBox[{18, 18, -8}], CuboidBox[{3, 3, -9}], 
     CuboidBox[{4, 3, -9}], CuboidBox[{5, 3, -9}], CuboidBox[{6, 3, -9}], 
     CuboidBox[{7, 3, -9}], CuboidBox[{8, 3, -9}], CuboidBox[{9, 3, -9}], 
     CuboidBox[{10, 3, -9}], CuboidBox[{11, 3, -9}], CuboidBox[{12, 3, -9}], 
     CuboidBox[{13, 3, -9}], CuboidBox[{14, 3, -9}], CuboidBox[{15, 3, -9}], 
     CuboidBox[{16, 3, -9}], CuboidBox[{17, 3, -9}], CuboidBox[{18, 3, -9}], 
     CuboidBox[{19, 3, -9}], CuboidBox[{3, 4, -9}], CuboidBox[{4, 4, -9}], 
     CuboidBox[{5, 4, -9}], CuboidBox[{6, 4, -9}], CuboidBox[{7, 4, -9}], 
     CuboidBox[{8, 4, -9}], CuboidBox[{9, 4, -9}], CuboidBox[{10, 4, -9}], 
     CuboidBox[{11, 4, -9}], CuboidBox[{12, 4, -9}], CuboidBox[{13, 4, -9}], 
     CuboidBox[{14, 4, -9}], CuboidBox[{15, 4, -9}], CuboidBox[{16, 4, -9}], 
     CuboidBox[{17, 4, -9}], CuboidBox[{18, 4, -9}], CuboidBox[{19, 4, -9}], 
     CuboidBox[{3, 5, -9}], CuboidBox[{4, 5, -9}], CuboidBox[{5, 5, -9}], 
     CuboidBox[{6, 5, -9}], CuboidBox[{7, 5, -9}], CuboidBox[{8, 5, -9}], 
     CuboidBox[{9, 5, -9}], CuboidBox[{10, 5, -9}], CuboidBox[{11, 5, -9}], 
     CuboidBox[{12, 5, -9}], CuboidBox[{13, 5, -9}], CuboidBox[{14, 5, -9}], 
     CuboidBox[{15, 5, -9}], CuboidBox[{16, 5, -9}], CuboidBox[{17, 5, -9}], 
     CuboidBox[{18, 5, -9}], CuboidBox[{19, 5, -9}], CuboidBox[{3, 6, -9}], 
     CuboidBox[{4, 6, -9}], CuboidBox[{5, 6, -9}], CuboidBox[{6, 6, -9}], 
     CuboidBox[{7, 6, -9}], CuboidBox[{8, 6, -9}], CuboidBox[{9, 6, -9}], 
     CuboidBox[{10, 6, -9}], CuboidBox[{11, 6, -9}], CuboidBox[{12, 6, -9}], 
     CuboidBox[{13, 6, -9}], CuboidBox[{14, 6, -9}], CuboidBox[{15, 6, -9}], 
     CuboidBox[{16, 6, -9}], CuboidBox[{17, 6, -9}], CuboidBox[{18, 6, -9}], 
     CuboidBox[{19, 6, -9}], CuboidBox[{3, 7, -9}], CuboidBox[{4, 7, -9}], 
     CuboidBox[{5, 7, -9}], CuboidBox[{6, 7, -9}], CuboidBox[{7, 7, -9}], 
     CuboidBox[{8, 7, -9}], CuboidBox[{9, 7, -9}], CuboidBox[{10, 7, -9}], 
     CuboidBox[{11, 7, -9}], CuboidBox[{12, 7, -9}], CuboidBox[{13, 7, -9}], 
     CuboidBox[{14, 7, -9}], CuboidBox[{15, 7, -9}], CuboidBox[{16, 7, -9}], 
     CuboidBox[{17, 7, -9}], CuboidBox[{18, 7, -9}], CuboidBox[{19, 7, -9}], 
     CuboidBox[{3, 8, -9}], CuboidBox[{4, 8, -9}], CuboidBox[{5, 8, -9}], 
     CuboidBox[{6, 8, -9}], CuboidBox[{7, 8, -9}], CuboidBox[{8, 8, -9}], 
     CuboidBox[{9, 8, -9}], CuboidBox[{10, 8, -9}], CuboidBox[{11, 8, -9}], 
     CuboidBox[{12, 8, -9}], CuboidBox[{13, 8, -9}], CuboidBox[{14, 8, -9}], 
     CuboidBox[{15, 8, -9}], CuboidBox[{16, 8, -9}], CuboidBox[{17, 8, -9}], 
     CuboidBox[{18, 8, -9}], CuboidBox[{19, 8, -9}], CuboidBox[{3, 9, -9}], 
     CuboidBox[{4, 9, -9}], CuboidBox[{5, 9, -9}], CuboidBox[{6, 9, -9}], 
     CuboidBox[{7, 9, -9}], CuboidBox[{8, 9, -9}], CuboidBox[{9, 9, -9}], 
     CuboidBox[{10, 9, -9}], CuboidBox[{11, 9, -9}], CuboidBox[{12, 9, -9}], 
     CuboidBox[{13, 9, -9}], CuboidBox[{14, 9, -9}], CuboidBox[{15, 9, -9}], 
     CuboidBox[{16, 9, -9}], CuboidBox[{17, 9, -9}], CuboidBox[{18, 9, -9}], 
     CuboidBox[{19, 9, -9}], CuboidBox[{3, 10, -9}], CuboidBox[{4, 10, -9}], 
     CuboidBox[{5, 10, -9}], CuboidBox[{6, 10, -9}], CuboidBox[{7, 10, -9}], 
     CuboidBox[{8, 10, -9}], CuboidBox[{9, 10, -9}], CuboidBox[{10, 10, -9}], 
     CuboidBox[{11, 10, -9}], CuboidBox[{12, 10, -9}], 
     CuboidBox[{13, 10, -9}], CuboidBox[{14, 10, -9}], 
     CuboidBox[{15, 10, -9}], CuboidBox[{16, 10, -9}], 
     CuboidBox[{17, 10, -9}], CuboidBox[{18, 10, -9}], 
     CuboidBox[{19, 10, -9}], CuboidBox[{3, 11, -9}], CuboidBox[{4, 11, -9}], 
     CuboidBox[{5, 11, -9}], CuboidBox[{6, 11, -9}], CuboidBox[{7, 11, -9}], 
     CuboidBox[{8, 11, -9}], CuboidBox[{9, 11, -9}], CuboidBox[{10, 11, -9}], 
     CuboidBox[{11, 11, -9}], CuboidBox[{12, 11, -9}], 
     CuboidBox[{13, 11, -9}], CuboidBox[{14, 11, -9}], 
     CuboidBox[{15, 11, -9}], CuboidBox[{16, 11, -9}], 
     CuboidBox[{17, 11, -9}], CuboidBox[{18, 11, -9}], 
     CuboidBox[{19, 11, -9}], CuboidBox[{3, 12, -9}], CuboidBox[{4, 12, -9}], 
     CuboidBox[{5, 12, -9}], CuboidBox[{6, 12, -9}], CuboidBox[{7, 12, -9}], 
     CuboidBox[{8, 12, -9}], CuboidBox[{9, 12, -9}], CuboidBox[{10, 12, -9}], 
     CuboidBox[{11, 12, -9}], CuboidBox[{12, 12, -9}], 
     CuboidBox[{13, 12, -9}], CuboidBox[{14, 12, -9}], 
     CuboidBox[{15, 12, -9}], CuboidBox[{16, 12, -9}], 
     CuboidBox[{17, 12, -9}], CuboidBox[{18, 12, -9}], 
     CuboidBox[{19, 12, -9}], CuboidBox[{3, 13, -9}], CuboidBox[{4, 13, -9}], 
     CuboidBox[{5, 13, -9}], CuboidBox[{6, 13, -9}], CuboidBox[{7, 13, -9}], 
     CuboidBox[{8, 13, -9}], CuboidBox[{9, 13, -9}], CuboidBox[{10, 13, -9}], 
     CuboidBox[{11, 13, -9}], CuboidBox[{12, 13, -9}], 
     CuboidBox[{13, 13, -9}], CuboidBox[{14, 13, -9}], 
     CuboidBox[{15, 13, -9}], CuboidBox[{16, 13, -9}], 
     CuboidBox[{17, 13, -9}], CuboidBox[{18, 13, -9}], 
     CuboidBox[{19, 13, -9}], CuboidBox[{3, 14, -9}], CuboidBox[{4, 14, -9}], 
     CuboidBox[{5, 14, -9}], CuboidBox[{6, 14, -9}], CuboidBox[{7, 14, -9}], 
     CuboidBox[{8, 14, -9}], CuboidBox[{9, 14, -9}], CuboidBox[{10, 14, -9}], 
     CuboidBox[{11, 14, -9}], CuboidBox[{12, 14, -9}], 
     CuboidBox[{13, 14, -9}], CuboidBox[{14, 14, -9}], 
     CuboidBox[{15, 14, -9}], CuboidBox[{16, 14, -9}], 
     CuboidBox[{17, 14, -9}], CuboidBox[{18, 14, -9}], 
     CuboidBox[{19, 14, -9}], CuboidBox[{3, 15, -9}], CuboidBox[{4, 15, -9}], 
     CuboidBox[{5, 15, -9}], CuboidBox[{6, 15, -9}], CuboidBox[{7, 15, -9}], 
     CuboidBox[{8, 15, -9}], CuboidBox[{9, 15, -9}], CuboidBox[{10, 15, -9}], 
     CuboidBox[{11, 15, -9}], CuboidBox[{12, 15, -9}], 
     CuboidBox[{13, 15, -9}], CuboidBox[{14, 15, -9}], 
     CuboidBox[{15, 15, -9}], CuboidBox[{16, 15, -9}], 
     CuboidBox[{17, 15, -9}], CuboidBox[{18, 15, -9}], 
     CuboidBox[{19, 15, -9}], CuboidBox[{3, 16, -9}], CuboidBox[{4, 16, -9}], 
     CuboidBox[{5, 16, -9}], CuboidBox[{6, 16, -9}], CuboidBox[{7, 16, -9}], 
     CuboidBox[{8, 16, -9}], CuboidBox[{9, 16, -9}], CuboidBox[{10, 16, -9}], 
     CuboidBox[{11, 16, -9}], CuboidBox[{12, 16, -9}], 
     CuboidBox[{13, 16, -9}], CuboidBox[{14, 16, -9}], 
     CuboidBox[{15, 16, -9}], CuboidBox[{16, 16, -9}], 
     CuboidBox[{17, 16, -9}], CuboidBox[{18, 16, -9}], 
     CuboidBox[{19, 16, -9}], CuboidBox[{3, 17, -9}], CuboidBox[{4, 17, -9}], 
     CuboidBox[{5, 17, -9}], CuboidBox[{6, 17, -9}], CuboidBox[{7, 17, -9}], 
     CuboidBox[{8, 17, -9}], CuboidBox[{9, 17, -9}], CuboidBox[{10, 17, -9}], 
     CuboidBox[{11, 17, -9}], CuboidBox[{12, 17, -9}], 
     CuboidBox[{13, 17, -9}], CuboidBox[{14, 17, -9}], 
     CuboidBox[{15, 17, -9}], CuboidBox[{16, 17, -9}], 
     CuboidBox[{17, 17, -9}], CuboidBox[{18, 17, -9}], 
     CuboidBox[{19, 17, -9}], CuboidBox[{3, 18, -9}], CuboidBox[{4, 18, -9}], 
     CuboidBox[{5, 18, -9}], CuboidBox[{6, 18, -9}], CuboidBox[{7, 18, -9}], 
     CuboidBox[{8, 18, -9}], CuboidBox[{9, 18, -9}], CuboidBox[{10, 18, -9}], 
     CuboidBox[{11, 18, -9}], CuboidBox[{12, 18, -9}], 
     CuboidBox[{13, 18, -9}], CuboidBox[{14, 18, -9}], 
     CuboidBox[{15, 18, -9}], CuboidBox[{16, 18, -9}], 
     CuboidBox[{17, 18, -9}], CuboidBox[{18, 18, -9}], 
     CuboidBox[{19, 18, -9}], CuboidBox[{3, 19, -9}], CuboidBox[{4, 19, -9}], 
     CuboidBox[{5, 19, -9}], CuboidBox[{6, 19, -9}], CuboidBox[{7, 19, -9}], 
     CuboidBox[{8, 19, -9}], CuboidBox[{9, 19, -9}], CuboidBox[{10, 19, -9}], 
     CuboidBox[{11, 19, -9}], CuboidBox[{12, 19, -9}], 
     CuboidBox[{13, 19, -9}], CuboidBox[{14, 19, -9}], 
     CuboidBox[{15, 19, -9}], CuboidBox[{16, 19, -9}], 
     CuboidBox[{17, 19, -9}], CuboidBox[{18, 19, -9}], 
     CuboidBox[{19, 19, -9}], CuboidBox[{2, 2, -10}], CuboidBox[{3, 2, -10}], 
     CuboidBox[{4, 2, -10}], CuboidBox[{5, 2, -10}], CuboidBox[{6, 2, -10}], 
     CuboidBox[{7, 2, -10}], CuboidBox[{8, 2, -10}], CuboidBox[{9, 2, -10}], 
     CuboidBox[{10, 2, -10}], CuboidBox[{11, 2, -10}], 
     CuboidBox[{12, 2, -10}], CuboidBox[{13, 2, -10}], 
     CuboidBox[{14, 2, -10}], CuboidBox[{15, 2, -10}], 
     CuboidBox[{16, 2, -10}], CuboidBox[{17, 2, -10}], 
     CuboidBox[{18, 2, -10}], CuboidBox[{19, 2, -10}], 
     CuboidBox[{20, 2, -10}], CuboidBox[{2, 3, -10}], CuboidBox[{3, 3, -10}], 
     CuboidBox[{4, 3, -10}], CuboidBox[{5, 3, -10}], CuboidBox[{6, 3, -10}], 
     CuboidBox[{7, 3, -10}], CuboidBox[{8, 3, -10}], CuboidBox[{9, 3, -10}], 
     CuboidBox[{10, 3, -10}], CuboidBox[{11, 3, -10}], 
     CuboidBox[{12, 3, -10}], CuboidBox[{13, 3, -10}], 
     CuboidBox[{14, 3, -10}], CuboidBox[{15, 3, -10}], 
     CuboidBox[{16, 3, -10}], CuboidBox[{17, 3, -10}], 
     CuboidBox[{18, 3, -10}], CuboidBox[{19, 3, -10}], 
     CuboidBox[{20, 3, -10}], CuboidBox[{2, 4, -10}], CuboidBox[{3, 4, -10}], 
     CuboidBox[{4, 4, -10}], CuboidBox[{5, 4, -10}], CuboidBox[{6, 4, -10}], 
     CuboidBox[{7, 4, -10}], CuboidBox[{8, 4, -10}], CuboidBox[{9, 4, -10}], 
     CuboidBox[{10, 4, -10}], CuboidBox[{11, 4, -10}], 
     CuboidBox[{12, 4, -10}], CuboidBox[{13, 4, -10}], 
     CuboidBox[{14, 4, -10}], CuboidBox[{15, 4, -10}], 
     CuboidBox[{16, 4, -10}], CuboidBox[{17, 4, -10}], 
     CuboidBox[{18, 4, -10}], CuboidBox[{19, 4, -10}], 
     CuboidBox[{20, 4, -10}], CuboidBox[{2, 5, -10}], CuboidBox[{3, 5, -10}], 
     CuboidBox[{4, 5, -10}], CuboidBox[{5, 5, -10}], CuboidBox[{6, 5, -10}], 
     CuboidBox[{7, 5, -10}], CuboidBox[{8, 5, -10}], CuboidBox[{9, 5, -10}], 
     CuboidBox[{10, 5, -10}], CuboidBox[{11, 5, -10}], 
     CuboidBox[{12, 5, -10}], CuboidBox[{13, 5, -10}], 
     CuboidBox[{14, 5, -10}], CuboidBox[{15, 5, -10}], 
     CuboidBox[{16, 5, -10}], CuboidBox[{17, 5, -10}], 
     CuboidBox[{18, 5, -10}], CuboidBox[{19, 5, -10}], 
     CuboidBox[{20, 5, -10}], CuboidBox[{2, 6, -10}], CuboidBox[{3, 6, -10}], 
     CuboidBox[{4, 6, -10}], CuboidBox[{5, 6, -10}], CuboidBox[{6, 6, -10}], 
     CuboidBox[{7, 6, -10}], CuboidBox[{8, 6, -10}], CuboidBox[{9, 6, -10}], 
     CuboidBox[{10, 6, -10}], CuboidBox[{11, 6, -10}], 
     CuboidBox[{12, 6, -10}], CuboidBox[{13, 6, -10}], 
     CuboidBox[{14, 6, -10}], CuboidBox[{15, 6, -10}], 
     CuboidBox[{16, 6, -10}], CuboidBox[{17, 6, -10}], 
     CuboidBox[{18, 6, -10}], CuboidBox[{19, 6, -10}], 
     CuboidBox[{20, 6, -10}], CuboidBox[{2, 7, -10}], CuboidBox[{3, 7, -10}], 
     CuboidBox[{4, 7, -10}], CuboidBox[{5, 7, -10}], CuboidBox[{6, 7, -10}], 
     CuboidBox[{7, 7, -10}], CuboidBox[{8, 7, -10}], CuboidBox[{9, 7, -10}], 
     CuboidBox[{10, 7, -10}], CuboidBox[{11, 7, -10}], 
     CuboidBox[{12, 7, -10}], CuboidBox[{13, 7, -10}], 
     CuboidBox[{14, 7, -10}], CuboidBox[{15, 7, -10}], 
     CuboidBox[{16, 7, -10}], CuboidBox[{17, 7, -10}], 
     CuboidBox[{18, 7, -10}], CuboidBox[{19, 7, -10}], 
     CuboidBox[{20, 7, -10}], CuboidBox[{2, 8, -10}], CuboidBox[{3, 8, -10}], 
     CuboidBox[{4, 8, -10}], CuboidBox[{5, 8, -10}], CuboidBox[{6, 8, -10}], 
     CuboidBox[{7, 8, -10}], CuboidBox[{8, 8, -10}], CuboidBox[{9, 8, -10}], 
     CuboidBox[{10, 8, -10}], CuboidBox[{11, 8, -10}], 
     CuboidBox[{12, 8, -10}], CuboidBox[{13, 8, -10}], 
     CuboidBox[{14, 8, -10}], CuboidBox[{15, 8, -10}], 
     CuboidBox[{16, 8, -10}], CuboidBox[{17, 8, -10}], 
     CuboidBox[{18, 8, -10}], CuboidBox[{19, 8, -10}], 
     CuboidBox[{20, 8, -10}], CuboidBox[{2, 9, -10}], CuboidBox[{3, 9, -10}], 
     CuboidBox[{4, 9, -10}], CuboidBox[{5, 9, -10}], CuboidBox[{6, 9, -10}], 
     CuboidBox[{7, 9, -10}], CuboidBox[{8, 9, -10}], CuboidBox[{9, 9, -10}], 
     CuboidBox[{10, 9, -10}], CuboidBox[{11, 9, -10}], 
     CuboidBox[{12, 9, -10}], CuboidBox[{13, 9, -10}], 
     CuboidBox[{14, 9, -10}], CuboidBox[{15, 9, -10}], 
     CuboidBox[{16, 9, -10}], CuboidBox[{17, 9, -10}], 
     CuboidBox[{18, 9, -10}], CuboidBox[{19, 9, -10}], 
     CuboidBox[{20, 9, -10}], CuboidBox[{2, 10, -10}], 
     CuboidBox[{3, 10, -10}], CuboidBox[{4, 10, -10}], 
     CuboidBox[{5, 10, -10}], CuboidBox[{6, 10, -10}], 
     CuboidBox[{7, 10, -10}], CuboidBox[{8, 10, -10}], 
     CuboidBox[{9, 10, -10}], CuboidBox[{10, 10, -10}], 
     CuboidBox[{11, 10, -10}], CuboidBox[{12, 10, -10}], 
     CuboidBox[{13, 10, -10}], CuboidBox[{14, 10, -10}], 
     CuboidBox[{15, 10, -10}], CuboidBox[{16, 10, -10}], 
     CuboidBox[{17, 10, -10}], CuboidBox[{18, 10, -10}], 
     CuboidBox[{19, 10, -10}], CuboidBox[{20, 10, -10}], 
     CuboidBox[{2, 11, -10}], CuboidBox[{3, 11, -10}], 
     CuboidBox[{4, 11, -10}], CuboidBox[{5, 11, -10}], 
     CuboidBox[{6, 11, -10}], CuboidBox[{7, 11, -10}], 
     CuboidBox[{8, 11, -10}], CuboidBox[{9, 11, -10}], 
     CuboidBox[{10, 11, -10}], CuboidBox[{11, 11, -10}], 
     CuboidBox[{12, 11, -10}], CuboidBox[{13, 11, -10}], 
     CuboidBox[{14, 11, -10}], CuboidBox[{15, 11, -10}], 
     CuboidBox[{16, 11, -10}], CuboidBox[{17, 11, -10}], 
     CuboidBox[{18, 11, -10}], CuboidBox[{19, 11, -10}], 
     CuboidBox[{20, 11, -10}], CuboidBox[{2, 12, -10}], 
     CuboidBox[{3, 12, -10}], CuboidBox[{4, 12, -10}], 
     CuboidBox[{5, 12, -10}], CuboidBox[{6, 12, -10}], 
     CuboidBox[{7, 12, -10}], CuboidBox[{8, 12, -10}], 
     CuboidBox[{9, 12, -10}], CuboidBox[{10, 12, -10}], 
     CuboidBox[{11, 12, -10}], CuboidBox[{12, 12, -10}], 
     CuboidBox[{13, 12, -10}], CuboidBox[{14, 12, -10}], 
     CuboidBox[{15, 12, -10}], CuboidBox[{16, 12, -10}], 
     CuboidBox[{17, 12, -10}], CuboidBox[{18, 12, -10}], 
     CuboidBox[{19, 12, -10}], CuboidBox[{20, 12, -10}], 
     CuboidBox[{2, 13, -10}], CuboidBox[{3, 13, -10}], 
     CuboidBox[{4, 13, -10}], CuboidBox[{5, 13, -10}], 
     CuboidBox[{6, 13, -10}], CuboidBox[{7, 13, -10}], 
     CuboidBox[{8, 13, -10}], CuboidBox[{9, 13, -10}], 
     CuboidBox[{10, 13, -10}], CuboidBox[{11, 13, -10}], 
     CuboidBox[{12, 13, -10}], CuboidBox[{13, 13, -10}], 
     CuboidBox[{14, 13, -10}], CuboidBox[{15, 13, -10}], 
     CuboidBox[{16, 13, -10}], CuboidBox[{17, 13, -10}], 
     CuboidBox[{18, 13, -10}], CuboidBox[{19, 13, -10}], 
     CuboidBox[{20, 13, -10}], CuboidBox[{2, 14, -10}], 
     CuboidBox[{3, 14, -10}], CuboidBox[{4, 14, -10}], 
     CuboidBox[{5, 14, -10}], CuboidBox[{6, 14, -10}], 
     CuboidBox[{7, 14, -10}], CuboidBox[{8, 14, -10}], 
     CuboidBox[{9, 14, -10}], CuboidBox[{10, 14, -10}], 
     CuboidBox[{11, 14, -10}], CuboidBox[{12, 14, -10}], 
     CuboidBox[{13, 14, -10}], CuboidBox[{14, 14, -10}], 
     CuboidBox[{15, 14, -10}], CuboidBox[{16, 14, -10}], 
     CuboidBox[{17, 14, -10}], CuboidBox[{18, 14, -10}], 
     CuboidBox[{19, 14, -10}], CuboidBox[{20, 14, -10}], 
     CuboidBox[{2, 15, -10}], CuboidBox[{3, 15, -10}], 
     CuboidBox[{4, 15, -10}], CuboidBox[{5, 15, -10}], 
     CuboidBox[{6, 15, -10}], CuboidBox[{7, 15, -10}], 
     CuboidBox[{8, 15, -10}], CuboidBox[{9, 15, -10}], 
     CuboidBox[{10, 15, -10}], CuboidBox[{11, 15, -10}], 
     CuboidBox[{12, 15, -10}], CuboidBox[{13, 15, -10}], 
     CuboidBox[{14, 15, -10}], CuboidBox[{15, 15, -10}], 
     CuboidBox[{16, 15, -10}], CuboidBox[{17, 15, -10}], 
     CuboidBox[{18, 15, -10}], CuboidBox[{19, 15, -10}], 
     CuboidBox[{20, 15, -10}], CuboidBox[{2, 16, -10}], 
     CuboidBox[{3, 16, -10}], CuboidBox[{4, 16, -10}], 
     CuboidBox[{5, 16, -10}], CuboidBox[{6, 16, -10}], 
     CuboidBox[{7, 16, -10}], CuboidBox[{8, 16, -10}], 
     CuboidBox[{9, 16, -10}], CuboidBox[{10, 16, -10}], 
     CuboidBox[{11, 16, -10}], CuboidBox[{12, 16, -10}], 
     CuboidBox[{13, 16, -10}], CuboidBox[{14, 16, -10}], 
     CuboidBox[{15, 16, -10}], CuboidBox[{16, 16, -10}], 
     CuboidBox[{17, 16, -10}], CuboidBox[{18, 16, -10}], 
     CuboidBox[{19, 16, -10}], CuboidBox[{20, 16, -10}], 
     CuboidBox[{2, 17, -10}], CuboidBox[{3, 17, -10}], 
     CuboidBox[{4, 17, -10}], CuboidBox[{5, 17, -10}], 
     CuboidBox[{6, 17, -10}], CuboidBox[{7, 17, -10}], 
     CuboidBox[{8, 17, -10}], CuboidBox[{9, 17, -10}], 
     CuboidBox[{10, 17, -10}], CuboidBox[{11, 17, -10}], 
     CuboidBox[{12, 17, -10}], CuboidBox[{13, 17, -10}], 
     CuboidBox[{14, 17, -10}], CuboidBox[{15, 17, -10}], 
     CuboidBox[{16, 17, -10}], CuboidBox[{17, 17, -10}], 
     CuboidBox[{18, 17, -10}], CuboidBox[{19, 17, -10}], 
     CuboidBox[{20, 17, -10}], CuboidBox[{2, 18, -10}], 
     CuboidBox[{3, 18, -10}], CuboidBox[{4, 18, -10}], 
     CuboidBox[{5, 18, -10}], CuboidBox[{6, 18, -10}], 
     CuboidBox[{7, 18, -10}], CuboidBox[{8, 18, -10}], 
     CuboidBox[{9, 18, -10}], CuboidBox[{10, 18, -10}], 
     CuboidBox[{11, 18, -10}], CuboidBox[{12, 18, -10}], 
     CuboidBox[{13, 18, -10}], CuboidBox[{14, 18, -10}], 
     CuboidBox[{15, 18, -10}], CuboidBox[{16, 18, -10}], 
     CuboidBox[{17, 18, -10}], CuboidBox[{18, 18, -10}], 
     CuboidBox[{19, 18, -10}], CuboidBox[{20, 18, -10}], 
     CuboidBox[{2, 19, -10}], CuboidBox[{3, 19, -10}], 
     CuboidBox[{4, 19, -10}], CuboidBox[{5, 19, -10}], 
     CuboidBox[{6, 19, -10}], CuboidBox[{7, 19, -10}], 
     CuboidBox[{8, 19, -10}], CuboidBox[{9, 19, -10}], 
     CuboidBox[{10, 19, -10}], CuboidBox[{11, 19, -10}], 
     CuboidBox[{12, 19, -10}], CuboidBox[{13, 19, -10}], 
     CuboidBox[{14, 19, -10}], CuboidBox[{15, 19, -10}], 
     CuboidBox[{16, 19, -10}], CuboidBox[{17, 19, -10}], 
     CuboidBox[{18, 19, -10}], CuboidBox[{19, 19, -10}], 
     CuboidBox[{20, 19, -10}], CuboidBox[{2, 20, -10}], 
     CuboidBox[{3, 20, -10}], CuboidBox[{4, 20, -10}], 
     CuboidBox[{5, 20, -10}], CuboidBox[{6, 20, -10}], 
     CuboidBox[{7, 20, -10}], CuboidBox[{8, 20, -10}], 
     CuboidBox[{9, 20, -10}], CuboidBox[{10, 20, -10}], 
     CuboidBox[{11, 20, -10}], CuboidBox[{12, 20, -10}], 
     CuboidBox[{13, 20, -10}], CuboidBox[{14, 20, -10}], 
     CuboidBox[{15, 20, -10}], CuboidBox[{16, 20, -10}], 
     CuboidBox[{17, 20, -10}], CuboidBox[{18, 20, -10}], 
     CuboidBox[{19, 20, -10}], CuboidBox[{20, 20, -10}], 
     CuboidBox[{1, 1, -11}], CuboidBox[{2, 1, -11}], CuboidBox[{3, 1, -11}], 
     CuboidBox[{4, 1, -11}], CuboidBox[{5, 1, -11}], CuboidBox[{6, 1, -11}], 
     CuboidBox[{7, 1, -11}], CuboidBox[{8, 1, -11}], CuboidBox[{9, 1, -11}], 
     CuboidBox[{10, 1, -11}], CuboidBox[{11, 1, -11}], 
     CuboidBox[{12, 1, -11}], CuboidBox[{13, 1, -11}], 
     CuboidBox[{14, 1, -11}], CuboidBox[{15, 1, -11}], 
     CuboidBox[{16, 1, -11}], CuboidBox[{17, 1, -11}], 
     CuboidBox[{18, 1, -11}], CuboidBox[{19, 1, -11}], 
     CuboidBox[{20, 1, -11}], CuboidBox[{21, 1, -11}], CuboidBox[{1, 2, -11}],
      CuboidBox[{2, 2, -11}], CuboidBox[{3, 2, -11}], CuboidBox[{4, 2, -11}], 
     CuboidBox[{5, 2, -11}], CuboidBox[{6, 2, -11}], CuboidBox[{7, 2, -11}], 
     CuboidBox[{8, 2, -11}], CuboidBox[{9, 2, -11}], CuboidBox[{10, 2, -11}], 
     CuboidBox[{11, 2, -11}], CuboidBox[{12, 2, -11}], 
     CuboidBox[{13, 2, -11}], CuboidBox[{14, 2, -11}], 
     CuboidBox[{15, 2, -11}], CuboidBox[{16, 2, -11}], 
     CuboidBox[{17, 2, -11}], CuboidBox[{18, 2, -11}], 
     CuboidBox[{19, 2, -11}], CuboidBox[{20, 2, -11}], 
     CuboidBox[{21, 2, -11}], CuboidBox[{1, 3, -11}], CuboidBox[{2, 3, -11}], 
     CuboidBox[{3, 3, -11}], CuboidBox[{4, 3, -11}], CuboidBox[{5, 3, -11}], 
     CuboidBox[{6, 3, -11}], CuboidBox[{7, 3, -11}], CuboidBox[{8, 3, -11}], 
     CuboidBox[{9, 3, -11}], CuboidBox[{10, 3, -11}], CuboidBox[{11, 3, -11}],
      CuboidBox[{12, 3, -11}], CuboidBox[{13, 3, -11}], 
     CuboidBox[{14, 3, -11}], CuboidBox[{15, 3, -11}], 
     CuboidBox[{16, 3, -11}], CuboidBox[{17, 3, -11}], 
     CuboidBox[{18, 3, -11}], CuboidBox[{19, 3, -11}], 
     CuboidBox[{20, 3, -11}], CuboidBox[{21, 3, -11}], CuboidBox[{1, 4, -11}],
      CuboidBox[{2, 4, -11}], CuboidBox[{3, 4, -11}], CuboidBox[{4, 4, -11}], 
     CuboidBox[{5, 4, -11}], CuboidBox[{6, 4, -11}], CuboidBox[{7, 4, -11}], 
     CuboidBox[{8, 4, -11}], CuboidBox[{9, 4, -11}], CuboidBox[{10, 4, -11}], 
     CuboidBox[{11, 4, -11}], CuboidBox[{12, 4, -11}], 
     CuboidBox[{13, 4, -11}], CuboidBox[{14, 4, -11}], 
     CuboidBox[{15, 4, -11}], CuboidBox[{16, 4, -11}], 
     CuboidBox[{17, 4, -11}], CuboidBox[{18, 4, -11}], 
     CuboidBox[{19, 4, -11}], CuboidBox[{20, 4, -11}], 
     CuboidBox[{21, 4, -11}], CuboidBox[{1, 5, -11}], CuboidBox[{2, 5, -11}], 
     CuboidBox[{3, 5, -11}], CuboidBox[{4, 5, -11}], CuboidBox[{5, 5, -11}], 
     CuboidBox[{6, 5, -11}], CuboidBox[{7, 5, -11}], CuboidBox[{8, 5, -11}], 
     CuboidBox[{9, 5, -11}], CuboidBox[{10, 5, -11}], CuboidBox[{11, 5, -11}],
      CuboidBox[{12, 5, -11}], CuboidBox[{13, 5, -11}], 
     CuboidBox[{14, 5, -11}], CuboidBox[{15, 5, -11}], 
     CuboidBox[{16, 5, -11}], CuboidBox[{17, 5, -11}], 
     CuboidBox[{18, 5, -11}], CuboidBox[{19, 5, -11}], 
     CuboidBox[{20, 5, -11}], CuboidBox[{21, 5, -11}], CuboidBox[{1, 6, -11}],
      CuboidBox[{2, 6, -11}], CuboidBox[{3, 6, -11}], CuboidBox[{4, 6, -11}], 
     CuboidBox[{5, 6, -11}], CuboidBox[{6, 6, -11}], CuboidBox[{7, 6, -11}], 
     CuboidBox[{8, 6, -11}], CuboidBox[{9, 6, -11}], CuboidBox[{10, 6, -11}], 
     CuboidBox[{11, 6, -11}], CuboidBox[{12, 6, -11}], 
     CuboidBox[{13, 6, -11}], CuboidBox[{14, 6, -11}], 
     CuboidBox[{15, 6, -11}], CuboidBox[{16, 6, -11}], 
     CuboidBox[{17, 6, -11}], CuboidBox[{18, 6, -11}], 
     CuboidBox[{19, 6, -11}], CuboidBox[{20, 6, -11}], 
     CuboidBox[{21, 6, -11}], CuboidBox[{1, 7, -11}], CuboidBox[{2, 7, -11}], 
     CuboidBox[{3, 7, -11}], CuboidBox[{4, 7, -11}], CuboidBox[{5, 7, -11}], 
     CuboidBox[{6, 7, -11}], CuboidBox[{7, 7, -11}], CuboidBox[{8, 7, -11}], 
     CuboidBox[{9, 7, -11}], CuboidBox[{10, 7, -11}], CuboidBox[{11, 7, -11}],
      CuboidBox[{12, 7, -11}], CuboidBox[{13, 7, -11}], 
     CuboidBox[{14, 7, -11}], CuboidBox[{15, 7, -11}], 
     CuboidBox[{16, 7, -11}], CuboidBox[{17, 7, -11}], 
     CuboidBox[{18, 7, -11}], CuboidBox[{19, 7, -11}], 
     CuboidBox[{20, 7, -11}], CuboidBox[{21, 7, -11}], CuboidBox[{1, 8, -11}],
      CuboidBox[{2, 8, -11}], CuboidBox[{3, 8, -11}], CuboidBox[{4, 8, -11}], 
     CuboidBox[{5, 8, -11}], CuboidBox[{6, 8, -11}], CuboidBox[{7, 8, -11}], 
     CuboidBox[{8, 8, -11}], CuboidBox[{9, 8, -11}], CuboidBox[{10, 8, -11}], 
     CuboidBox[{11, 8, -11}], CuboidBox[{12, 8, -11}], 
     CuboidBox[{13, 8, -11}], CuboidBox[{14, 8, -11}], 
     CuboidBox[{15, 8, -11}], CuboidBox[{16, 8, -11}], 
     CuboidBox[{17, 8, -11}], CuboidBox[{18, 8, -11}], 
     CuboidBox[{19, 8, -11}], CuboidBox[{20, 8, -11}], 
     CuboidBox[{21, 8, -11}], CuboidBox[{1, 9, -11}], CuboidBox[{2, 9, -11}], 
     CuboidBox[{3, 9, -11}], CuboidBox[{4, 9, -11}], CuboidBox[{5, 9, -11}], 
     CuboidBox[{6, 9, -11}], CuboidBox[{7, 9, -11}], CuboidBox[{8, 9, -11}], 
     CuboidBox[{9, 9, -11}], CuboidBox[{10, 9, -11}], CuboidBox[{11, 9, -11}],
      CuboidBox[{12, 9, -11}], CuboidBox[{13, 9, -11}], 
     CuboidBox[{14, 9, -11}], CuboidBox[{15, 9, -11}], 
     CuboidBox[{16, 9, -11}], CuboidBox[{17, 9, -11}], 
     CuboidBox[{18, 9, -11}], CuboidBox[{19, 9, -11}], 
     CuboidBox[{20, 9, -11}], CuboidBox[{21, 9, -11}], 
     CuboidBox[{1, 10, -11}], CuboidBox[{2, 10, -11}], 
     CuboidBox[{3, 10, -11}], CuboidBox[{4, 10, -11}], 
     CuboidBox[{5, 10, -11}], CuboidBox[{6, 10, -11}], 
     CuboidBox[{7, 10, -11}], CuboidBox[{8, 10, -11}], 
     CuboidBox[{9, 10, -11}], CuboidBox[{10, 10, -11}], 
     CuboidBox[{11, 10, -11}], CuboidBox[{12, 10, -11}], 
     CuboidBox[{13, 10, -11}], CuboidBox[{14, 10, -11}], 
     CuboidBox[{15, 10, -11}], CuboidBox[{16, 10, -11}], 
     CuboidBox[{17, 10, -11}], CuboidBox[{18, 10, -11}], 
     CuboidBox[{19, 10, -11}], CuboidBox[{20, 10, -11}], 
     CuboidBox[{21, 10, -11}], CuboidBox[{1, 11, -11}], 
     CuboidBox[{2, 11, -11}], CuboidBox[{3, 11, -11}], 
     CuboidBox[{4, 11, -11}], CuboidBox[{5, 11, -11}], 
     CuboidBox[{6, 11, -11}], CuboidBox[{7, 11, -11}], 
     CuboidBox[{8, 11, -11}], CuboidBox[{9, 11, -11}], 
     CuboidBox[{10, 11, -11}], CuboidBox[{11, 11, -11}], 
     CuboidBox[{12, 11, -11}], CuboidBox[{13, 11, -11}], 
     CuboidBox[{14, 11, -11}], CuboidBox[{15, 11, -11}], 
     CuboidBox[{16, 11, -11}], CuboidBox[{17, 11, -11}], 
     CuboidBox[{18, 11, -11}], CuboidBox[{19, 11, -11}], 
     CuboidBox[{20, 11, -11}], CuboidBox[{21, 11, -11}], 
     CuboidBox[{1, 12, -11}], CuboidBox[{2, 12, -11}], 
     CuboidBox[{3, 12, -11}], CuboidBox[{4, 12, -11}], 
     CuboidBox[{5, 12, -11}], CuboidBox[{6, 12, -11}], 
     CuboidBox[{7, 12, -11}], CuboidBox[{8, 12, -11}], 
     CuboidBox[{9, 12, -11}], CuboidBox[{10, 12, -11}], 
     CuboidBox[{11, 12, -11}], CuboidBox[{12, 12, -11}], 
     CuboidBox[{13, 12, -11}], CuboidBox[{14, 12, -11}], 
     CuboidBox[{15, 12, -11}], CuboidBox[{16, 12, -11}], 
     CuboidBox[{17, 12, -11}], CuboidBox[{18, 12, -11}], 
     CuboidBox[{19, 12, -11}], CuboidBox[{20, 12, -11}], 
     CuboidBox[{21, 12, -11}], CuboidBox[{1, 13, -11}], 
     CuboidBox[{2, 13, -11}], CuboidBox[{3, 13, -11}], 
     CuboidBox[{4, 13, -11}], CuboidBox[{5, 13, -11}], 
     CuboidBox[{6, 13, -11}], CuboidBox[{7, 13, -11}], 
     CuboidBox[{8, 13, -11}], CuboidBox[{9, 13, -11}], 
     CuboidBox[{10, 13, -11}], CuboidBox[{11, 13, -11}], 
     CuboidBox[{12, 13, -11}], CuboidBox[{13, 13, -11}], 
     CuboidBox[{14, 13, -11}], CuboidBox[{15, 13, -11}], 
     CuboidBox[{16, 13, -11}], CuboidBox[{17, 13, -11}], 
     CuboidBox[{18, 13, -11}], CuboidBox[{19, 13, -11}], 
     CuboidBox[{20, 13, -11}], CuboidBox[{21, 13, -11}], 
     CuboidBox[{1, 14, -11}], CuboidBox[{2, 14, -11}], 
     CuboidBox[{3, 14, -11}], CuboidBox[{4, 14, -11}], 
     CuboidBox[{5, 14, -11}], CuboidBox[{6, 14, -11}], 
     CuboidBox[{7, 14, -11}], CuboidBox[{8, 14, -11}], 
     CuboidBox[{9, 14, -11}], CuboidBox[{10, 14, -11}], 
     CuboidBox[{11, 14, -11}], CuboidBox[{12, 14, -11}], 
     CuboidBox[{13, 14, -11}], CuboidBox[{14, 14, -11}], 
     CuboidBox[{15, 14, -11}], CuboidBox[{16, 14, -11}], 
     CuboidBox[{17, 14, -11}], CuboidBox[{18, 14, -11}], 
     CuboidBox[{19, 14, -11}], CuboidBox[{20, 14, -11}], 
     CuboidBox[{21, 14, -11}], CuboidBox[{1, 15, -11}], 
     CuboidBox[{2, 15, -11}], CuboidBox[{3, 15, -11}], 
     CuboidBox[{4, 15, -11}], CuboidBox[{5, 15, -11}], 
     CuboidBox[{6, 15, -11}], CuboidBox[{7, 15, -11}], 
     CuboidBox[{8, 15, -11}], CuboidBox[{9, 15, -11}], 
     CuboidBox[{10, 15, -11}], CuboidBox[{11, 15, -11}], 
     CuboidBox[{12, 15, -11}], CuboidBox[{13, 15, -11}], 
     CuboidBox[{14, 15, -11}], CuboidBox[{15, 15, -11}], 
     CuboidBox[{16, 15, -11}], CuboidBox[{17, 15, -11}], 
     CuboidBox[{18, 15, -11}], CuboidBox[{19, 15, -11}], 
     CuboidBox[{20, 15, -11}], CuboidBox[{21, 15, -11}], 
     CuboidBox[{1, 16, -11}], CuboidBox[{2, 16, -11}], 
     CuboidBox[{3, 16, -11}], CuboidBox[{4, 16, -11}], 
     CuboidBox[{5, 16, -11}], CuboidBox[{6, 16, -11}], 
     CuboidBox[{7, 16, -11}], CuboidBox[{8, 16, -11}], 
     CuboidBox[{9, 16, -11}], CuboidBox[{10, 16, -11}], 
     CuboidBox[{11, 16, -11}], CuboidBox[{12, 16, -11}], 
     CuboidBox[{13, 16, -11}], CuboidBox[{14, 16, -11}], 
     CuboidBox[{15, 16, -11}], CuboidBox[{16, 16, -11}], 
     CuboidBox[{17, 16, -11}], CuboidBox[{18, 16, -11}], 
     CuboidBox[{19, 16, -11}], CuboidBox[{20, 16, -11}], 
     CuboidBox[{21, 16, -11}], CuboidBox[{1, 17, -11}], 
     CuboidBox[{2, 17, -11}], CuboidBox[{3, 17, -11}], 
     CuboidBox[{4, 17, -11}], CuboidBox[{5, 17, -11}], 
     CuboidBox[{6, 17, -11}], CuboidBox[{7, 17, -11}], 
     CuboidBox[{8, 17, -11}], CuboidBox[{9, 17, -11}], 
     CuboidBox[{10, 17, -11}], CuboidBox[{11, 17, -11}], 
     CuboidBox[{12, 17, -11}], CuboidBox[{13, 17, -11}], 
     CuboidBox[{14, 17, -11}], CuboidBox[{15, 17, -11}], 
     CuboidBox[{16, 17, -11}], CuboidBox[{17, 17, -11}], 
     CuboidBox[{18, 17, -11}], CuboidBox[{19, 17, -11}], 
     CuboidBox[{20, 17, -11}], CuboidBox[{21, 17, -11}], 
     CuboidBox[{1, 18, -11}], CuboidBox[{2, 18, -11}], 
     CuboidBox[{3, 18, -11}], CuboidBox[{4, 18, -11}], 
     CuboidBox[{5, 18, -11}], CuboidBox[{6, 18, -11}], 
     CuboidBox[{7, 18, -11}], CuboidBox[{8, 18, -11}], 
     CuboidBox[{9, 18, -11}], CuboidBox[{10, 18, -11}], 
     CuboidBox[{11, 18, -11}], CuboidBox[{12, 18, -11}], 
     CuboidBox[{13, 18, -11}], CuboidBox[{14, 18, -11}], 
     CuboidBox[{15, 18, -11}], CuboidBox[{16, 18, -11}], 
     CuboidBox[{17, 18, -11}], CuboidBox[{18, 18, -11}], 
     CuboidBox[{19, 18, -11}], CuboidBox[{20, 18, -11}], 
     CuboidBox[{21, 18, -11}], CuboidBox[{1, 19, -11}], 
     CuboidBox[{2, 19, -11}], CuboidBox[{3, 19, -11}], 
     CuboidBox[{4, 19, -11}], CuboidBox[{5, 19, -11}], 
     CuboidBox[{6, 19, -11}], CuboidBox[{7, 19, -11}], 
     CuboidBox[{8, 19, -11}], CuboidBox[{9, 19, -11}], 
     CuboidBox[{10, 19, -11}], CuboidBox[{11, 19, -11}], 
     CuboidBox[{12, 19, -11}], CuboidBox[{13, 19, -11}], 
     CuboidBox[{14, 19, -11}], CuboidBox[{15, 19, -11}], 
     CuboidBox[{16, 19, -11}], CuboidBox[{17, 19, -11}], 
     CuboidBox[{18, 19, -11}], CuboidBox[{19, 19, -11}], 
     CuboidBox[{20, 19, -11}], CuboidBox[{21, 19, -11}], 
     CuboidBox[{1, 20, -11}], CuboidBox[{2, 20, -11}], 
     CuboidBox[{3, 20, -11}], CuboidBox[{4, 20, -11}], 
     CuboidBox[{5, 20, -11}], CuboidBox[{6, 20, -11}], 
     CuboidBox[{7, 20, -11}], CuboidBox[{8, 20, -11}], 
     CuboidBox[{9, 20, -11}], CuboidBox[{10, 20, -11}], 
     CuboidBox[{11, 20, -11}], CuboidBox[{12, 20, -11}], 
     CuboidBox[{13, 20, -11}], CuboidBox[{14, 20, -11}], 
     CuboidBox[{15, 20, -11}], CuboidBox[{16, 20, -11}], 
     CuboidBox[{17, 20, -11}], CuboidBox[{18, 20, -11}], 
     CuboidBox[{19, 20, -11}], CuboidBox[{20, 20, -11}], 
     CuboidBox[{21, 20, -11}], CuboidBox[{1, 21, -11}], 
     CuboidBox[{2, 21, -11}], CuboidBox[{3, 21, -11}], 
     CuboidBox[{4, 21, -11}], CuboidBox[{5, 21, -11}], 
     CuboidBox[{6, 21, -11}], CuboidBox[{7, 21, -11}], 
     CuboidBox[{8, 21, -11}], CuboidBox[{9, 21, -11}], 
     CuboidBox[{10, 21, -11}], CuboidBox[{11, 21, -11}], 
     CuboidBox[{12, 21, -11}], CuboidBox[{13, 21, -11}], 
     CuboidBox[{14, 21, -11}], CuboidBox[{15, 21, -11}], 
     CuboidBox[{16, 21, -11}], CuboidBox[{17, 21, -11}], 
     CuboidBox[{18, 21, -11}], CuboidBox[{19, 21, -11}], 
     CuboidBox[{20, 21, -11}], CuboidBox[{21, 21, -11}]}], ",", 
   Graphics3DBox[{CuboidBox[{1, 21, -1}], CuboidBox[{1, 19, -2}], 
     CuboidBox[{2, 19, -2}], CuboidBox[{3, 19, -2}], CuboidBox[{1, 20, -2}], 
     CuboidBox[{2, 20, -2}], CuboidBox[{3, 20, -2}], CuboidBox[{1, 21, -2}], 
     CuboidBox[{2, 21, -2}], CuboidBox[{3, 21, -2}], CuboidBox[{1, 17, -3}], 
     CuboidBox[{2, 17, -3}], CuboidBox[{3, 17, -3}], CuboidBox[{4, 17, -3}], 
     CuboidBox[{5, 17, -3}], CuboidBox[{1, 18, -3}], CuboidBox[{2, 18, -3}], 
     CuboidBox[{3, 18, -3}], CuboidBox[{4, 18, -3}], CuboidBox[{5, 18, -3}], 
     CuboidBox[{1, 19, -3}], CuboidBox[{2, 19, -3}], CuboidBox[{3, 19, -3}], 
     CuboidBox[{4, 19, -3}], CuboidBox[{5, 19, -3}], CuboidBox[{1, 20, -3}], 
     CuboidBox[{2, 20, -3}], CuboidBox[{3, 20, -3}], CuboidBox[{4, 20, -3}], 
     CuboidBox[{5, 20, -3}], CuboidBox[{1, 21, -3}], CuboidBox[{2, 21, -3}], 
     CuboidBox[{3, 21, -3}], CuboidBox[{4, 21, -3}], CuboidBox[{5, 21, -3}], 
     CuboidBox[{1, 15, -4}], CuboidBox[{2, 15, -4}], CuboidBox[{3, 15, -4}], 
     CuboidBox[{4, 15, -4}], CuboidBox[{5, 15, -4}], CuboidBox[{6, 15, -4}], 
     CuboidBox[{7, 15, -4}], CuboidBox[{1, 16, -4}], CuboidBox[{2, 16, -4}], 
     CuboidBox[{3, 16, -4}], CuboidBox[{4, 16, -4}], CuboidBox[{5, 16, -4}], 
     CuboidBox[{6, 16, -4}], CuboidBox[{7, 16, -4}], CuboidBox[{1, 17, -4}], 
     CuboidBox[{2, 17, -4}], CuboidBox[{3, 17, -4}], CuboidBox[{4, 17, -4}], 
     CuboidBox[{5, 17, -4}], CuboidBox[{6, 17, -4}], CuboidBox[{7, 17, -4}], 
     CuboidBox[{1, 18, -4}], CuboidBox[{2, 18, -4}], CuboidBox[{3, 18, -4}], 
     CuboidBox[{4, 18, -4}], CuboidBox[{5, 18, -4}], CuboidBox[{6, 18, -4}], 
     CuboidBox[{7, 18, -4}], CuboidBox[{1, 19, -4}], CuboidBox[{2, 19, -4}], 
     CuboidBox[{3, 19, -4}], CuboidBox[{4, 19, -4}], CuboidBox[{5, 19, -4}], 
     CuboidBox[{6, 19, -4}], CuboidBox[{7, 19, -4}], CuboidBox[{1, 20, -4}], 
     CuboidBox[{2, 20, -4}], CuboidBox[{3, 20, -4}], CuboidBox[{4, 20, -4}], 
     CuboidBox[{5, 20, -4}], CuboidBox[{6, 20, -4}], CuboidBox[{7, 20, -4}], 
     CuboidBox[{1, 21, -4}], CuboidBox[{2, 21, -4}], CuboidBox[{3, 21, -4}], 
     CuboidBox[{4, 21, -4}], CuboidBox[{5, 21, -4}], CuboidBox[{6, 21, -4}], 
     CuboidBox[{7, 21, -4}], CuboidBox[{1, 13, -5}], CuboidBox[{2, 13, -5}], 
     CuboidBox[{3, 13, -5}], CuboidBox[{4, 13, -5}], CuboidBox[{5, 13, -5}], 
     CuboidBox[{6, 13, -5}], CuboidBox[{7, 13, -5}], CuboidBox[{8, 13, -5}], 
     CuboidBox[{9, 13, -5}], CuboidBox[{1, 14, -5}], CuboidBox[{2, 14, -5}], 
     CuboidBox[{3, 14, -5}], CuboidBox[{4, 14, -5}], CuboidBox[{5, 14, -5}], 
     CuboidBox[{6, 14, -5}], CuboidBox[{7, 14, -5}], CuboidBox[{8, 14, -5}], 
     CuboidBox[{9, 14, -5}], CuboidBox[{1, 15, -5}], CuboidBox[{2, 15, -5}], 
     CuboidBox[{3, 15, -5}], CuboidBox[{4, 15, -5}], CuboidBox[{5, 15, -5}], 
     CuboidBox[{6, 15, -5}], CuboidBox[{7, 15, -5}], CuboidBox[{8, 15, -5}], 
     CuboidBox[{9, 15, -5}], CuboidBox[{1, 16, -5}], CuboidBox[{2, 16, -5}], 
     CuboidBox[{3, 16, -5}], CuboidBox[{4, 16, -5}], CuboidBox[{5, 16, -5}], 
     CuboidBox[{6, 16, -5}], CuboidBox[{7, 16, -5}], CuboidBox[{8, 16, -5}], 
     CuboidBox[{9, 16, -5}], CuboidBox[{1, 17, -5}], CuboidBox[{2, 17, -5}], 
     CuboidBox[{3, 17, -5}], CuboidBox[{4, 17, -5}], CuboidBox[{5, 17, -5}], 
     CuboidBox[{6, 17, -5}], CuboidBox[{7, 17, -5}], CuboidBox[{8, 17, -5}], 
     CuboidBox[{9, 17, -5}], CuboidBox[{1, 18, -5}], CuboidBox[{2, 18, -5}], 
     CuboidBox[{3, 18, -5}], CuboidBox[{4, 18, -5}], CuboidBox[{5, 18, -5}], 
     CuboidBox[{6, 18, -5}], CuboidBox[{7, 18, -5}], CuboidBox[{8, 18, -5}], 
     CuboidBox[{9, 18, -5}], CuboidBox[{1, 19, -5}], CuboidBox[{2, 19, -5}], 
     CuboidBox[{3, 19, -5}], CuboidBox[{4, 19, -5}], CuboidBox[{5, 19, -5}], 
     CuboidBox[{6, 19, -5}], CuboidBox[{7, 19, -5}], CuboidBox[{8, 19, -5}], 
     CuboidBox[{9, 19, -5}], CuboidBox[{1, 20, -5}], CuboidBox[{2, 20, -5}], 
     CuboidBox[{3, 20, -5}], CuboidBox[{4, 20, -5}], CuboidBox[{5, 20, -5}], 
     CuboidBox[{6, 20, -5}], CuboidBox[{7, 20, -5}], CuboidBox[{8, 20, -5}], 
     CuboidBox[{9, 20, -5}], CuboidBox[{1, 21, -5}], CuboidBox[{2, 21, -5}], 
     CuboidBox[{3, 21, -5}], CuboidBox[{4, 21, -5}], CuboidBox[{5, 21, -5}], 
     CuboidBox[{6, 21, -5}], CuboidBox[{7, 21, -5}], CuboidBox[{8, 21, -5}], 
     CuboidBox[{9, 21, -5}], CuboidBox[{1, 11, -6}], CuboidBox[{2, 11, -6}], 
     CuboidBox[{3, 11, -6}], CuboidBox[{4, 11, -6}], CuboidBox[{5, 11, -6}], 
     CuboidBox[{6, 11, -6}], CuboidBox[{7, 11, -6}], CuboidBox[{8, 11, -6}], 
     CuboidBox[{9, 11, -6}], CuboidBox[{10, 11, -6}], CuboidBox[{11, 11, -6}],
      CuboidBox[{1, 12, -6}], CuboidBox[{2, 12, -6}], CuboidBox[{3, 12, -6}], 
     CuboidBox[{4, 12, -6}], CuboidBox[{5, 12, -6}], CuboidBox[{6, 12, -6}], 
     CuboidBox[{7, 12, -6}], CuboidBox[{8, 12, -6}], CuboidBox[{9, 12, -6}], 
     CuboidBox[{10, 12, -6}], CuboidBox[{11, 12, -6}], CuboidBox[{1, 13, -6}],
      CuboidBox[{2, 13, -6}], CuboidBox[{3, 13, -6}], CuboidBox[{4, 13, -6}], 
     CuboidBox[{5, 13, -6}], CuboidBox[{6, 13, -6}], CuboidBox[{7, 13, -6}], 
     CuboidBox[{8, 13, -6}], CuboidBox[{9, 13, -6}], CuboidBox[{10, 13, -6}], 
     CuboidBox[{11, 13, -6}], CuboidBox[{1, 14, -6}], CuboidBox[{2, 14, -6}], 
     CuboidBox[{3, 14, -6}], CuboidBox[{4, 14, -6}], CuboidBox[{5, 14, -6}], 
     CuboidBox[{6, 14, -6}], CuboidBox[{7, 14, -6}], CuboidBox[{8, 14, -6}], 
     CuboidBox[{9, 14, -6}], CuboidBox[{10, 14, -6}], CuboidBox[{11, 14, -6}],
      CuboidBox[{1, 15, -6}], CuboidBox[{2, 15, -6}], CuboidBox[{3, 15, -6}], 
     CuboidBox[{4, 15, -6}], CuboidBox[{5, 15, -6}], CuboidBox[{6, 15, -6}], 
     CuboidBox[{7, 15, -6}], CuboidBox[{8, 15, -6}], CuboidBox[{9, 15, -6}], 
     CuboidBox[{10, 15, -6}], CuboidBox[{11, 15, -6}], CuboidBox[{1, 16, -6}],
      CuboidBox[{2, 16, -6}], CuboidBox[{3, 16, -6}], CuboidBox[{4, 16, -6}], 
     CuboidBox[{5, 16, -6}], CuboidBox[{6, 16, -6}], CuboidBox[{7, 16, -6}], 
     CuboidBox[{8, 16, -6}], CuboidBox[{9, 16, -6}], CuboidBox[{10, 16, -6}], 
     CuboidBox[{11, 16, -6}], CuboidBox[{1, 17, -6}], CuboidBox[{2, 17, -6}], 
     CuboidBox[{3, 17, -6}], CuboidBox[{4, 17, -6}], CuboidBox[{5, 17, -6}], 
     CuboidBox[{6, 17, -6}], CuboidBox[{7, 17, -6}], CuboidBox[{8, 17, -6}], 
     CuboidBox[{9, 17, -6}], CuboidBox[{10, 17, -6}], CuboidBox[{11, 17, -6}],
      CuboidBox[{1, 18, -6}], CuboidBox[{2, 18, -6}], CuboidBox[{3, 18, -6}], 
     CuboidBox[{4, 18, -6}], CuboidBox[{5, 18, -6}], CuboidBox[{6, 18, -6}], 
     CuboidBox[{7, 18, -6}], CuboidBox[{8, 18, -6}], CuboidBox[{9, 18, -6}], 
     CuboidBox[{10, 18, -6}], CuboidBox[{11, 18, -6}], CuboidBox[{1, 19, -6}],
      CuboidBox[{2, 19, -6}], CuboidBox[{3, 19, -6}], CuboidBox[{4, 19, -6}], 
     CuboidBox[{5, 19, -6}], CuboidBox[{6, 19, -6}], CuboidBox[{7, 19, -6}], 
     CuboidBox[{8, 19, -6}], CuboidBox[{9, 19, -6}], CuboidBox[{10, 19, -6}], 
     CuboidBox[{11, 19, -6}], CuboidBox[{1, 20, -6}], CuboidBox[{2, 20, -6}], 
     CuboidBox[{3, 20, -6}], CuboidBox[{4, 20, -6}], CuboidBox[{5, 20, -6}], 
     CuboidBox[{6, 20, -6}], CuboidBox[{7, 20, -6}], CuboidBox[{8, 20, -6}], 
     CuboidBox[{9, 20, -6}], CuboidBox[{10, 20, -6}], CuboidBox[{11, 20, -6}],
      CuboidBox[{1, 21, -6}], CuboidBox[{2, 21, -6}], CuboidBox[{3, 21, -6}], 
     CuboidBox[{4, 21, -6}], CuboidBox[{5, 21, -6}], CuboidBox[{6, 21, -6}], 
     CuboidBox[{7, 21, -6}], CuboidBox[{8, 21, -6}], CuboidBox[{9, 21, -6}], 
     CuboidBox[{10, 21, -6}], CuboidBox[{11, 21, -6}], CuboidBox[{1, 9, -7}], 
     CuboidBox[{2, 9, -7}], CuboidBox[{3, 9, -7}], CuboidBox[{4, 9, -7}], 
     CuboidBox[{5, 9, -7}], CuboidBox[{6, 9, -7}], CuboidBox[{7, 9, -7}], 
     CuboidBox[{8, 9, -7}], CuboidBox[{9, 9, -7}], CuboidBox[{10, 9, -7}], 
     CuboidBox[{11, 9, -7}], CuboidBox[{12, 9, -7}], CuboidBox[{13, 9, -7}], 
     CuboidBox[{1, 10, -7}], CuboidBox[{2, 10, -7}], CuboidBox[{3, 10, -7}], 
     CuboidBox[{4, 10, -7}], CuboidBox[{5, 10, -7}], CuboidBox[{6, 10, -7}], 
     CuboidBox[{7, 10, -7}], CuboidBox[{8, 10, -7}], CuboidBox[{9, 10, -7}], 
     CuboidBox[{10, 10, -7}], CuboidBox[{11, 10, -7}], 
     CuboidBox[{12, 10, -7}], CuboidBox[{13, 10, -7}], CuboidBox[{1, 11, -7}],
      CuboidBox[{2, 11, -7}], CuboidBox[{3, 11, -7}], CuboidBox[{4, 11, -7}], 
     CuboidBox[{5, 11, -7}], CuboidBox[{6, 11, -7}], CuboidBox[{7, 11, -7}], 
     CuboidBox[{8, 11, -7}], CuboidBox[{9, 11, -7}], CuboidBox[{10, 11, -7}], 
     CuboidBox[{11, 11, -7}], CuboidBox[{12, 11, -7}], 
     CuboidBox[{13, 11, -7}], CuboidBox[{1, 12, -7}], CuboidBox[{2, 12, -7}], 
     CuboidBox[{3, 12, -7}], CuboidBox[{4, 12, -7}], CuboidBox[{5, 12, -7}], 
     CuboidBox[{6, 12, -7}], CuboidBox[{7, 12, -7}], CuboidBox[{8, 12, -7}], 
     CuboidBox[{9, 12, -7}], CuboidBox[{10, 12, -7}], CuboidBox[{11, 12, -7}],
      CuboidBox[{12, 12, -7}], CuboidBox[{13, 12, -7}], 
     CuboidBox[{1, 13, -7}], CuboidBox[{2, 13, -7}], CuboidBox[{3, 13, -7}], 
     CuboidBox[{4, 13, -7}], CuboidBox[{5, 13, -7}], CuboidBox[{6, 13, -7}], 
     CuboidBox[{7, 13, -7}], CuboidBox[{8, 13, -7}], CuboidBox[{9, 13, -7}], 
     CuboidBox[{10, 13, -7}], CuboidBox[{11, 13, -7}], 
     CuboidBox[{12, 13, -7}], CuboidBox[{13, 13, -7}], CuboidBox[{1, 14, -7}],
      CuboidBox[{2, 14, -7}], CuboidBox[{3, 14, -7}], CuboidBox[{4, 14, -7}], 
     CuboidBox[{5, 14, -7}], CuboidBox[{6, 14, -7}], CuboidBox[{7, 14, -7}], 
     CuboidBox[{8, 14, -7}], CuboidBox[{9, 14, -7}], CuboidBox[{10, 14, -7}], 
     CuboidBox[{11, 14, -7}], CuboidBox[{12, 14, -7}], 
     CuboidBox[{13, 14, -7}], CuboidBox[{1, 15, -7}], CuboidBox[{2, 15, -7}], 
     CuboidBox[{3, 15, -7}], CuboidBox[{4, 15, -7}], CuboidBox[{5, 15, -7}], 
     CuboidBox[{6, 15, -7}], CuboidBox[{7, 15, -7}], CuboidBox[{8, 15, -7}], 
     CuboidBox[{9, 15, -7}], CuboidBox[{10, 15, -7}], CuboidBox[{11, 15, -7}],
      CuboidBox[{12, 15, -7}], CuboidBox[{13, 15, -7}], 
     CuboidBox[{1, 16, -7}], CuboidBox[{2, 16, -7}], CuboidBox[{3, 16, -7}], 
     CuboidBox[{4, 16, -7}], CuboidBox[{5, 16, -7}], CuboidBox[{6, 16, -7}], 
     CuboidBox[{7, 16, -7}], CuboidBox[{8, 16, -7}], CuboidBox[{9, 16, -7}], 
     CuboidBox[{10, 16, -7}], CuboidBox[{11, 16, -7}], 
     CuboidBox[{12, 16, -7}], CuboidBox[{13, 16, -7}], CuboidBox[{1, 17, -7}],
      CuboidBox[{2, 17, -7}], CuboidBox[{3, 17, -7}], CuboidBox[{4, 17, -7}], 
     CuboidBox[{5, 17, -7}], CuboidBox[{6, 17, -7}], CuboidBox[{7, 17, -7}], 
     CuboidBox[{8, 17, -7}], CuboidBox[{9, 17, -7}], CuboidBox[{10, 17, -7}], 
     CuboidBox[{11, 17, -7}], CuboidBox[{12, 17, -7}], 
     CuboidBox[{13, 17, -7}], CuboidBox[{1, 18, -7}], CuboidBox[{2, 18, -7}], 
     CuboidBox[{3, 18, -7}], CuboidBox[{4, 18, -7}], CuboidBox[{5, 18, -7}], 
     CuboidBox[{6, 18, -7}], CuboidBox[{7, 18, -7}], CuboidBox[{8, 18, -7}], 
     CuboidBox[{9, 18, -7}], CuboidBox[{10, 18, -7}], CuboidBox[{11, 18, -7}],
      CuboidBox[{12, 18, -7}], CuboidBox[{13, 18, -7}], 
     CuboidBox[{1, 19, -7}], CuboidBox[{2, 19, -7}], CuboidBox[{3, 19, -7}], 
     CuboidBox[{4, 19, -7}], CuboidBox[{5, 19, -7}], CuboidBox[{6, 19, -7}], 
     CuboidBox[{7, 19, -7}], CuboidBox[{8, 19, -7}], CuboidBox[{9, 19, -7}], 
     CuboidBox[{10, 19, -7}], CuboidBox[{11, 19, -7}], 
     CuboidBox[{12, 19, -7}], CuboidBox[{13, 19, -7}], CuboidBox[{1, 20, -7}],
      CuboidBox[{2, 20, -7}], CuboidBox[{3, 20, -7}], CuboidBox[{4, 20, -7}], 
     CuboidBox[{5, 20, -7}], CuboidBox[{6, 20, -7}], CuboidBox[{7, 20, -7}], 
     CuboidBox[{8, 20, -7}], CuboidBox[{9, 20, -7}], CuboidBox[{10, 20, -7}], 
     CuboidBox[{11, 20, -7}], CuboidBox[{12, 20, -7}], 
     CuboidBox[{13, 20, -7}], CuboidBox[{1, 21, -7}], CuboidBox[{2, 21, -7}], 
     CuboidBox[{3, 21, -7}], CuboidBox[{4, 21, -7}], CuboidBox[{5, 21, -7}], 
     CuboidBox[{6, 21, -7}], CuboidBox[{7, 21, -7}], CuboidBox[{8, 21, -7}], 
     CuboidBox[{9, 21, -7}], CuboidBox[{10, 21, -7}], CuboidBox[{11, 21, -7}],
      CuboidBox[{12, 21, -7}], CuboidBox[{13, 21, -7}], CuboidBox[{1, 7, -8}],
      CuboidBox[{2, 7, -8}], CuboidBox[{3, 7, -8}], CuboidBox[{4, 7, -8}], 
     CuboidBox[{5, 7, -8}], CuboidBox[{6, 7, -8}], CuboidBox[{7, 7, -8}], 
     CuboidBox[{8, 7, -8}], CuboidBox[{9, 7, -8}], CuboidBox[{10, 7, -8}], 
     CuboidBox[{11, 7, -8}], CuboidBox[{12, 7, -8}], CuboidBox[{13, 7, -8}], 
     CuboidBox[{14, 7, -8}], CuboidBox[{15, 7, -8}], CuboidBox[{1, 8, -8}], 
     CuboidBox[{2, 8, -8}], CuboidBox[{3, 8, -8}], CuboidBox[{4, 8, -8}], 
     CuboidBox[{5, 8, -8}], CuboidBox[{6, 8, -8}], CuboidBox[{7, 8, -8}], 
     CuboidBox[{8, 8, -8}], CuboidBox[{9, 8, -8}], CuboidBox[{10, 8, -8}], 
     CuboidBox[{11, 8, -8}], CuboidBox[{12, 8, -8}], CuboidBox[{13, 8, -8}], 
     CuboidBox[{14, 8, -8}], CuboidBox[{15, 8, -8}], CuboidBox[{1, 9, -8}], 
     CuboidBox[{2, 9, -8}], CuboidBox[{3, 9, -8}], CuboidBox[{4, 9, -8}], 
     CuboidBox[{5, 9, -8}], CuboidBox[{6, 9, -8}], CuboidBox[{7, 9, -8}], 
     CuboidBox[{8, 9, -8}], CuboidBox[{9, 9, -8}], CuboidBox[{10, 9, -8}], 
     CuboidBox[{11, 9, -8}], CuboidBox[{12, 9, -8}], CuboidBox[{13, 9, -8}], 
     CuboidBox[{14, 9, -8}], CuboidBox[{15, 9, -8}], CuboidBox[{1, 10, -8}], 
     CuboidBox[{2, 10, -8}], CuboidBox[{3, 10, -8}], CuboidBox[{4, 10, -8}], 
     CuboidBox[{5, 10, -8}], CuboidBox[{6, 10, -8}], CuboidBox[{7, 10, -8}], 
     CuboidBox[{8, 10, -8}], CuboidBox[{9, 10, -8}], CuboidBox[{10, 10, -8}], 
     CuboidBox[{11, 10, -8}], CuboidBox[{12, 10, -8}], 
     CuboidBox[{13, 10, -8}], CuboidBox[{14, 10, -8}], 
     CuboidBox[{15, 10, -8}], CuboidBox[{1, 11, -8}], CuboidBox[{2, 11, -8}], 
     CuboidBox[{3, 11, -8}], CuboidBox[{4, 11, -8}], CuboidBox[{5, 11, -8}], 
     CuboidBox[{6, 11, -8}], CuboidBox[{7, 11, -8}], CuboidBox[{8, 11, -8}], 
     CuboidBox[{9, 11, -8}], CuboidBox[{10, 11, -8}], CuboidBox[{11, 11, -8}],
      CuboidBox[{12, 11, -8}], CuboidBox[{13, 11, -8}], 
     CuboidBox[{14, 11, -8}], CuboidBox[{15, 11, -8}], CuboidBox[{1, 12, -8}],
      CuboidBox[{2, 12, -8}], CuboidBox[{3, 12, -8}], CuboidBox[{4, 12, -8}], 
     CuboidBox[{5, 12, -8}], CuboidBox[{6, 12, -8}], CuboidBox[{7, 12, -8}], 
     CuboidBox[{8, 12, -8}], CuboidBox[{9, 12, -8}], CuboidBox[{10, 12, -8}], 
     CuboidBox[{11, 12, -8}], CuboidBox[{12, 12, -8}], 
     CuboidBox[{13, 12, -8}], CuboidBox[{14, 12, -8}], 
     CuboidBox[{15, 12, -8}], CuboidBox[{1, 13, -8}], CuboidBox[{2, 13, -8}], 
     CuboidBox[{3, 13, -8}], CuboidBox[{4, 13, -8}], CuboidBox[{5, 13, -8}], 
     CuboidBox[{6, 13, -8}], CuboidBox[{7, 13, -8}], CuboidBox[{8, 13, -8}], 
     CuboidBox[{9, 13, -8}], CuboidBox[{10, 13, -8}], CuboidBox[{11, 13, -8}],
      CuboidBox[{12, 13, -8}], CuboidBox[{13, 13, -8}], 
     CuboidBox[{14, 13, -8}], CuboidBox[{15, 13, -8}], CuboidBox[{1, 14, -8}],
      CuboidBox[{2, 14, -8}], CuboidBox[{3, 14, -8}], CuboidBox[{4, 14, -8}], 
     CuboidBox[{5, 14, -8}], CuboidBox[{6, 14, -8}], CuboidBox[{7, 14, -8}], 
     CuboidBox[{8, 14, -8}], CuboidBox[{9, 14, -8}], CuboidBox[{10, 14, -8}], 
     CuboidBox[{11, 14, -8}], CuboidBox[{12, 14, -8}], 
     CuboidBox[{13, 14, -8}], CuboidBox[{14, 14, -8}], 
     CuboidBox[{15, 14, -8}], CuboidBox[{1, 15, -8}], CuboidBox[{2, 15, -8}], 
     CuboidBox[{3, 15, -8}], CuboidBox[{4, 15, -8}], CuboidBox[{5, 15, -8}], 
     CuboidBox[{6, 15, -8}], CuboidBox[{7, 15, -8}], CuboidBox[{8, 15, -8}], 
     CuboidBox[{9, 15, -8}], CuboidBox[{10, 15, -8}], CuboidBox[{11, 15, -8}],
      CuboidBox[{12, 15, -8}], CuboidBox[{13, 15, -8}], 
     CuboidBox[{14, 15, -8}], CuboidBox[{15, 15, -8}], CuboidBox[{1, 16, -8}],
      CuboidBox[{2, 16, -8}], CuboidBox[{3, 16, -8}], CuboidBox[{4, 16, -8}], 
     CuboidBox[{5, 16, -8}], CuboidBox[{6, 16, -8}], CuboidBox[{7, 16, -8}], 
     CuboidBox[{8, 16, -8}], CuboidBox[{9, 16, -8}], CuboidBox[{10, 16, -8}], 
     CuboidBox[{11, 16, -8}], CuboidBox[{12, 16, -8}], 
     CuboidBox[{13, 16, -8}], CuboidBox[{14, 16, -8}], 
     CuboidBox[{15, 16, -8}], CuboidBox[{1, 17, -8}], CuboidBox[{2, 17, -8}], 
     CuboidBox[{3, 17, -8}], CuboidBox[{4, 17, -8}], CuboidBox[{5, 17, -8}], 
     CuboidBox[{6, 17, -8}], CuboidBox[{7, 17, -8}], CuboidBox[{8, 17, -8}], 
     CuboidBox[{9, 17, -8}], CuboidBox[{10, 17, -8}], CuboidBox[{11, 17, -8}],
      CuboidBox[{12, 17, -8}], CuboidBox[{13, 17, -8}], 
     CuboidBox[{14, 17, -8}], CuboidBox[{15, 17, -8}], CuboidBox[{1, 18, -8}],
      CuboidBox[{2, 18, -8}], CuboidBox[{3, 18, -8}], CuboidBox[{4, 18, -8}], 
     CuboidBox[{5, 18, -8}], CuboidBox[{6, 18, -8}], CuboidBox[{7, 18, -8}], 
     CuboidBox[{8, 18, -8}], CuboidBox[{9, 18, -8}], CuboidBox[{10, 18, -8}], 
     CuboidBox[{11, 18, -8}], CuboidBox[{12, 18, -8}], 
     CuboidBox[{13, 18, -8}], CuboidBox[{14, 18, -8}], 
     CuboidBox[{15, 18, -8}], CuboidBox[{1, 19, -8}], CuboidBox[{2, 19, -8}], 
     CuboidBox[{3, 19, -8}], CuboidBox[{4, 19, -8}], CuboidBox[{5, 19, -8}], 
     CuboidBox[{6, 19, -8}], CuboidBox[{7, 19, -8}], CuboidBox[{8, 19, -8}], 
     CuboidBox[{9, 19, -8}], CuboidBox[{10, 19, -8}], CuboidBox[{11, 19, -8}],
      CuboidBox[{12, 19, -8}], CuboidBox[{13, 19, -8}], 
     CuboidBox[{14, 19, -8}], CuboidBox[{15, 19, -8}], CuboidBox[{1, 20, -8}],
      CuboidBox[{2, 20, -8}], CuboidBox[{3, 20, -8}], CuboidBox[{4, 20, -8}], 
     CuboidBox[{5, 20, -8}], CuboidBox[{6, 20, -8}], CuboidBox[{7, 20, -8}], 
     CuboidBox[{8, 20, -8}], CuboidBox[{9, 20, -8}], CuboidBox[{10, 20, -8}], 
     CuboidBox[{11, 20, -8}], CuboidBox[{12, 20, -8}], 
     CuboidBox[{13, 20, -8}], CuboidBox[{14, 20, -8}], 
     CuboidBox[{15, 20, -8}], CuboidBox[{1, 21, -8}], CuboidBox[{2, 21, -8}], 
     CuboidBox[{3, 21, -8}], CuboidBox[{4, 21, -8}], CuboidBox[{5, 21, -8}], 
     CuboidBox[{6, 21, -8}], CuboidBox[{7, 21, -8}], CuboidBox[{8, 21, -8}], 
     CuboidBox[{9, 21, -8}], CuboidBox[{10, 21, -8}], CuboidBox[{11, 21, -8}],
      CuboidBox[{12, 21, -8}], CuboidBox[{13, 21, -8}], 
     CuboidBox[{14, 21, -8}], CuboidBox[{15, 21, -8}], CuboidBox[{1, 5, -9}], 
     CuboidBox[{2, 5, -9}], CuboidBox[{3, 5, -9}], CuboidBox[{4, 5, -9}], 
     CuboidBox[{5, 5, -9}], CuboidBox[{6, 5, -9}], CuboidBox[{7, 5, -9}], 
     CuboidBox[{8, 5, -9}], CuboidBox[{9, 5, -9}], CuboidBox[{10, 5, -9}], 
     CuboidBox[{11, 5, -9}], CuboidBox[{12, 5, -9}], CuboidBox[{13, 5, -9}], 
     CuboidBox[{14, 5, -9}], CuboidBox[{15, 5, -9}], CuboidBox[{16, 5, -9}], 
     CuboidBox[{17, 5, -9}], CuboidBox[{1, 6, -9}], CuboidBox[{2, 6, -9}], 
     CuboidBox[{3, 6, -9}], CuboidBox[{4, 6, -9}], CuboidBox[{5, 6, -9}], 
     CuboidBox[{6, 6, -9}], CuboidBox[{7, 6, -9}], CuboidBox[{8, 6, -9}], 
     CuboidBox[{9, 6, -9}], CuboidBox[{10, 6, -9}], CuboidBox[{11, 6, -9}], 
     CuboidBox[{12, 6, -9}], CuboidBox[{13, 6, -9}], CuboidBox[{14, 6, -9}], 
     CuboidBox[{15, 6, -9}], CuboidBox[{16, 6, -9}], CuboidBox[{17, 6, -9}], 
     CuboidBox[{1, 7, -9}], CuboidBox[{2, 7, -9}], CuboidBox[{3, 7, -9}], 
     CuboidBox[{4, 7, -9}], CuboidBox[{5, 7, -9}], CuboidBox[{6, 7, -9}], 
     CuboidBox[{7, 7, -9}], CuboidBox[{8, 7, -9}], CuboidBox[{9, 7, -9}], 
     CuboidBox[{10, 7, -9}], CuboidBox[{11, 7, -9}], CuboidBox[{12, 7, -9}], 
     CuboidBox[{13, 7, -9}], CuboidBox[{14, 7, -9}], CuboidBox[{15, 7, -9}], 
     CuboidBox[{16, 7, -9}], CuboidBox[{17, 7, -9}], CuboidBox[{1, 8, -9}], 
     CuboidBox[{2, 8, -9}], CuboidBox[{3, 8, -9}], CuboidBox[{4, 8, -9}], 
     CuboidBox[{5, 8, -9}], CuboidBox[{6, 8, -9}], CuboidBox[{7, 8, -9}], 
     CuboidBox[{8, 8, -9}], CuboidBox[{9, 8, -9}], CuboidBox[{10, 8, -9}], 
     CuboidBox[{11, 8, -9}], CuboidBox[{12, 8, -9}], CuboidBox[{13, 8, -9}], 
     CuboidBox[{14, 8, -9}], CuboidBox[{15, 8, -9}], CuboidBox[{16, 8, -9}], 
     CuboidBox[{17, 8, -9}], CuboidBox[{1, 9, -9}], CuboidBox[{2, 9, -9}], 
     CuboidBox[{3, 9, -9}], CuboidBox[{4, 9, -9}], CuboidBox[{5, 9, -9}], 
     CuboidBox[{6, 9, -9}], CuboidBox[{7, 9, -9}], CuboidBox[{8, 9, -9}], 
     CuboidBox[{9, 9, -9}], CuboidBox[{10, 9, -9}], CuboidBox[{11, 9, -9}], 
     CuboidBox[{12, 9, -9}], CuboidBox[{13, 9, -9}], CuboidBox[{14, 9, -9}], 
     CuboidBox[{15, 9, -9}], CuboidBox[{16, 9, -9}], CuboidBox[{17, 9, -9}], 
     CuboidBox[{1, 10, -9}], CuboidBox[{2, 10, -9}], CuboidBox[{3, 10, -9}], 
     CuboidBox[{4, 10, -9}], CuboidBox[{5, 10, -9}], CuboidBox[{6, 10, -9}], 
     CuboidBox[{7, 10, -9}], CuboidBox[{8, 10, -9}], CuboidBox[{9, 10, -9}], 
     CuboidBox[{10, 10, -9}], CuboidBox[{11, 10, -9}], 
     CuboidBox[{12, 10, -9}], CuboidBox[{13, 10, -9}], 
     CuboidBox[{14, 10, -9}], CuboidBox[{15, 10, -9}], 
     CuboidBox[{16, 10, -9}], CuboidBox[{17, 10, -9}], CuboidBox[{1, 11, -9}],
      CuboidBox[{2, 11, -9}], CuboidBox[{3, 11, -9}], CuboidBox[{4, 11, -9}], 
     CuboidBox[{5, 11, -9}], CuboidBox[{6, 11, -9}], CuboidBox[{7, 11, -9}], 
     CuboidBox[{8, 11, -9}], CuboidBox[{9, 11, -9}], CuboidBox[{10, 11, -9}], 
     CuboidBox[{11, 11, -9}], CuboidBox[{12, 11, -9}], 
     CuboidBox[{13, 11, -9}], CuboidBox[{14, 11, -9}], 
     CuboidBox[{15, 11, -9}], CuboidBox[{16, 11, -9}], 
     CuboidBox[{17, 11, -9}], CuboidBox[{1, 12, -9}], CuboidBox[{2, 12, -9}], 
     CuboidBox[{3, 12, -9}], CuboidBox[{4, 12, -9}], CuboidBox[{5, 12, -9}], 
     CuboidBox[{6, 12, -9}], CuboidBox[{7, 12, -9}], CuboidBox[{8, 12, -9}], 
     CuboidBox[{9, 12, -9}], CuboidBox[{10, 12, -9}], CuboidBox[{11, 12, -9}],
      CuboidBox[{12, 12, -9}], CuboidBox[{13, 12, -9}], 
     CuboidBox[{14, 12, -9}], CuboidBox[{15, 12, -9}], 
     CuboidBox[{16, 12, -9}], CuboidBox[{17, 12, -9}], CuboidBox[{1, 13, -9}],
      CuboidBox[{2, 13, -9}], CuboidBox[{3, 13, -9}], CuboidBox[{4, 13, -9}], 
     CuboidBox[{5, 13, -9}], CuboidBox[{6, 13, -9}], CuboidBox[{7, 13, -9}], 
     CuboidBox[{8, 13, -9}], CuboidBox[{9, 13, -9}], CuboidBox[{10, 13, -9}], 
     CuboidBox[{11, 13, -9}], CuboidBox[{12, 13, -9}], 
     CuboidBox[{13, 13, -9}], CuboidBox[{14, 13, -9}], 
     CuboidBox[{15, 13, -9}], CuboidBox[{16, 13, -9}], 
     CuboidBox[{17, 13, -9}], CuboidBox[{1, 14, -9}], CuboidBox[{2, 14, -9}], 
     CuboidBox[{3, 14, -9}], CuboidBox[{4, 14, -9}], CuboidBox[{5, 14, -9}], 
     CuboidBox[{6, 14, -9}], CuboidBox[{7, 14, -9}], CuboidBox[{8, 14, -9}], 
     CuboidBox[{9, 14, -9}], CuboidBox[{10, 14, -9}], CuboidBox[{11, 14, -9}],
      CuboidBox[{12, 14, -9}], CuboidBox[{13, 14, -9}], 
     CuboidBox[{14, 14, -9}], CuboidBox[{15, 14, -9}], 
     CuboidBox[{16, 14, -9}], CuboidBox[{17, 14, -9}], CuboidBox[{1, 15, -9}],
      CuboidBox[{2, 15, -9}], CuboidBox[{3, 15, -9}], CuboidBox[{4, 15, -9}], 
     CuboidBox[{5, 15, -9}], CuboidBox[{6, 15, -9}], CuboidBox[{7, 15, -9}], 
     CuboidBox[{8, 15, -9}], CuboidBox[{9, 15, -9}], CuboidBox[{10, 15, -9}], 
     CuboidBox[{11, 15, -9}], CuboidBox[{12, 15, -9}], 
     CuboidBox[{13, 15, -9}], CuboidBox[{14, 15, -9}], 
     CuboidBox[{15, 15, -9}], CuboidBox[{16, 15, -9}], 
     CuboidBox[{17, 15, -9}], CuboidBox[{1, 16, -9}], CuboidBox[{2, 16, -9}], 
     CuboidBox[{3, 16, -9}], CuboidBox[{4, 16, -9}], CuboidBox[{5, 16, -9}], 
     CuboidBox[{6, 16, -9}], CuboidBox[{7, 16, -9}], CuboidBox[{8, 16, -9}], 
     CuboidBox[{9, 16, -9}], CuboidBox[{10, 16, -9}], CuboidBox[{11, 16, -9}],
      CuboidBox[{12, 16, -9}], CuboidBox[{13, 16, -9}], 
     CuboidBox[{14, 16, -9}], CuboidBox[{15, 16, -9}], 
     CuboidBox[{16, 16, -9}], CuboidBox[{17, 16, -9}], CuboidBox[{1, 17, -9}],
      CuboidBox[{2, 17, -9}], CuboidBox[{3, 17, -9}], CuboidBox[{4, 17, -9}], 
     CuboidBox[{5, 17, -9}], CuboidBox[{6, 17, -9}], CuboidBox[{7, 17, -9}], 
     CuboidBox[{8, 17, -9}], CuboidBox[{9, 17, -9}], CuboidBox[{10, 17, -9}], 
     CuboidBox[{11, 17, -9}], CuboidBox[{12, 17, -9}], 
     CuboidBox[{13, 17, -9}], CuboidBox[{14, 17, -9}], 
     CuboidBox[{15, 17, -9}], CuboidBox[{16, 17, -9}], 
     CuboidBox[{17, 17, -9}], CuboidBox[{1, 18, -9}], CuboidBox[{2, 18, -9}], 
     CuboidBox[{3, 18, -9}], CuboidBox[{4, 18, -9}], CuboidBox[{5, 18, -9}], 
     CuboidBox[{6, 18, -9}], CuboidBox[{7, 18, -9}], CuboidBox[{8, 18, -9}], 
     CuboidBox[{9, 18, -9}], CuboidBox[{10, 18, -9}], CuboidBox[{11, 18, -9}],
      CuboidBox[{12, 18, -9}], CuboidBox[{13, 18, -9}], 
     CuboidBox[{14, 18, -9}], CuboidBox[{15, 18, -9}], 
     CuboidBox[{16, 18, -9}], CuboidBox[{17, 18, -9}], CuboidBox[{1, 19, -9}],
      CuboidBox[{2, 19, -9}], CuboidBox[{3, 19, -9}], CuboidBox[{4, 19, -9}], 
     CuboidBox[{5, 19, -9}], CuboidBox[{6, 19, -9}], CuboidBox[{7, 19, -9}], 
     CuboidBox[{8, 19, -9}], CuboidBox[{9, 19, -9}], CuboidBox[{10, 19, -9}], 
     CuboidBox[{11, 19, -9}], CuboidBox[{12, 19, -9}], 
     CuboidBox[{13, 19, -9}], CuboidBox[{14, 19, -9}], 
     CuboidBox[{15, 19, -9}], CuboidBox[{16, 19, -9}], 
     CuboidBox[{17, 19, -9}], CuboidBox[{1, 20, -9}], CuboidBox[{2, 20, -9}], 
     CuboidBox[{3, 20, -9}], CuboidBox[{4, 20, -9}], CuboidBox[{5, 20, -9}], 
     CuboidBox[{6, 20, -9}], CuboidBox[{7, 20, -9}], CuboidBox[{8, 20, -9}], 
     CuboidBox[{9, 20, -9}], CuboidBox[{10, 20, -9}], CuboidBox[{11, 20, -9}],
      CuboidBox[{12, 20, -9}], CuboidBox[{13, 20, -9}], 
     CuboidBox[{14, 20, -9}], CuboidBox[{15, 20, -9}], 
     CuboidBox[{16, 20, -9}], CuboidBox[{17, 20, -9}], CuboidBox[{1, 21, -9}],
      CuboidBox[{2, 21, -9}], CuboidBox[{3, 21, -9}], CuboidBox[{4, 21, -9}], 
     CuboidBox[{5, 21, -9}], CuboidBox[{6, 21, -9}], CuboidBox[{7, 21, -9}], 
     CuboidBox[{8, 21, -9}], CuboidBox[{9, 21, -9}], CuboidBox[{10, 21, -9}], 
     CuboidBox[{11, 21, -9}], CuboidBox[{12, 21, -9}], 
     CuboidBox[{13, 21, -9}], CuboidBox[{14, 21, -9}], 
     CuboidBox[{15, 21, -9}], CuboidBox[{16, 21, -9}], 
     CuboidBox[{17, 21, -9}], CuboidBox[{1, 3, -10}], CuboidBox[{2, 3, -10}], 
     CuboidBox[{3, 3, -10}], CuboidBox[{4, 3, -10}], CuboidBox[{5, 3, -10}], 
     CuboidBox[{6, 3, -10}], CuboidBox[{7, 3, -10}], CuboidBox[{8, 3, -10}], 
     CuboidBox[{9, 3, -10}], CuboidBox[{10, 3, -10}], CuboidBox[{11, 3, -10}],
      CuboidBox[{12, 3, -10}], CuboidBox[{13, 3, -10}], 
     CuboidBox[{14, 3, -10}], CuboidBox[{15, 3, -10}], 
     CuboidBox[{16, 3, -10}], CuboidBox[{17, 3, -10}], 
     CuboidBox[{18, 3, -10}], CuboidBox[{19, 3, -10}], CuboidBox[{1, 4, -10}],
      CuboidBox[{2, 4, -10}], CuboidBox[{3, 4, -10}], CuboidBox[{4, 4, -10}], 
     CuboidBox[{5, 4, -10}], CuboidBox[{6, 4, -10}], CuboidBox[{7, 4, -10}], 
     CuboidBox[{8, 4, -10}], CuboidBox[{9, 4, -10}], CuboidBox[{10, 4, -10}], 
     CuboidBox[{11, 4, -10}], CuboidBox[{12, 4, -10}], 
     CuboidBox[{13, 4, -10}], CuboidBox[{14, 4, -10}], 
     CuboidBox[{15, 4, -10}], CuboidBox[{16, 4, -10}], 
     CuboidBox[{17, 4, -10}], CuboidBox[{18, 4, -10}], 
     CuboidBox[{19, 4, -10}], CuboidBox[{1, 5, -10}], CuboidBox[{2, 5, -10}], 
     CuboidBox[{3, 5, -10}], CuboidBox[{4, 5, -10}], CuboidBox[{5, 5, -10}], 
     CuboidBox[{6, 5, -10}], CuboidBox[{7, 5, -10}], CuboidBox[{8, 5, -10}], 
     CuboidBox[{9, 5, -10}], CuboidBox[{10, 5, -10}], CuboidBox[{11, 5, -10}],
      CuboidBox[{12, 5, -10}], CuboidBox[{13, 5, -10}], 
     CuboidBox[{14, 5, -10}], CuboidBox[{15, 5, -10}], 
     CuboidBox[{16, 5, -10}], CuboidBox[{17, 5, -10}], 
     CuboidBox[{18, 5, -10}], CuboidBox[{19, 5, -10}], CuboidBox[{1, 6, -10}],
      CuboidBox[{2, 6, -10}], CuboidBox[{3, 6, -10}], CuboidBox[{4, 6, -10}], 
     CuboidBox[{5, 6, -10}], CuboidBox[{6, 6, -10}], CuboidBox[{7, 6, -10}], 
     CuboidBox[{8, 6, -10}], CuboidBox[{9, 6, -10}], CuboidBox[{10, 6, -10}], 
     CuboidBox[{11, 6, -10}], CuboidBox[{12, 6, -10}], 
     CuboidBox[{13, 6, -10}], CuboidBox[{14, 6, -10}], 
     CuboidBox[{15, 6, -10}], CuboidBox[{16, 6, -10}], 
     CuboidBox[{17, 6, -10}], CuboidBox[{18, 6, -10}], 
     CuboidBox[{19, 6, -10}], CuboidBox[{1, 7, -10}], CuboidBox[{2, 7, -10}], 
     CuboidBox[{3, 7, -10}], CuboidBox[{4, 7, -10}], CuboidBox[{5, 7, -10}], 
     CuboidBox[{6, 7, -10}], CuboidBox[{7, 7, -10}], CuboidBox[{8, 7, -10}], 
     CuboidBox[{9, 7, -10}], CuboidBox[{10, 7, -10}], CuboidBox[{11, 7, -10}],
      CuboidBox[{12, 7, -10}], CuboidBox[{13, 7, -10}], 
     CuboidBox[{14, 7, -10}], CuboidBox[{15, 7, -10}], 
     CuboidBox[{16, 7, -10}], CuboidBox[{17, 7, -10}], 
     CuboidBox[{18, 7, -10}], CuboidBox[{19, 7, -10}], CuboidBox[{1, 8, -10}],
      CuboidBox[{2, 8, -10}], CuboidBox[{3, 8, -10}], CuboidBox[{4, 8, -10}], 
     CuboidBox[{5, 8, -10}], CuboidBox[{6, 8, -10}], CuboidBox[{7, 8, -10}], 
     CuboidBox[{8, 8, -10}], CuboidBox[{9, 8, -10}], CuboidBox[{10, 8, -10}], 
     CuboidBox[{11, 8, -10}], CuboidBox[{12, 8, -10}], 
     CuboidBox[{13, 8, -10}], CuboidBox[{14, 8, -10}], 
     CuboidBox[{15, 8, -10}], CuboidBox[{16, 8, -10}], 
     CuboidBox[{17, 8, -10}], CuboidBox[{18, 8, -10}], 
     CuboidBox[{19, 8, -10}], CuboidBox[{1, 9, -10}], CuboidBox[{2, 9, -10}], 
     CuboidBox[{3, 9, -10}], CuboidBox[{4, 9, -10}], CuboidBox[{5, 9, -10}], 
     CuboidBox[{6, 9, -10}], CuboidBox[{7, 9, -10}], CuboidBox[{8, 9, -10}], 
     CuboidBox[{9, 9, -10}], CuboidBox[{10, 9, -10}], CuboidBox[{11, 9, -10}],
      CuboidBox[{12, 9, -10}], CuboidBox[{13, 9, -10}], 
     CuboidBox[{14, 9, -10}], CuboidBox[{15, 9, -10}], 
     CuboidBox[{16, 9, -10}], CuboidBox[{17, 9, -10}], 
     CuboidBox[{18, 9, -10}], CuboidBox[{19, 9, -10}], 
     CuboidBox[{1, 10, -10}], CuboidBox[{2, 10, -10}], 
     CuboidBox[{3, 10, -10}], CuboidBox[{4, 10, -10}], 
     CuboidBox[{5, 10, -10}], CuboidBox[{6, 10, -10}], 
     CuboidBox[{7, 10, -10}], CuboidBox[{8, 10, -10}], 
     CuboidBox[{9, 10, -10}], CuboidBox[{10, 10, -10}], 
     CuboidBox[{11, 10, -10}], CuboidBox[{12, 10, -10}], 
     CuboidBox[{13, 10, -10}], CuboidBox[{14, 10, -10}], 
     CuboidBox[{15, 10, -10}], CuboidBox[{16, 10, -10}], 
     CuboidBox[{17, 10, -10}], CuboidBox[{18, 10, -10}], 
     CuboidBox[{19, 10, -10}], CuboidBox[{1, 11, -10}], 
     CuboidBox[{2, 11, -10}], CuboidBox[{3, 11, -10}], 
     CuboidBox[{4, 11, -10}], CuboidBox[{5, 11, -10}], 
     CuboidBox[{6, 11, -10}], CuboidBox[{7, 11, -10}], 
     CuboidBox[{8, 11, -10}], CuboidBox[{9, 11, -10}], 
     CuboidBox[{10, 11, -10}], CuboidBox[{11, 11, -10}], 
     CuboidBox[{12, 11, -10}], CuboidBox[{13, 11, -10}], 
     CuboidBox[{14, 11, -10}], CuboidBox[{15, 11, -10}], 
     CuboidBox[{16, 11, -10}], CuboidBox[{17, 11, -10}], 
     CuboidBox[{18, 11, -10}], CuboidBox[{19, 11, -10}], 
     CuboidBox[{1, 12, -10}], CuboidBox[{2, 12, -10}], 
     CuboidBox[{3, 12, -10}], CuboidBox[{4, 12, -10}], 
     CuboidBox[{5, 12, -10}], CuboidBox[{6, 12, -10}], 
     CuboidBox[{7, 12, -10}], CuboidBox[{8, 12, -10}], 
     CuboidBox[{9, 12, -10}], CuboidBox[{10, 12, -10}], 
     CuboidBox[{11, 12, -10}], CuboidBox[{12, 12, -10}], 
     CuboidBox[{13, 12, -10}], CuboidBox[{14, 12, -10}], 
     CuboidBox[{15, 12, -10}], CuboidBox[{16, 12, -10}], 
     CuboidBox[{17, 12, -10}], CuboidBox[{18, 12, -10}], 
     CuboidBox[{19, 12, -10}], CuboidBox[{1, 13, -10}], 
     CuboidBox[{2, 13, -10}], CuboidBox[{3, 13, -10}], 
     CuboidBox[{4, 13, -10}], CuboidBox[{5, 13, -10}], 
     CuboidBox[{6, 13, -10}], CuboidBox[{7, 13, -10}], 
     CuboidBox[{8, 13, -10}], CuboidBox[{9, 13, -10}], 
     CuboidBox[{10, 13, -10}], CuboidBox[{11, 13, -10}], 
     CuboidBox[{12, 13, -10}], CuboidBox[{13, 13, -10}], 
     CuboidBox[{14, 13, -10}], CuboidBox[{15, 13, -10}], 
     CuboidBox[{16, 13, -10}], CuboidBox[{17, 13, -10}], 
     CuboidBox[{18, 13, -10}], CuboidBox[{19, 13, -10}], 
     CuboidBox[{1, 14, -10}], CuboidBox[{2, 14, -10}], 
     CuboidBox[{3, 14, -10}], CuboidBox[{4, 14, -10}], 
     CuboidBox[{5, 14, -10}], CuboidBox[{6, 14, -10}], 
     CuboidBox[{7, 14, -10}], CuboidBox[{8, 14, -10}], 
     CuboidBox[{9, 14, -10}], CuboidBox[{10, 14, -10}], 
     CuboidBox[{11, 14, -10}], CuboidBox[{12, 14, -10}], 
     CuboidBox[{13, 14, -10}], CuboidBox[{14, 14, -10}], 
     CuboidBox[{15, 14, -10}], CuboidBox[{16, 14, -10}], 
     CuboidBox[{17, 14, -10}], CuboidBox[{18, 14, -10}], 
     CuboidBox[{19, 14, -10}], CuboidBox[{1, 15, -10}], 
     CuboidBox[{2, 15, -10}], CuboidBox[{3, 15, -10}], 
     CuboidBox[{4, 15, -10}], CuboidBox[{5, 15, -10}], 
     CuboidBox[{6, 15, -10}], CuboidBox[{7, 15, -10}], 
     CuboidBox[{8, 15, -10}], CuboidBox[{9, 15, -10}], 
     CuboidBox[{10, 15, -10}], CuboidBox[{11, 15, -10}], 
     CuboidBox[{12, 15, -10}], CuboidBox[{13, 15, -10}], 
     CuboidBox[{14, 15, -10}], CuboidBox[{15, 15, -10}], 
     CuboidBox[{16, 15, -10}], CuboidBox[{17, 15, -10}], 
     CuboidBox[{18, 15, -10}], CuboidBox[{19, 15, -10}], 
     CuboidBox[{1, 16, -10}], CuboidBox[{2, 16, -10}], 
     CuboidBox[{3, 16, -10}], CuboidBox[{4, 16, -10}], 
     CuboidBox[{5, 16, -10}], CuboidBox[{6, 16, -10}], 
     CuboidBox[{7, 16, -10}], CuboidBox[{8, 16, -10}], 
     CuboidBox[{9, 16, -10}], CuboidBox[{10, 16, -10}], 
     CuboidBox[{11, 16, -10}], CuboidBox[{12, 16, -10}], 
     CuboidBox[{13, 16, -10}], CuboidBox[{14, 16, -10}], 
     CuboidBox[{15, 16, -10}], CuboidBox[{16, 16, -10}], 
     CuboidBox[{17, 16, -10}], CuboidBox[{18, 16, -10}], 
     CuboidBox[{19, 16, -10}], CuboidBox[{1, 17, -10}], 
     CuboidBox[{2, 17, -10}], CuboidBox[{3, 17, -10}], 
     CuboidBox[{4, 17, -10}], CuboidBox[{5, 17, -10}], 
     CuboidBox[{6, 17, -10}], CuboidBox[{7, 17, -10}], 
     CuboidBox[{8, 17, -10}], CuboidBox[{9, 17, -10}], 
     CuboidBox[{10, 17, -10}], CuboidBox[{11, 17, -10}], 
     CuboidBox[{12, 17, -10}], CuboidBox[{13, 17, -10}], 
     CuboidBox[{14, 17, -10}], CuboidBox[{15, 17, -10}], 
     CuboidBox[{16, 17, -10}], CuboidBox[{17, 17, -10}], 
     CuboidBox[{18, 17, -10}], CuboidBox[{19, 17, -10}], 
     CuboidBox[{1, 18, -10}], CuboidBox[{2, 18, -10}], 
     CuboidBox[{3, 18, -10}], CuboidBox[{4, 18, -10}], 
     CuboidBox[{5, 18, -10}], CuboidBox[{6, 18, -10}], 
     CuboidBox[{7, 18, -10}], CuboidBox[{8, 18, -10}], 
     CuboidBox[{9, 18, -10}], CuboidBox[{10, 18, -10}], 
     CuboidBox[{11, 18, -10}], CuboidBox[{12, 18, -10}], 
     CuboidBox[{13, 18, -10}], CuboidBox[{14, 18, -10}], 
     CuboidBox[{15, 18, -10}], CuboidBox[{16, 18, -10}], 
     CuboidBox[{17, 18, -10}], CuboidBox[{18, 18, -10}], 
     CuboidBox[{19, 18, -10}], CuboidBox[{1, 19, -10}], 
     CuboidBox[{2, 19, -10}], CuboidBox[{3, 19, -10}], 
     CuboidBox[{4, 19, -10}], CuboidBox[{5, 19, -10}], 
     CuboidBox[{6, 19, -10}], CuboidBox[{7, 19, -10}], 
     CuboidBox[{8, 19, -10}], CuboidBox[{9, 19, -10}], 
     CuboidBox[{10, 19, -10}], CuboidBox[{11, 19, -10}], 
     CuboidBox[{12, 19, -10}], CuboidBox[{13, 19, -10}], 
     CuboidBox[{14, 19, -10}], CuboidBox[{15, 19, -10}], 
     CuboidBox[{16, 19, -10}], CuboidBox[{17, 19, -10}], 
     CuboidBox[{18, 19, -10}], CuboidBox[{19, 19, -10}], 
     CuboidBox[{1, 20, -10}], CuboidBox[{2, 20, -10}], 
     CuboidBox[{3, 20, -10}], CuboidBox[{4, 20, -10}], 
     CuboidBox[{5, 20, -10}], CuboidBox[{6, 20, -10}], 
     CuboidBox[{7, 20, -10}], CuboidBox[{8, 20, -10}], 
     CuboidBox[{9, 20, -10}], CuboidBox[{10, 20, -10}], 
     CuboidBox[{11, 20, -10}], CuboidBox[{12, 20, -10}], 
     CuboidBox[{13, 20, -10}], CuboidBox[{14, 20, -10}], 
     CuboidBox[{15, 20, -10}], CuboidBox[{16, 20, -10}], 
     CuboidBox[{17, 20, -10}], CuboidBox[{18, 20, -10}], 
     CuboidBox[{19, 20, -10}], CuboidBox[{1, 21, -10}], 
     CuboidBox[{2, 21, -10}], CuboidBox[{3, 21, -10}], 
     CuboidBox[{4, 21, -10}], CuboidBox[{5, 21, -10}], 
     CuboidBox[{6, 21, -10}], CuboidBox[{7, 21, -10}], 
     CuboidBox[{8, 21, -10}], CuboidBox[{9, 21, -10}], 
     CuboidBox[{10, 21, -10}], CuboidBox[{11, 21, -10}], 
     CuboidBox[{12, 21, -10}], CuboidBox[{13, 21, -10}], 
     CuboidBox[{14, 21, -10}], CuboidBox[{15, 21, -10}], 
     CuboidBox[{16, 21, -10}], CuboidBox[{17, 21, -10}], 
     CuboidBox[{18, 21, -10}], CuboidBox[{19, 21, -10}], 
     CuboidBox[{1, 1, -11}], CuboidBox[{2, 1, -11}], CuboidBox[{3, 1, -11}], 
     CuboidBox[{4, 1, -11}], CuboidBox[{5, 1, -11}], CuboidBox[{6, 1, -11}], 
     CuboidBox[{7, 1, -11}], CuboidBox[{8, 1, -11}], CuboidBox[{9, 1, -11}], 
     CuboidBox[{10, 1, -11}], CuboidBox[{11, 1, -11}], 
     CuboidBox[{12, 1, -11}], CuboidBox[{13, 1, -11}], 
     CuboidBox[{14, 1, -11}], CuboidBox[{15, 1, -11}], 
     CuboidBox[{16, 1, -11}], CuboidBox[{17, 1, -11}], 
     CuboidBox[{18, 1, -11}], CuboidBox[{19, 1, -11}], 
     CuboidBox[{20, 1, -11}], CuboidBox[{21, 1, -11}], CuboidBox[{1, 2, -11}],
      CuboidBox[{2, 2, -11}], CuboidBox[{3, 2, -11}], CuboidBox[{4, 2, -11}], 
     CuboidBox[{5, 2, -11}], CuboidBox[{6, 2, -11}], CuboidBox[{7, 2, -11}], 
     CuboidBox[{8, 2, -11}], CuboidBox[{9, 2, -11}], CuboidBox[{10, 2, -11}], 
     CuboidBox[{11, 2, -11}], CuboidBox[{12, 2, -11}], 
     CuboidBox[{13, 2, -11}], CuboidBox[{14, 2, -11}], 
     CuboidBox[{15, 2, -11}], CuboidBox[{16, 2, -11}], 
     CuboidBox[{17, 2, -11}], CuboidBox[{18, 2, -11}], 
     CuboidBox[{19, 2, -11}], CuboidBox[{20, 2, -11}], 
     CuboidBox[{21, 2, -11}], CuboidBox[{1, 3, -11}], CuboidBox[{2, 3, -11}], 
     CuboidBox[{3, 3, -11}], CuboidBox[{4, 3, -11}], CuboidBox[{5, 3, -11}], 
     CuboidBox[{6, 3, -11}], CuboidBox[{7, 3, -11}], CuboidBox[{8, 3, -11}], 
     CuboidBox[{9, 3, -11}], CuboidBox[{10, 3, -11}], CuboidBox[{11, 3, -11}],
      CuboidBox[{12, 3, -11}], CuboidBox[{13, 3, -11}], 
     CuboidBox[{14, 3, -11}], CuboidBox[{15, 3, -11}], 
     CuboidBox[{16, 3, -11}], CuboidBox[{17, 3, -11}], 
     CuboidBox[{18, 3, -11}], CuboidBox[{19, 3, -11}], 
     CuboidBox[{20, 3, -11}], CuboidBox[{21, 3, -11}], CuboidBox[{1, 4, -11}],
      CuboidBox[{2, 4, -11}], CuboidBox[{3, 4, -11}], CuboidBox[{4, 4, -11}], 
     CuboidBox[{5, 4, -11}], CuboidBox[{6, 4, -11}], CuboidBox[{7, 4, -11}], 
     CuboidBox[{8, 4, -11}], CuboidBox[{9, 4, -11}], CuboidBox[{10, 4, -11}], 
     CuboidBox[{11, 4, -11}], CuboidBox[{12, 4, -11}], 
     CuboidBox[{13, 4, -11}], CuboidBox[{14, 4, -11}], 
     CuboidBox[{15, 4, -11}], CuboidBox[{16, 4, -11}], 
     CuboidBox[{17, 4, -11}], CuboidBox[{18, 4, -11}], 
     CuboidBox[{19, 4, -11}], CuboidBox[{20, 4, -11}], 
     CuboidBox[{21, 4, -11}], CuboidBox[{1, 5, -11}], CuboidBox[{2, 5, -11}], 
     CuboidBox[{3, 5, -11}], CuboidBox[{4, 5, -11}], CuboidBox[{5, 5, -11}], 
     CuboidBox[{6, 5, -11}], CuboidBox[{7, 5, -11}], CuboidBox[{8, 5, -11}], 
     CuboidBox[{9, 5, -11}], CuboidBox[{10, 5, -11}], CuboidBox[{11, 5, -11}],
      CuboidBox[{12, 5, -11}], CuboidBox[{13, 5, -11}], 
     CuboidBox[{14, 5, -11}], CuboidBox[{15, 5, -11}], 
     CuboidBox[{16, 5, -11}], CuboidBox[{17, 5, -11}], 
     CuboidBox[{18, 5, -11}], CuboidBox[{19, 5, -11}], 
     CuboidBox[{20, 5, -11}], CuboidBox[{21, 5, -11}], CuboidBox[{1, 6, -11}],
      CuboidBox[{2, 6, -11}], CuboidBox[{3, 6, -11}], CuboidBox[{4, 6, -11}], 
     CuboidBox[{5, 6, -11}], CuboidBox[{6, 6, -11}], CuboidBox[{7, 6, -11}], 
     CuboidBox[{8, 6, -11}], CuboidBox[{9, 6, -11}], CuboidBox[{10, 6, -11}], 
     CuboidBox[{11, 6, -11}], CuboidBox[{12, 6, -11}], 
     CuboidBox[{13, 6, -11}], CuboidBox[{14, 6, -11}], 
     CuboidBox[{15, 6, -11}], CuboidBox[{16, 6, -11}], 
     CuboidBox[{17, 6, -11}], CuboidBox[{18, 6, -11}], 
     CuboidBox[{19, 6, -11}], CuboidBox[{20, 6, -11}], 
     CuboidBox[{21, 6, -11}], CuboidBox[{1, 7, -11}], CuboidBox[{2, 7, -11}], 
     CuboidBox[{3, 7, -11}], CuboidBox[{4, 7, -11}], CuboidBox[{5, 7, -11}], 
     CuboidBox[{6, 7, -11}], CuboidBox[{7, 7, -11}], CuboidBox[{8, 7, -11}], 
     CuboidBox[{9, 7, -11}], CuboidBox[{10, 7, -11}], CuboidBox[{11, 7, -11}],
      CuboidBox[{12, 7, -11}], CuboidBox[{13, 7, -11}], 
     CuboidBox[{14, 7, -11}], CuboidBox[{15, 7, -11}], 
     CuboidBox[{16, 7, -11}], CuboidBox[{17, 7, -11}], 
     CuboidBox[{18, 7, -11}], CuboidBox[{19, 7, -11}], 
     CuboidBox[{20, 7, -11}], CuboidBox[{21, 7, -11}], CuboidBox[{1, 8, -11}],
      CuboidBox[{2, 8, -11}], CuboidBox[{3, 8, -11}], CuboidBox[{4, 8, -11}], 
     CuboidBox[{5, 8, -11}], CuboidBox[{6, 8, -11}], CuboidBox[{7, 8, -11}], 
     CuboidBox[{8, 8, -11}], CuboidBox[{9, 8, -11}], CuboidBox[{10, 8, -11}], 
     CuboidBox[{11, 8, -11}], CuboidBox[{12, 8, -11}], 
     CuboidBox[{13, 8, -11}], CuboidBox[{14, 8, -11}], 
     CuboidBox[{15, 8, -11}], CuboidBox[{16, 8, -11}], 
     CuboidBox[{17, 8, -11}], CuboidBox[{18, 8, -11}], 
     CuboidBox[{19, 8, -11}], CuboidBox[{20, 8, -11}], 
     CuboidBox[{21, 8, -11}], CuboidBox[{1, 9, -11}], CuboidBox[{2, 9, -11}], 
     CuboidBox[{3, 9, -11}], CuboidBox[{4, 9, -11}], CuboidBox[{5, 9, -11}], 
     CuboidBox[{6, 9, -11}], CuboidBox[{7, 9, -11}], CuboidBox[{8, 9, -11}], 
     CuboidBox[{9, 9, -11}], CuboidBox[{10, 9, -11}], CuboidBox[{11, 9, -11}],
      CuboidBox[{12, 9, -11}], CuboidBox[{13, 9, -11}], 
     CuboidBox[{14, 9, -11}], CuboidBox[{15, 9, -11}], 
     CuboidBox[{16, 9, -11}], CuboidBox[{17, 9, -11}], 
     CuboidBox[{18, 9, -11}], CuboidBox[{19, 9, -11}], 
     CuboidBox[{20, 9, -11}], CuboidBox[{21, 9, -11}], 
     CuboidBox[{1, 10, -11}], CuboidBox[{2, 10, -11}], 
     CuboidBox[{3, 10, -11}], CuboidBox[{4, 10, -11}], 
     CuboidBox[{5, 10, -11}], CuboidBox[{6, 10, -11}], 
     CuboidBox[{7, 10, -11}], CuboidBox[{8, 10, -11}], 
     CuboidBox[{9, 10, -11}], CuboidBox[{10, 10, -11}], 
     CuboidBox[{11, 10, -11}], CuboidBox[{12, 10, -11}], 
     CuboidBox[{13, 10, -11}], CuboidBox[{14, 10, -11}], 
     CuboidBox[{15, 10, -11}], CuboidBox[{16, 10, -11}], 
     CuboidBox[{17, 10, -11}], CuboidBox[{18, 10, -11}], 
     CuboidBox[{19, 10, -11}], CuboidBox[{20, 10, -11}], 
     CuboidBox[{21, 10, -11}], CuboidBox[{1, 11, -11}], 
     CuboidBox[{2, 11, -11}], CuboidBox[{3, 11, -11}], 
     CuboidBox[{4, 11, -11}], CuboidBox[{5, 11, -11}], 
     CuboidBox[{6, 11, -11}], CuboidBox[{7, 11, -11}], 
     CuboidBox[{8, 11, -11}], CuboidBox[{9, 11, -11}], 
     CuboidBox[{10, 11, -11}], CuboidBox[{11, 11, -11}], 
     CuboidBox[{12, 11, -11}], CuboidBox[{13, 11, -11}], 
     CuboidBox[{14, 11, -11}], CuboidBox[{15, 11, -11}], 
     CuboidBox[{16, 11, -11}], CuboidBox[{17, 11, -11}], 
     CuboidBox[{18, 11, -11}], CuboidBox[{19, 11, -11}], 
     CuboidBox[{20, 11, -11}], CuboidBox[{21, 11, -11}], 
     CuboidBox[{1, 12, -11}], CuboidBox[{2, 12, -11}], 
     CuboidBox[{3, 12, -11}], CuboidBox[{4, 12, -11}], 
     CuboidBox[{5, 12, -11}], CuboidBox[{6, 12, -11}], 
     CuboidBox[{7, 12, -11}], CuboidBox[{8, 12, -11}], 
     CuboidBox[{9, 12, -11}], CuboidBox[{10, 12, -11}], 
     CuboidBox[{11, 12, -11}], CuboidBox[{12, 12, -11}], 
     CuboidBox[{13, 12, -11}], CuboidBox[{14, 12, -11}], 
     CuboidBox[{15, 12, -11}], CuboidBox[{16, 12, -11}], 
     CuboidBox[{17, 12, -11}], CuboidBox[{18, 12, -11}], 
     CuboidBox[{19, 12, -11}], CuboidBox[{20, 12, -11}], 
     CuboidBox[{21, 12, -11}], CuboidBox[{1, 13, -11}], 
     CuboidBox[{2, 13, -11}], CuboidBox[{3, 13, -11}], 
     CuboidBox[{4, 13, -11}], CuboidBox[{5, 13, -11}], 
     CuboidBox[{6, 13, -11}], CuboidBox[{7, 13, -11}], 
     CuboidBox[{8, 13, -11}], CuboidBox[{9, 13, -11}], 
     CuboidBox[{10, 13, -11}], CuboidBox[{11, 13, -11}], 
     CuboidBox[{12, 13, -11}], CuboidBox[{13, 13, -11}], 
     CuboidBox[{14, 13, -11}], CuboidBox[{15, 13, -11}], 
     CuboidBox[{16, 13, -11}], CuboidBox[{17, 13, -11}], 
     CuboidBox[{18, 13, -11}], CuboidBox[{19, 13, -11}], 
     CuboidBox[{20, 13, -11}], CuboidBox[{21, 13, -11}], 
     CuboidBox[{1, 14, -11}], CuboidBox[{2, 14, -11}], 
     CuboidBox[{3, 14, -11}], CuboidBox[{4, 14, -11}], 
     CuboidBox[{5, 14, -11}], CuboidBox[{6, 14, -11}], 
     CuboidBox[{7, 14, -11}], CuboidBox[{8, 14, -11}], 
     CuboidBox[{9, 14, -11}], CuboidBox[{10, 14, -11}], 
     CuboidBox[{11, 14, -11}], CuboidBox[{12, 14, -11}], 
     CuboidBox[{13, 14, -11}], CuboidBox[{14, 14, -11}], 
     CuboidBox[{15, 14, -11}], CuboidBox[{16, 14, -11}], 
     CuboidBox[{17, 14, -11}], CuboidBox[{18, 14, -11}], 
     CuboidBox[{19, 14, -11}], CuboidBox[{20, 14, -11}], 
     CuboidBox[{21, 14, -11}], CuboidBox[{1, 15, -11}], 
     CuboidBox[{2, 15, -11}], CuboidBox[{3, 15, -11}], 
     CuboidBox[{4, 15, -11}], CuboidBox[{5, 15, -11}], 
     CuboidBox[{6, 15, -11}], CuboidBox[{7, 15, -11}], 
     CuboidBox[{8, 15, -11}], CuboidBox[{9, 15, -11}], 
     CuboidBox[{10, 15, -11}], CuboidBox[{11, 15, -11}], 
     CuboidBox[{12, 15, -11}], CuboidBox[{13, 15, -11}], 
     CuboidBox[{14, 15, -11}], CuboidBox[{15, 15, -11}], 
     CuboidBox[{16, 15, -11}], CuboidBox[{17, 15, -11}], 
     CuboidBox[{18, 15, -11}], CuboidBox[{19, 15, -11}], 
     CuboidBox[{20, 15, -11}], CuboidBox[{21, 15, -11}], 
     CuboidBox[{1, 16, -11}], CuboidBox[{2, 16, -11}], 
     CuboidBox[{3, 16, -11}], CuboidBox[{4, 16, -11}], 
     CuboidBox[{5, 16, -11}], CuboidBox[{6, 16, -11}], 
     CuboidBox[{7, 16, -11}], CuboidBox[{8, 16, -11}], 
     CuboidBox[{9, 16, -11}], CuboidBox[{10, 16, -11}], 
     CuboidBox[{11, 16, -11}], CuboidBox[{12, 16, -11}], 
     CuboidBox[{13, 16, -11}], CuboidBox[{14, 16, -11}], 
     CuboidBox[{15, 16, -11}], CuboidBox[{16, 16, -11}], 
     CuboidBox[{17, 16, -11}], CuboidBox[{18, 16, -11}], 
     CuboidBox[{19, 16, -11}], CuboidBox[{20, 16, -11}], 
     CuboidBox[{21, 16, -11}], CuboidBox[{1, 17, -11}], 
     CuboidBox[{2, 17, -11}], CuboidBox[{3, 17, -11}], 
     CuboidBox[{4, 17, -11}], CuboidBox[{5, 17, -11}], 
     CuboidBox[{6, 17, -11}], CuboidBox[{7, 17, -11}], 
     CuboidBox[{8, 17, -11}], CuboidBox[{9, 17, -11}], 
     CuboidBox[{10, 17, -11}], CuboidBox[{11, 17, -11}], 
     CuboidBox[{12, 17, -11}], CuboidBox[{13, 17, -11}], 
     CuboidBox[{14, 17, -11}], CuboidBox[{15, 17, -11}], 
     CuboidBox[{16, 17, -11}], CuboidBox[{17, 17, -11}], 
     CuboidBox[{18, 17, -11}], CuboidBox[{19, 17, -11}], 
     CuboidBox[{20, 17, -11}], CuboidBox[{21, 17, -11}], 
     CuboidBox[{1, 18, -11}], CuboidBox[{2, 18, -11}], 
     CuboidBox[{3, 18, -11}], CuboidBox[{4, 18, -11}], 
     CuboidBox[{5, 18, -11}], CuboidBox[{6, 18, -11}], 
     CuboidBox[{7, 18, -11}], CuboidBox[{8, 18, -11}], 
     CuboidBox[{9, 18, -11}], CuboidBox[{10, 18, -11}], 
     CuboidBox[{11, 18, -11}], CuboidBox[{12, 18, -11}], 
     CuboidBox[{13, 18, -11}], CuboidBox[{14, 18, -11}], 
     CuboidBox[{15, 18, -11}], CuboidBox[{16, 18, -11}], 
     CuboidBox[{17, 18, -11}], CuboidBox[{18, 18, -11}], 
     CuboidBox[{19, 18, -11}], CuboidBox[{20, 18, -11}], 
     CuboidBox[{21, 18, -11}], CuboidBox[{1, 19, -11}], 
     CuboidBox[{2, 19, -11}], CuboidBox[{3, 19, -11}], 
     CuboidBox[{4, 19, -11}], CuboidBox[{5, 19, -11}], 
     CuboidBox[{6, 19, -11}], CuboidBox[{7, 19, -11}], 
     CuboidBox[{8, 19, -11}], CuboidBox[{9, 19, -11}], 
     CuboidBox[{10, 19, -11}], CuboidBox[{11, 19, -11}], 
     CuboidBox[{12, 19, -11}], CuboidBox[{13, 19, -11}], 
     CuboidBox[{14, 19, -11}], CuboidBox[{15, 19, -11}], 
     CuboidBox[{16, 19, -11}], CuboidBox[{17, 19, -11}], 
     CuboidBox[{18, 19, -11}], CuboidBox[{19, 19, -11}], 
     CuboidBox[{20, 19, -11}], CuboidBox[{21, 19, -11}], 
     CuboidBox[{1, 20, -11}], CuboidBox[{2, 20, -11}], 
     CuboidBox[{3, 20, -11}], CuboidBox[{4, 20, -11}], 
     CuboidBox[{5, 20, -11}], CuboidBox[{6, 20, -11}], 
     CuboidBox[{7, 20, -11}], CuboidBox[{8, 20, -11}], 
     CuboidBox[{9, 20, -11}], CuboidBox[{10, 20, -11}], 
     CuboidBox[{11, 20, -11}], CuboidBox[{12, 20, -11}], 
     CuboidBox[{13, 20, -11}], CuboidBox[{14, 20, -11}], 
     CuboidBox[{15, 20, -11}], CuboidBox[{16, 20, -11}], 
     CuboidBox[{17, 20, -11}], CuboidBox[{18, 20, -11}], 
     CuboidBox[{19, 20, -11}], CuboidBox[{20, 20, -11}], 
     CuboidBox[{21, 20, -11}], CuboidBox[{1, 21, -11}], 
     CuboidBox[{2, 21, -11}], CuboidBox[{3, 21, -11}], 
     CuboidBox[{4, 21, -11}], CuboidBox[{5, 21, -11}], 
     CuboidBox[{6, 21, -11}], CuboidBox[{7, 21, -11}], 
     CuboidBox[{8, 21, -11}], CuboidBox[{9, 21, -11}], 
     CuboidBox[{10, 21, -11}], CuboidBox[{11, 21, -11}], 
     CuboidBox[{12, 21, -11}], CuboidBox[{13, 21, -11}], 
     CuboidBox[{14, 21, -11}], CuboidBox[{15, 21, -11}], 
     CuboidBox[{16, 21, -11}], CuboidBox[{17, 21, -11}], 
     CuboidBox[{18, 21, -11}], CuboidBox[{19, 21, -11}], 
     CuboidBox[{20, 21, -11}], CuboidBox[{21, 21, -11}]}]}], "}"}]], "Output",\
ExpressionUUID->"b00744ef-0183-49e0-9917-847bc4c857dc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Sift", "Input"]], "Subsubsection",ExpressionUUID->"31bb08f1-b762-4167-8e91-f16944db30a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Sift"}]], "Input",ExpressionUUID->"005aa970-5a87-4dc6-b9a1-025a12ab8f2f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Sift\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"randomobject\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) repeatedly generates a \
random object until one is found that satisfies the condition \
\\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Sift\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"randomobject\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) objects satisfying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Sift", "[", 
                    RowBox[{
                    "ListTricks`Private`object_", ",", 
                    "ListTricks`Private`test_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`temp", "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{"!", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"ListTricks`Private`test", "[", 
                    RowBox[{
                    "ListTricks`Private`temp", "=", 
                    "ListTricks`Private`object"}], "]"}], "]"}]}], "]"}], ";",
                     "ListTricks`Private`temp"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Sift", "[", 
                    RowBox[{
                    "ListTricks`Private`object_", ",", 
                    "ListTricks`Private`test_", ",", 
                    RowBox[{
                    "ListTricks`Private`n_Integer", "?", "NonNegative"}], ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`results", "=", 
                    RowBox[{"{", "}"}]}], ",", "ListTricks`Private`temp"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Length", "[", "ListTricks`Private`results", "]"}], "<", 
                    "ListTricks`Private`n"}], ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`temp", "=", 
                    "ListTricks`Private`object"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    "ListTricks`Private`test", "[", "ListTricks`Private`temp",
                     "]"}], "]"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "Distinct", "]"}]}], "||", 
                    RowBox[{"UnsameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    "ListTricks`Private`results", ",", 
                    "ListTricks`Private`temp"}], "]"}]}]}], ")"}]}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    "ListTricks`Private`results", ",", 
                    "ListTricks`Private`temp"}], "]"}]}], "]"}]}]}], "]"}], 
                    ";", "ListTricks`Private`results"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Sift", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_.", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Sift] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]], 
                    OptionsPattern[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Distinct", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldFirst", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Sift\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Sift\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"randomobject\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) repeatedly generates a \
random object until one is found that satisfies the condition \
\\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Sift\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"randomobject\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) generates a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) objects satisfying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Sift\", \"[\", \
RowBox[List[StyleBox[\"randomobject\", \"TI\"], \",\", StyleBox[\"test\", \
\"TI\"]]], \"]\"]]\) repeatedly generates a random object until one is found \
that satisfies the condition \!\(\*StyleBox[\"test\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"Sift\", \"[\", RowBox[List[StyleBox[\"randomobject\", \
\"TI\"], \",\", StyleBox[\"test\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \
\"]\"]]\) generates a list of \!\(\*StyleBox[\"n\", \"TI\"]\) objects \
satisfying \!\(\*StyleBox[\"test\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Sift, {ListTricks`Sift[
         Pattern[ListTricks`Private`object, 
          Blank[]], 
         Pattern[ListTricks`Private`test, 
          Blank[]], 
         OptionsPattern[]] :> Module[{ListTricks`Private`temp}, While[
           Not[
            TrueQ[
             ListTricks`Private`test[
             ListTricks`Private`temp = ListTricks`Private`object]]]]; 
         ListTricks`Private`temp], ListTricks`Sift[
         Pattern[ListTricks`Private`object, 
          Blank[]], 
         Pattern[ListTricks`Private`test, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`n, 
           Blank[Integer]], NonNegative], 
         OptionsPattern[]] :> 
       Module[{ListTricks`Private`results = {}, ListTricks`Private`temp}, 
         While[Length[ListTricks`Private`results] < ListTricks`Private`n, 
           ListTricks`Private`temp = ListTricks`Private`object; If[
             And[
              TrueQ[
               ListTricks`Private`test[ListTricks`Private`temp]], 
              Or[
               Not[
                OptionValue[ListTricks`Distinct]], 
               Apply[UnsameQ, 
                Append[
                ListTricks`Private`results, ListTricks`Private`temp]]]], 
             AppendTo[ListTricks`Private`results, ListTricks`Private`temp]]]; 
         ListTricks`Private`results]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Sift, {
      SyntaxInformation[ListTricks`Sift] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]], 
           OptionsPattern[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {ListTricks`Distinct -> False}, 
    "Attributes" -> {HoldFirst, Protected}, "FullName" -> "ListTricks`Sift"], 
   False]]], "Output",ExpressionUUID->"18809bcb-9555-43f4-8dce-72e2bb629eec"]
}, Open  ]],

Cell["Produce random primes that are congruent to 2 mod 3:", "Text",ExpressionUUID->"17b4e9fa-69db-480d-839e-a9227b14764a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sift", "[", 
  RowBox[{
   RowBox[{"RandomPrime", "[", "100", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "2"}], "&"}], ",", "20"}], 
  "]"}]], "Input",ExpressionUUID->"71967b34-767b-4f56-9f25-2422f893c463"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "17", ",", "41", ",", "17", ",", "71", ",", "47", ",", "59", ",", "47", ",",
    "71", ",", "89", ",", "89", ",", "59", ",", "11", ",", "59", ",", "59", 
   ",", "29", ",", "5", ",", "23", ",", "41", ",", "71", ",", "5"}], 
  "}"}]], "Output",ExpressionUUID->"04ce2047-4e28-44d8-979f-557c8a10726c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Distinct"}]], "Input",ExpressionUUID->"1a4acc1c-ccc3-4f23-9292-90a256ebf161"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Distinct is an option for Sift that specifies \
whether to check for duplicates.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Distinct\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Distinct is an option for Sift that specifies \
whether to check for duplicates.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Distinct is an option for Sift that specifies whether to check for \
duplicates.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "ListTricks`Distinct"], 
   False]]], "Output",ExpressionUUID->"5b4e98fb-7a3c-4ca6-824c-19e09c21910a"]
}, Open  ]],

Cell["Ensure that they are distinct:", "Text",ExpressionUUID->"273457eb-0a5a-4764-84cc-448934ef2127"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sift", "[", 
  RowBox[{
   RowBox[{"RandomPrime", "[", "100", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "2"}], "&"}], ",", "10", 
   ",", 
   RowBox[{"Distinct", "\[Rule]", "True"}]}], "]"}]], "Input",ExpressionUUID->\
"ce329e29-8a9d-409e-b295-da991dd5b274"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "23", ",", "2", ",", "71", ",", "89", ",", "59", ",", "5", ",", 
   "83", ",", "41", ",", "29"}], "}"}]], "Output",ExpressionUUID->"63bdee5a-\
319a-4cbf-9b9e-00b5c4574490"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["SuccessiveMaxima", "Input"],
 StyleBox[" and ", "Text",
  FontWeight->"Plain"],
 StyleBox["SuccessiveMinima", "Input"]
}], "Subsubsection",ExpressionUUID->"75d371a4-cd54-43bb-8062-8daeef57ceb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SuccessiveMaxima"}]], "Input",ExpressionUUID->"fde54de8-c458-417e-85e7-f2033bb0661a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the list \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\), where \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the successive maxima \
of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the positions at which \
they occur.\\n\\!\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive maxima \
under the fitness function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\).\\n\\!\
\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive maxima under the fitness \
function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) relative to the ordering \
function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SuccessiveMaxima", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", 
                    RowBox[{"___", "?", "NumericQ"}], "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`y_", "/;", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`y", ">", "ListTricks`Private`best"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`best", "=", "ListTricks`Private`y"}], 
                    ";", "True"}], ",", "False"}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
                    "1"}], "]"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"SuccessiveMaxima", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`f_", ",", 
                    RowBox[{"ListTricks`Private`p_", ":", "Greater"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`y_", "/;", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`p", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`f", "[", "ListTricks`Private`y", 
                    "]"}], ",", "ListTricks`Private`best"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{
                    "ListTricks`Private`f", "[", "ListTricks`Private`y", 
                    "]"}]}], ";", "True"}], ",", "False"}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
                    "1"}], "]"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SuccessiveMaxima", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`SuccessiveMaxima] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`SuccessiveMaxima\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the list \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\), where \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the successive maxima \
of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the positions at which \
they occur.\\n\\!\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive maxima \
under the fitness function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\).\\n\\!\
\\(\\*RowBox[List[\\\"SuccessiveMaxima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive maxima under the fitness \
function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) relative to the ordering \
function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"SuccessiveMaxima\", \"[\", StyleBox[\"list\", \
\"TI\"], \"]\"]]\) gives the list \!\(\*RowBox[List[\"{\", \
RowBox[List[RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]]]], \
\"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\), where \
\!\(\*RowBox[List[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]]\) are the successive \
maxima of \!\(\*StyleBox[\"list\", \"TI\"]\) and \
\!\(\*RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]]\) are the positions at \
which they occur.\n\!\(\*RowBox[List[\"SuccessiveMaxima\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"]]], \"]\
\"]]\) finds the successive maxima under the fitness function \!\(\*StyleBox[\
\"f\", \"TI\"]\).\n\!\(\*RowBox[List[\"SuccessiveMaxima\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"p\", \"TI\"]]], \"]\"]]\) finds the successive maxima under \
the fitness function \!\(\*StyleBox[\"f\", \"TI\"]\) relative to the ordering \
function \!\(\*StyleBox[\"p\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`SuccessiveMaxima, {ListTricks`SuccessiveMaxima[
         Pattern[ListTricks`Private`list, 
          Blank[][
           PatternTest[
            BlankNullSequence[], NumericQ]]]] :> 
       Module[{ListTricks`Private`best = First[ListTricks`Private`list]}, 
         (Transpose[{#, 
           Part[ListTricks`Private`list, #]}]& )[
          Prepend[
           Map[First, 
            Position[ListTricks`Private`list, 
             Condition[
              Pattern[ListTricks`Private`y, 
               Blank[]], 
              If[
              ListTricks`Private`y > ListTricks`Private`best, 
               ListTricks`Private`best = ListTricks`Private`y; True, 
               False]], {1}, Heads -> False]], 1]]], 
       ListTricks`SuccessiveMaxima[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`p, 
           Blank[]], Greater]] :> 
       Module[{ListTricks`Private`best = ListTricks`Private`f[
            First[ListTricks`Private`list]]}, 
         (Transpose[{#, 
           Part[ListTricks`Private`list, #]}]& )[
          Prepend[
           Map[First, 
            Position[ListTricks`Private`list, 
             Condition[
              Pattern[ListTricks`Private`y, 
               Blank[]], 
              If[
               ListTricks`Private`p[
                ListTricks`Private`f[ListTricks`Private`y], 
                ListTricks`Private`best], 
               ListTricks`Private`best = 
                ListTricks`Private`f[ListTricks`Private`y]; True, False]], {
             1}, Heads -> False]], 1]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`SuccessiveMaxima, {
      SyntaxInformation[ListTricks`SuccessiveMaxima] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`SuccessiveMaxima"], False]]], "Output",ExpressionUUID->\
"cf97aedb-c1e4-4891-a2fe-c28863549964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  StyleBox["SuccessiveMinima", "Input"]}]], "Input",ExpressionUUID->"e53cf264-\
b650-423a-a4cf-51f1faf54e39"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the list \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\), where \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the successive minima \
of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the positions at which \
they occur.\\n\\!\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive minima \
under the fitness function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\).\\n\\!\
\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive minima under the fitness \
function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) relative to the ordering \
function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SuccessiveMinima", "[", 
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", 
                    RowBox[{"___", "?", "NumericQ"}], "]"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`y_", "/;", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`y", "<", "ListTricks`Private`best"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`best", "=", "ListTricks`Private`y"}], 
                    ";", "True"}], ",", "False"}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
                    "1"}], "]"}], "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"SuccessiveMinima", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`f_", ",", 
                    RowBox[{"ListTricks`Private`p_", ":", "Less"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{"ListTricks`Private`f", "[", 
                    RowBox[{"First", "[", "ListTricks`Private`list", "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{
                    "ListTricks`Private`list", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"First", "/@", 
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`y_", "/;", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`p", "[", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`f", "[", "ListTricks`Private`y", 
                    "]"}], ",", "ListTricks`Private`best"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`best", "=", 
                    RowBox[{
                    "ListTricks`Private`f", "[", "ListTricks`Private`y", 
                    "]"}]}], ";", "True"}], ",", "False"}], "]"}]}], ",", 
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ",", 
                    "1"}], "]"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "SyntaxInformation", "[", "SuccessiveMinima", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`SuccessiveMinima] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`SuccessiveMinima\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the list \
\\!\\(\\*RowBox[List[\\\"{\\\", RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", RowBox[List[\\\"{\
\\\", RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]]], \\\"}\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]], \\\"}\\\"]]\\), where \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the successive minima \
of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*RowBox[List[SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"]]]\\) are the positions at which \
they occur.\\n\\!\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive minima \
under the fitness function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\).\\n\\!\
\\(\\*RowBox[List[\\\"SuccessiveMinima\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) finds the successive minima under the fitness \
function \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) relative to the ordering \
function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"SuccessiveMinima\", \"[\", StyleBox[\"list\", \
\"TI\"], \"]\"]]\) gives the list \!\(\*RowBox[List[\"{\", \
RowBox[List[RowBox[List[\"{\", RowBox[List[SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]]], \"}\"]], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]]]], \
\"}\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"}\"]]\), where \
\!\(\*RowBox[List[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]]\) are the successive \
minima of \!\(\*StyleBox[\"list\", \"TI\"]\) and \
\!\(\*RowBox[List[SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\[Ellipsis]\", \"TR\"]]]\) are the positions at \
which they occur.\n\!\(\*RowBox[List[\"SuccessiveMinima\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"]]], \"]\
\"]]\) finds the successive minima under the fitness function \!\(\*StyleBox[\
\"f\", \"TI\"]\).\n\!\(\*RowBox[List[\"SuccessiveMinima\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"p\", \"TI\"]]], \"]\"]]\) finds the successive minima under \
the fitness function \!\(\*StyleBox[\"f\", \"TI\"]\) relative to the ordering \
function \!\(\*StyleBox[\"p\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`SuccessiveMinima, {ListTricks`SuccessiveMinima[
         Pattern[ListTricks`Private`list, 
          Blank[][
           PatternTest[
            BlankNullSequence[], NumericQ]]]] :> 
       Module[{ListTricks`Private`best = First[ListTricks`Private`list]}, 
         (Transpose[{#, 
           Part[ListTricks`Private`list, #]}]& )[
          Prepend[
           Map[First, 
            Position[ListTricks`Private`list, 
             Condition[
              Pattern[ListTricks`Private`y, 
               Blank[]], 
              If[
              ListTricks`Private`y < ListTricks`Private`best, 
               ListTricks`Private`best = ListTricks`Private`y; True, 
               False]], {1}, Heads -> False]], 1]]], 
       ListTricks`SuccessiveMinima[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`f, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`p, 
           Blank[]], Less]] :> 
       Module[{ListTricks`Private`best = ListTricks`Private`f[
            First[ListTricks`Private`list]]}, 
         (Transpose[{#, 
           Part[ListTricks`Private`list, #]}]& )[
          Prepend[
           Map[First, 
            Position[ListTricks`Private`list, 
             Condition[
              Pattern[ListTricks`Private`y, 
               Blank[]], 
              If[
               ListTricks`Private`p[
                ListTricks`Private`f[ListTricks`Private`y], 
                ListTricks`Private`best], 
               ListTricks`Private`best = 
                ListTricks`Private`f[ListTricks`Private`y]; True, False]], {
             1}, Heads -> False]], 1]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`SuccessiveMinima, {
      SyntaxInformation[ListTricks`SuccessiveMinima] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`SuccessiveMinima"], False]]], "Output",ExpressionUUID->\
"adba9b83-375c-4033-96d8-737270074a40"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Range", "[", "10000", "]"}], "]"}]}], ";"}]], "Input",ExpressionU\
UID->"8413e19f-8bd3-4859-8242-6b466ff999af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SuccessiveMaxima", "[", "data", "]"}]], "Input",ExpressionUUID->"6c1c2421-41dd-4176-9b57-af06f9b4a580"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "6311"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9263"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "9329"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9902"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"248", ",", "9947"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"357", ",", "9997"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6322", ",", "10000"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"01e4d4e1-28c8-444e-b10b-9f72054cc729"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SuccessiveMinima", "[", "data", "]"}]], "Input",ExpressionUUID->"4fef4dc8-f9d4-4e4b-8d83-9a623854189b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "6311"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1188"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1002"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "821"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "315"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "279"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", "75"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"318", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"387", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"664", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2222", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4257", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5779", ",", "1"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"43fb7031-9040-4be8-a37c-9b5338d1645f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"%", ",", "%%"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",ExpressionUUID->\
"04a5925a-21cd-4c1c-b1ef-502b4c3b2f24"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 8.75004942158424}, {3., 8.731174900938061}, {4., 
      7.703007682479236}, {5., 7.080026499922591}, {13., 6.90975328164481}, {
      17., 6.710523109452428}, {27., 5.752572638825633}, {68., 
      5.631211781821365}, {71., 4.31748811353631}, {72., 
      3.4339872044851463`}, {318., 3.1354942159291497`}, {387., 
      2.9444389791664403`}, {664., 2.4849066497880004`}, {2222., 
      1.791759469228055}, {4257., 1.3862943611198906`}, {5779., 0.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 8.75004942158424}, {2., 9.133783249254028}, {12., 
      9.140883106960962}, {14., 9.200492035921368}, {248., 
      9.205026277152413}, {357., 9.210040326967182}, {6322., 
      9.210340371976184}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.6684924463531102},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1655.5}, {-0.5116855762208992, 9.210340371976184}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.596634733096073`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.819778284410283`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.002099841204238`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.156250521031495`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.289781913656018`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.407564949312402`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",ExpressionUUID->"fc589f6d-\
a135-432e-97af-eef5f2da4c6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "data", "]"}]], "Input",ExpressionUUID->"fa9ec544-5df6-4e4b-b1f8-fab3a726998b"],

Cell["Find tuples with successively maximal sums.", "Text",ExpressionUUID->"06758135-a32f-4af8-b86d-5e3ca4ab0fef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SuccessiveMaxima", "[", 
  RowBox[{
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "3"}], "]"}], ",", "4"}], "]"}], ",", "Total"}], 
  "]"}]], "Input",ExpressionUUID->"474338e4-0be3-418d-a484-040722ebfd7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"170fd167-cc59-43ca-90b5-66e4d7281752"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Swap", "Input"],
 StyleBox[" (a special case of ", "Text",
  FontWeight->"Plain"],
 StyleBox["SubsetMap", "Input"],
 StyleBox[")", "Text",
  FontWeight->"Plain"]
}], "Subsubsection",ExpressionUUID->"ced2f336-ecb7-4d6b-b2b4-75529d437ddd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Swap"}]], "Input",ExpressionUUID->"c19e34db-e392-4028-bf03-d09fa4cad0ef"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Swap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"m\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) \
exchanges the elements at positions \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Swap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) simultaneously moves the \
element in position \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), the element in position \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"3\\\", \\\"TR\\\"]]\\), \[Ellipsis], and the element in position \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\
\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"Swap\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]]\\) applies the permutations \
\\!\\(\\*SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in succession.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Swap", "[", "ListTricks`Private`expr_", "]"}], ":=",
                     "ListTricks`Private`expr"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Swap", "[", 
                    RowBox[{
                    "ListTricks`Private`expr_", ",", 
                    "ListTricks`Private`cycles__List"}], "]"}], "/;", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "ListTricks`Private`cycles", "}"}], "]"}], 
                    ",", 
                    RowBox[{"{", "___Integer", "}"}]}], "]"}]}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`copy", "=", 
                    "ListTricks`Private`expr"}], ",", 
                    RowBox[{"ListTricks`Private`cycle", "=", 
                    RowBox[{"First", "[", 
                    RowBox[{"{", "ListTricks`Private`cycles", "}"}], "]"}]}], 
                    ",", 
                    RowBox[{"ListTricks`Private`valid", "=", "True"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{"Apply", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`copy", "\[LeftDoubleBracket]", 
                    RowBox[{"Sequence", "@@", "#1"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"ListTricks`Private`expr", "\[LeftDoubleBracket]", 
                    RowBox[{"Sequence", "@@", "#2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}], ",", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "RotateLeft", "[", "ListTricks`Private`cycle", "]"}], ",",
                     "ListTricks`Private`cycle"}], "}"}], "]"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    RowBox[{"ListTricks`Private`valid", "=", "False"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Part", "::", "partw"}], "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"Set", "::", "partw"}], "MessageName"]}], "}"}]}],
                     "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Part", "::", "partw"}], "MessageName"], ",", 
                    StyleBox[
                    RowBox[{"Set", "::", "partw"}], "MessageName"]}], "}"}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Swap", "[", 
                    RowBox[{"ListTricks`Private`copy", ",", "##2"}], "]"}], 
                    "&"}], ")"}], "[", "ListTricks`Private`cycles", "]"}], "/;", 
                    RowBox[{"ListTricks`Private`valid", "||", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"Swap", "::", "partw"}], "MessageName"], ",", 
                    "ListTricks`Private`expr"}], "]"}]}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Swap", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", "__", "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Swap] = {"ArgumentsPattern" -> {
                    BlankSequence[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Swap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Swap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[StyleBox[\\\"m\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) \
exchanges the elements at positions \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Swap\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[List[\\\"{\\\", RowBox[List[SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \
\\\"TI\\\"]]]], \\\"}\\\"]]]], \\\"]\\\"]]\\) simultaneously moves the \
element in position \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), the element in position \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"3\\\", \\\"TR\\\"]]\\), \[Ellipsis], and the element in position \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \\\
\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[List[\\\"Swap\\\", \
\\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\\\\[Ellipsis]\\\", \
\\\"TR\\\"]]], \\\"]\\\"]]\\) applies the permutations \
\\!\\(\\*SubscriptBox[StyleBox[\\\"cycle\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in succession.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Swap\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", RowBox[List[\"{\", RowBox[List[StyleBox[\"m\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]]], \"}\"]]]], \"]\"]]\) exchanges the elements \
at positions \!\(\*StyleBox[\"m\", \"TI\"]\) and \!\(\*StyleBox[\"n\", \
\"TI\"]\) of \!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Swap\", \
\"[\", RowBox[List[StyleBox[\"list\", \"TI\"], \",\", RowBox[List[\"{\", \
RowBox[List[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"k\", \"TI\"]]]], \"}\"]]]], \"]\"]]\) simultaneously \
moves the element in position \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) to \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\), the element in position \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"3\", \"TR\"]]\), \
\[Ellipsis], and the element in position \!\(\*SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"k\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\).\n\!\(\*RowBox[List[\"Swap\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"cycle\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"cycle\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\\[Ellipsis]\", \"TR\"]]], \"]\"]]\) applies the permutations \!\(\
\*SubscriptBox[StyleBox[\"cycle\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) in \
succession.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Swap, {ListTricks`Swap[
         Pattern[ListTricks`Private`expr, 
          Blank[]]] :> ListTricks`Private`expr, Condition[
         ListTricks`Swap[
          Pattern[ListTricks`Private`expr, 
           Blank[]], 
          Pattern[ListTricks`Private`cycles, 
           BlankSequence[List]]], 
         MatchQ[
          Flatten[{ListTricks`Private`cycles}], {
           BlankNullSequence[Integer]}]] :> 
       Module[{ListTricks`Private`copy = ListTricks`Private`expr, 
          ListTricks`Private`cycle = First[{ListTricks`Private`cycles}], 
          ListTricks`Private`valid = True}, Quiet[
           Check[
            Apply[(Part[ListTricks`Private`copy, 
               Apply[Sequence, #]] = Part[ListTricks`Private`expr, 
               Apply[Sequence, #2]])& , 
             Transpose[{
               RotateLeft[ListTricks`Private`cycle], 
               ListTricks`Private`cycle}], {1}], ListTricks`Private`valid = 
            False, {
             MessageName[Part, "partw"], 
             MessageName[Set, "partw"]}], {
            MessageName[Part, "partw"], 
            MessageName[Set, "partw"]}]; Condition[
           (ListTricks`Swap[ListTricks`Private`copy, 
            SlotSequence[2]]& )[ListTricks`Private`cycles], 
           Or[ListTricks`Private`valid, 
            Message[
             MessageName[ListTricks`Swap, "partw"], 
             ListTricks`Private`expr]]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Swap, {
      SyntaxInformation[ListTricks`Swap] -> {"ArgumentsPattern" -> {
           BlankSequence[]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Swap"], False]]], "Output",ExpressionUUID->"1b4cfbfa-b9cc-\
400a-b819-fbf4d54d59b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"5e6a2db0-b7e4-40a8-9a7f-a958434b6beb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "c", ",", "b", ",", "d"}], "}"}]], "Output",ExpressionUUID\
->"48e7040b-61ae-4bd9-a8e2-fe01b6c1a45d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"076c5dd8-10dd-44ca-af6d-57cc427ab53d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "e", ",", "b", ",", "d", ",", "c"}], "}"}]], "Output",Expr\
essionUUID->"d6d8acb2-f2d1-4a7b-a7c6-fe5cb472b1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"d7cee0af-589a-4d48-8edc-dfc7a5ddf153"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "d", ",", "b", ",", "e", ",", "c"}], "}"}]], "Output",Expr\
essionUUID->"163347b6-d200-4bca-846e-f248016e54b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "1", ",", "3", ",", "1", ",", "4", ",", "1", ",", "5",
      ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID->"9a64ff49-ed1e-\
4287-8eb9-24bdb89a681b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",Expr\
essionUUID->"b6e837f8-77ca-4673-801f-fd80d782372d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"d157b3eb-a36e-4a9a-8055-a7d893d2708b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}]], "Output",Expr\
essionUUID->"c93fa40a-e8e6-457a-b24f-73d7bfbafaea"]
}, Open  ]],

Cell["Swap entries in a nested list:", "Text",ExpressionUUID->"63d0100c-7583-443d-a2d2-a1ff94197a6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Swap", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"446433be-8677-4d03-8451-23494918e4bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "a"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"6efa6ec6-535a-4e0e-b705-f3f174c895c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["TakeAfter", "Input"],
 StyleBox[", ", "Text",
  FontWeight->"Plain"],
 StyleBox["TakeBefore", "Input"],
 StyleBox[", ", "Text",
  FontWeight->"Plain"],
 StyleBox["DropAfter", "Input"],
 StyleBox[", and ", "Text",
  FontWeight->"Plain"],
 StyleBox["DropBefore", "Input"]
}], "Subsubsection",ExpressionUUID->"98f15b7a-e0f0-4282-885a-ea5b4466cfc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TakeAfter"}]], "Input",ExpressionUUID->"218cd3c4-ebae-41ce-a7d9-60a07ce5f2a3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"TakeAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"TakeAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"TakeAfter", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "ListTricks`Private`NonZero"}], 
                    ":", "1"}]}], "]"}], ":=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`pattern", ",", "All", ",", 
                    "ListTricks`Private`n"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "TakeAfter", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`TakeAfter] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`TakeAfter\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"TakeAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"TakeAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"TakeAfter\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) gives the elements \
of \!\(\*StyleBox[\"list\", \"TI\"]\) appearing after the first element \
matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"TakeAfter\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) gives the elements of \!\(\*StyleBox[\"list\", \"TI\"]\) \
appearing after the \!\(\*StyleBox[\"n\", \"TI\"]\)th element matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\). Negative \!\(\*StyleBox[\"n\", \"TI\"]\
\) counts from the end of the list.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`TakeAfter, {ListTricks`TakeAfter[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], ListTricks`Private`NonZero]], 1]] :> 
       Drop[ListTricks`Private`list, 
         ListTricks`Occurrence[
         ListTricks`Private`list, ListTricks`Private`pattern, All, 
          ListTricks`Private`n]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`TakeAfter, {
      SyntaxInformation[ListTricks`TakeAfter] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`TakeAfter"], False]]], "Output",ExpressionUUID->"01ef6e90-\
ccbb-4f66-9ef1-b2075a1109c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeAfter", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"6fd3b567-1487-4138-a8cc-9bd1d08fd340"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   SqrtBox["5"]}], "}"}]], "Output",ExpressionUUID->"a34593ee-d32c-498d-bc39-\
d09e4f3d7f37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeAfter", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"0eb77952-fe8e-411b-\
a933-b2695b058798"],

Cell[BoxData[
 RowBox[{"{", 
  SqrtBox["5"], "}"}]], "Output",ExpressionUUID->"d0fd7ebc-d9f1-4866-ae64-7145bb5d2a62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TakeBefore"}]], "Input",ExpressionUUID->"388bfad4-a37f-40ee-b35e-57ba1d30da2f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"TakeBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"TakeBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"TakeBefore", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "ListTricks`Private`NonZero"}], 
                    ":", "1"}]}], "]"}], ":=", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`pattern", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "-", "1"}], "&"}], ")"}]}], ",", "All", ",",
                     "ListTricks`Private`n"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "TakeBefore", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`TakeBefore] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`TakeBefore\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"TakeBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"TakeBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) gives the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"TakeBefore\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) gives the elements \
of \!\(\*StyleBox[\"list\", \"TI\"]\) appearing before the first element \
matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"TakeBefore\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) gives the elements of \!\(\*StyleBox[\"list\", \"TI\"]\) \
appearing before the \!\(\*StyleBox[\"n\", \"TI\"]\)th element matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\). Negative \!\(\*StyleBox[\"n\", \"TI\"]\
\) counts from the end of the list.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`TakeBefore, {ListTricks`TakeBefore[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], ListTricks`Private`NonZero]], 1]] :> 
       Take[ListTricks`Private`list, 
         ListTricks`Occurrence[
         ListTricks`Private`list, ListTricks`Private`pattern -> (# - 1& ), 
          All, ListTricks`Private`n]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`TakeBefore, {
      SyntaxInformation[ListTricks`TakeBefore] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`TakeBefore"], False]]], "Output",ExpressionUUID->"84834737-\
4066-4824-9201-ee743a130cd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeBefore", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"71a11030-23cc-444a-bc27-514279610a2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\[Pi]"}], "}"}]], "Output",ExpressionUUID->"f86ae208-\
2d90-4b4b-805a-0ec00d29293c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeBefore", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"1d1351ad-3c68-4b52-\
ae28-6921e80d1ded"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\[Pi]", ",", "2"}], "}"}]], "Output",ExpressionUUID->\
"58b24332-37ee-4025-bd1d-fbed3ac25c70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DropAfter"}]], "Input",ExpressionUUID->"68993112-a871-4f77-bf2d-f850cae9f323"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"DropAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"DropAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DropAfter", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "ListTricks`Private`NonZero"}], 
                    ":", "1"}]}], "]"}], ":=", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`pattern", ",", "All", ",", 
                    "ListTricks`Private`n"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DropAfter", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`DropAfter] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`DropAfter\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"DropAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"DropAfter\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing after the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"DropAfter\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) drops the elements \
of \!\(\*StyleBox[\"list\", \"TI\"]\) appearing after the first element \
matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"DropAfter\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) drops the elements of \!\(\*StyleBox[\"list\", \"TI\"]\) \
appearing after the \!\(\*StyleBox[\"n\", \"TI\"]\)th element matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\). Negative \!\(\*StyleBox[\"n\", \"TI\"]\
\) counts from the end of the list.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`DropAfter, {ListTricks`DropAfter[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], ListTricks`Private`NonZero]], 1]] :> 
       Take[ListTricks`Private`list, 
         ListTricks`Occurrence[
         ListTricks`Private`list, ListTricks`Private`pattern, All, 
          ListTricks`Private`n]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`DropAfter, {
      SyntaxInformation[ListTricks`DropAfter] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`DropAfter"], False]]], "Output",ExpressionUUID->"300dbdaf-\
a594-4c63-95e2-c785e2a3a66f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropAfter", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"1fec822b-4b54-4eb3-b210-81c87193eddb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\[Pi]", ",", "2"}], "}"}]], "Output",ExpressionUUID->\
"0856d3a6-8097-4742-8b01-f879c46181a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropAfter", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"96d3fdf1-8e47-4146-\
b879-9688f75e2bb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\[Pi]", ",", "2", ",", "3"}], "}"}]], "Output",Express\
ionUUID->"6d8596d3-bd13-493d-923e-f0ee28d7fff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DropBefore"}]], "Input",ExpressionUUID->"6b72445d-6dbd-4859-a3bc-18e89caa69e2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"DropBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"DropBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"DropBefore", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "___", "]"}]}], ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`n", ":", 
                    RowBox[{"_Integer", "?", "ListTricks`Private`NonZero"}], 
                    ":", "1"}]}], "]"}], ":=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Occurrence", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"ListTricks`Private`pattern", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "-", "1"}], "&"}], ")"}]}], ",", "All", ",",
                     "ListTricks`Private`n"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "DropBefore", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`DropBefore] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`DropBefore\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"DropBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the first \
element matching \\!\\(\\*StyleBox[\\\"pattern\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"DropBefore\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) drops the elements of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) appearing before the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)th element matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\). Negative \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) counts from the end of the \
list.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"DropBefore\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) drops the elements \
of \!\(\*StyleBox[\"list\", \"TI\"]\) appearing before the first element \
matching \!\(\*StyleBox[\"pattern\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"DropBefore\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"n\", \
\"TI\"]]], \"]\"]]\) drops the elements of \!\(\*StyleBox[\"list\", \"TI\"]\) \
appearing before the \!\(\*StyleBox[\"n\", \"TI\"]\)th element matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\). Negative \!\(\*StyleBox[\"n\", \"TI\"]\
\) counts from the end of the list.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`DropBefore, {ListTricks`DropBefore[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankNullSequence[]]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`n, 
           PatternTest[
            Blank[Integer], ListTricks`Private`NonZero]], 1]] :> 
       Drop[ListTricks`Private`list, 
         ListTricks`Occurrence[
         ListTricks`Private`list, ListTricks`Private`pattern -> (# - 1& ), 
          All, ListTricks`Private`n]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`DropBefore, {
      SyntaxInformation[ListTricks`DropBefore] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`DropBefore"], False]]], "Output",ExpressionUUID->"35768896-\
ebad-4110-827e-360206b29efb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropBefore", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"2d8c7bf9-63c3-4c13-85cb-fcf5d7badad0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", 
   SqrtBox["5"]}], "}"}]], "Output",ExpressionUUID->"d7af43e4-cdc0-4543-92c9-\
573b480595b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropBefore", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2", ",", "\[Pi]", ",", "2", ",", "3", ",", 
     SqrtBox["5"]}], "}"}], ",", "_Integer", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",ExpressionUUID->"6a4e285c-541f-4989-\
969f-fa414ecd6074"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   SqrtBox["5"]}], "}"}]], "Output",ExpressionUUID->"c76bb0a7-1ae3-4b3a-b9c3-\
575f7aed397c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Tile", "Input"]], "Subsubsection",ExpressionUUID->"4af7688d-06ba-4d8c-879e-16b1286b52d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Tile"}]], "Input",ExpressionUUID->"1e2b01d8-9b18-4962-a84d-b27b669e4d99"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Tile\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"len\\\
\", \\\"TI\\\"]]], \\\"]\\\"]]\\) tiles \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) to form a periodic list of length \
\\!\\(\\*StyleBox[\\\"len\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Tile\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dims\
\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) tiles \\!\\(\\*StyleBox[\\\"array\\\", \\\
\"TI\\\"]\\) to form an array with dimensions \\!\\(\\*StyleBox[\\\"dims\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Tile", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "]"}]}], ",", "0"}], "]"}], ":=", 
                    "ListTricks`Private`list"}]},
                    {
                    RowBox[{
                    RowBox[{"Tile", "[", 
                    RowBox[{
                    RowBox[{"ListTricks`Private`list", ":", 
                    RowBox[{"_", "[", "__", "]"}]}], ",", 
                    RowBox[{
                    "ListTricks`Private`length_Integer", "?", 
                    "NonNegative"}]}], "]"}], ":=", 
                    RowBox[{"Join", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Floor", "[", 
                    FractionBox["ListTricks`Private`length", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Take", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"ListTricks`Private`length", ",", 
                    RowBox[{"Length", "[", "ListTricks`Private`list", "]"}]}],
                     "]"}]}], "]"}]}], "]"}]}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Tile", "[", 
                    RowBox[{"ListTricks`Private`array_List", ",", 
                    RowBox[{"ListTricks`Private`dimensions", ":", 
                    RowBox[{"{", 
                    RowBox[{"__Integer", "?", "NonNegative"}], "}"}]}]}], 
                    "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}], 
                    "\[GreaterEqual]", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`dimensions", "]"}]}]}],
                     ":=", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"ArrayFlatten", "[", 
                    RowBox[{
                    RowBox[{"Table", "@@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"List", "/@", 
                    RowBox[{"Ceiling", "[", 
                    FractionBox["ListTricks`Private`dimensions", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`dimensions", "]"}]}], 
                    "]"}]], "]"}]}], ",", "ListTricks`Private`array"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    "Length", "[", "ListTricks`Private`dimensions", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    "Sequence", "@@", "ListTricks`Private`dimensions"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Tile", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Tile] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Blank[]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Tile\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Tile\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"len\\\
\", \\\"TI\\\"]]], \\\"]\\\"]]\\) tiles \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\) to form a periodic list of length \
\\!\\(\\*StyleBox[\\\"len\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Tile\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dims\
\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) tiles \\!\\(\\*StyleBox[\\\"array\\\", \\\
\"TI\\\"]\\) to form an array with dimensions \\!\\(\\*StyleBox[\\\"dims\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Tile\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"len\", \"TI\"]]], \"]\"]]\) tiles \
\!\(\*StyleBox[\"list\", \"TI\"]\) to form a periodic list of length \
\!\(\*StyleBox[\"len\", \"TI\"]\).\n\!\(\*RowBox[List[\"Tile\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"dims\", \"TI\"]]], \
\"]\"]]\) tiles \!\(\*StyleBox[\"array\", \"TI\"]\) to form an array with \
dimensions \!\(\*StyleBox[\"dims\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Tile, {ListTricks`Tile[
         Pattern[ListTricks`Private`list, 
          Blank[][]], 0] :> ListTricks`Private`list, ListTricks`Tile[
         Pattern[ListTricks`Private`list, 
          Blank[][
           BlankSequence[]]], 
         PatternTest[
          Pattern[ListTricks`Private`length, 
           Blank[Integer]], NonNegative]] :> Apply[Join, 
         Append[
          ConstantArray[ListTricks`Private`list, 
           Floor[ListTricks`Private`length/Length[ListTricks`Private`list]]], 
          Take[ListTricks`Private`list, 
           Mod[ListTricks`Private`length, 
            Length[ListTricks`Private`list]]]]], Condition[
         ListTricks`Tile[
          Pattern[ListTricks`Private`array, 
           Blank[List]], 
          Pattern[ListTricks`Private`dimensions, {
            PatternTest[
             BlankSequence[Integer], NonNegative]}]], 
         ArrayDepth[ListTricks`Private`array] >= 
         Length[ListTricks`Private`dimensions]] :> Take[
         ArrayFlatten[
          Apply[Table, 
           Prepend[
            Map[List, 
             Ceiling[
             ListTricks`Private`dimensions/Dimensions[
              ListTricks`Private`array, 
               Length[ListTricks`Private`dimensions]]]], 
            ListTricks`Private`array]], 
          Length[ListTricks`Private`dimensions]], 
         Apply[Sequence, ListTricks`Private`dimensions]]}], "SubValues" -> 
    None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Tile, {
      SyntaxInformation[ListTricks`Tile] -> {"ArgumentsPattern" -> {
           Blank[], 
           Blank[]}}}], "NValues" -> None, "FormatValues" -> None, "Options" -> 
    None, "Attributes" -> {Protected}, "FullName" -> "ListTricks`Tile"], 
   False]]], "Output",ExpressionUUID->"3d284697-e1be-4c2b-a584-00546fb27379"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tile", "[", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", "13"}], "]"}]], "Input",ExpressionUU\
ID->"fc509a6e-c858-4a73-b69c-1f7148668d11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "1", ",", "2", ",", "3", 
   ",", "4", ",", "5", ",", "1", ",", "2", ",", "3"}], "}"}]], "Output",Expres\
sionUUID->"7aa01817-d173-4b7c-94c9-3b5b13d9670a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Tile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7"}], "}"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"46e4193b-536d-49a2-beb2-90c5975b3467"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3", "1", "2", "3", "1"},
    {"4", "5", "6", "4", "5", "6", "4"},
    {"1", "2", "3", "1", "2", "3", "1"},
    {"4", "5", "6", "4", "5", "6", "4"},
    {"1", "2", "3", "1", "2", "3", "1"},
    {"4", "5", "6", "4", "5", "6", "4"},
    {"1", "2", "3", "1", "2", "3", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",ExpressionUUID->"ccd6c979-2f27-44d3-b869-5797650eacb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"Tile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",ExpressionUU\
ID->"00a0b949-f439-4f91-8a7c-c5332469a8ad"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztzzENACAQBMEDJ1hCAqHHf0eDhm+YZFfAjHXm6kn2u6UVlII4ODg4ODg4
ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4fnZcZT8V+Q==
   "], {{0, 0}, {100, 100}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"963e9ffe-8ff5-48c4-b0a0-\
dae31fe52d50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Range", "[", "12", "]"}], ",", "2"}], "]"}], ",", "3"}], 
  "]"}]], "Input",ExpressionUUID->"a052babe-ddb1-4645-ac1c-9a7d65017809"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "12"}], "}"}]}], "}"}]}], "}"}]], "Output",Expression\
UUID->"d711a61f-d010-4249-bdd3-0786ea02c0e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Text", "[", "##1", "]"}], "&"}], ",", 
      RowBox[{"Tile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"7", ",", "8"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", "12"}], "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]], "Input",ExpressionUUID->\
"dfa12d8f-b82d-4025-a7c1-8c8b952754a4"],

Cell[BoxData[
 Graphics3DBox[{{{Text3DBox["1", {1, 1, 1}], Text3DBox["2", {1, 1, 2}], 
     Text3DBox["1", {1, 1, 3}], Text3DBox["2", {1, 1, 4}], 
     Text3DBox["1", {1, 1, 5}]}, {Text3DBox["3", {1, 2, 1}], 
     Text3DBox["4", {1, 2, 2}], Text3DBox["3", {1, 2, 3}], 
     Text3DBox["4", {1, 2, 4}], Text3DBox["3", {1, 2, 5}]}, {
     Text3DBox["5", {1, 3, 1}], Text3DBox["6", {1, 3, 2}], 
     Text3DBox["5", {1, 3, 3}], Text3DBox["6", {1, 3, 4}], 
     Text3DBox["5", {1, 3, 5}]}, {Text3DBox["1", {1, 4, 1}], 
     Text3DBox["2", {1, 4, 2}], Text3DBox["1", {1, 4, 3}], 
     Text3DBox["2", {1, 4, 4}], Text3DBox["1", {1, 4, 5}]}, {
     Text3DBox["3", {1, 5, 1}], Text3DBox["4", {1, 5, 2}], 
     Text3DBox["3", {1, 5, 3}], Text3DBox["4", {1, 5, 4}], 
     Text3DBox["3", {1, 5, 5}]}}, {{Text3DBox["7", {2, 1, 1}], 
     Text3DBox["8", {2, 1, 2}], Text3DBox["7", {2, 1, 3}], 
     Text3DBox["8", {2, 1, 4}], Text3DBox["7", {2, 1, 5}]}, {
     Text3DBox["9", {2, 2, 1}], Text3DBox["10", {2, 2, 2}], 
     Text3DBox["9", {2, 2, 3}], Text3DBox["10", {2, 2, 4}], 
     Text3DBox["9", {2, 2, 5}]}, {Text3DBox["11", {2, 3, 1}], 
     Text3DBox["12", {2, 3, 2}], Text3DBox["11", {2, 3, 3}], 
     Text3DBox["12", {2, 3, 4}], Text3DBox["11", {2, 3, 5}]}, {
     Text3DBox["7", {2, 4, 1}], Text3DBox["8", {2, 4, 2}], 
     Text3DBox["7", {2, 4, 3}], Text3DBox["8", {2, 4, 4}], 
     Text3DBox["7", {2, 4, 5}]}, {Text3DBox["9", {2, 5, 1}], 
     Text3DBox["10", {2, 5, 2}], Text3DBox["9", {2, 5, 3}], 
     Text3DBox["10", {2, 5, 4}], Text3DBox["9", {2, 5, 5}]}}, {{
     Text3DBox["1", {3, 1, 1}], Text3DBox["2", {3, 1, 2}], 
     Text3DBox["1", {3, 1, 3}], Text3DBox["2", {3, 1, 4}], 
     Text3DBox["1", {3, 1, 5}]}, {Text3DBox["3", {3, 2, 1}], 
     Text3DBox["4", {3, 2, 2}], Text3DBox["3", {3, 2, 3}], 
     Text3DBox["4", {3, 2, 4}], Text3DBox["3", {3, 2, 5}]}, {
     Text3DBox["5", {3, 3, 1}], Text3DBox["6", {3, 3, 2}], 
     Text3DBox["5", {3, 3, 3}], Text3DBox["6", {3, 3, 4}], 
     Text3DBox["5", {3, 3, 5}]}, {Text3DBox["1", {3, 4, 1}], 
     Text3DBox["2", {3, 4, 2}], Text3DBox["1", {3, 4, 3}], 
     Text3DBox["2", {3, 4, 4}], Text3DBox["1", {3, 4, 5}]}, {
     Text3DBox["3", {3, 5, 1}], Text3DBox["4", {3, 5, 2}], 
     Text3DBox["3", {3, 5, 3}], Text3DBox["4", {3, 5, 4}], 
     Text3DBox["3", {3, 5, 5}]}}, {{Text3DBox["7", {4, 1, 1}], 
     Text3DBox["8", {4, 1, 2}], Text3DBox["7", {4, 1, 3}], 
     Text3DBox["8", {4, 1, 4}], Text3DBox["7", {4, 1, 5}]}, {
     Text3DBox["9", {4, 2, 1}], Text3DBox["10", {4, 2, 2}], 
     Text3DBox["9", {4, 2, 3}], Text3DBox["10", {4, 2, 4}], 
     Text3DBox["9", {4, 2, 5}]}, {Text3DBox["11", {4, 3, 1}], 
     Text3DBox["12", {4, 3, 2}], Text3DBox["11", {4, 3, 3}], 
     Text3DBox["12", {4, 3, 4}], Text3DBox["11", {4, 3, 5}]}, {
     Text3DBox["7", {4, 4, 1}], Text3DBox["8", {4, 4, 2}], 
     Text3DBox["7", {4, 4, 3}], Text3DBox["8", {4, 4, 4}], 
     Text3DBox["7", {4, 4, 5}]}, {Text3DBox["9", {4, 5, 1}], 
     Text3DBox["10", {4, 5, 2}], Text3DBox["9", {4, 5, 3}], 
     Text3DBox["10", {4, 5, 4}], Text3DBox["9", {4, 5, 5}]}}, {{
     Text3DBox["1", {5, 1, 1}], Text3DBox["2", {5, 1, 2}], 
     Text3DBox["1", {5, 1, 3}], Text3DBox["2", {5, 1, 4}], 
     Text3DBox["1", {5, 1, 5}]}, {Text3DBox["3", {5, 2, 1}], 
     Text3DBox["4", {5, 2, 2}], Text3DBox["3", {5, 2, 3}], 
     Text3DBox["4", {5, 2, 4}], Text3DBox["3", {5, 2, 5}]}, {
     Text3DBox["5", {5, 3, 1}], Text3DBox["6", {5, 3, 2}], 
     Text3DBox["5", {5, 3, 3}], Text3DBox["6", {5, 3, 4}], 
     Text3DBox["5", {5, 3, 5}]}, {Text3DBox["1", {5, 4, 1}], 
     Text3DBox["2", {5, 4, 2}], Text3DBox["1", {5, 4, 3}], 
     Text3DBox["2", {5, 4, 4}], Text3DBox["1", {5, 4, 5}]}, {
     Text3DBox["3", {5, 5, 1}], Text3DBox["4", {5, 5, 2}], 
     Text3DBox["3", {5, 5, 3}], Text3DBox["4", {5, 5, 4}], 
     Text3DBox["3", {5, 5, 5}]}}},
  Boxed->False]], "Output",ExpressionUUID->"c25491e8-1679-4d8f-90e9-\
e8e96ba394d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Tile", "[", 
     RowBox[{
      RowBox[{"Range", "[", "5", "]"}], ",", "i"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "20"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"829616a0-f448-4999-abad-1a3497b6c22f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",\
ExpressionUUID->"d8f67ddd-10c7-49db-96b0-dc9e4ba6012e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Trim", "Input"]], "Subsubsection",ExpressionUUID->"3b0e45e1-42c0-4fae-8edb-331994a0482b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Trim"}]], "Input",ExpressionUUID->"64fea020-9199-49fa-8217-b98165a1cd3e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Trim\\\", \\\"[\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the largest full \
array that can be obtained by removing elements of a ragged \
array.\\n\\!\\(\\*RowBox[List[\\\"Trim\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) trims a ragged \
array on levels specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "Trim", "[", "ListTricks`Private`array_List", "]"}], ":=", 
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{
                    "RaggedArrayDepth", "[", "ListTricks`Private`array", 
                    "]"}], "-", "1"}]}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`expr", ":", 
                    RowBox[{"Except", "[", "_List", "]"}]}], "]"}], ":=", 
                    "ListTricks`Private`expr"}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", 
                    "NonNegative"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "RaggedArrayDepth", "[", "ListTricks`Private`array", 
                    "]"}], "-", "1"}], "\[GreaterEqual]", 
                    "ListTricks`Private`level"}]}], ":=", 
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "ListTricks`Private`level"}], "}"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "NonNegative"}], 
                    "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "RaggedArrayDepth", "[", "ListTricks`Private`array", 
                    "]"}], "-", "1"}], "\[GreaterEqual]", 
                    "ListTricks`Private`level"}]}], ":=", 
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level", ",", 
                    "ListTricks`Private`level"}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"Trim", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", 
                    "NonNegative"}], ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax_Integer", "?", 
                    "NonNegative"}]}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "RaggedArrayDepth", "[", "ListTricks`Private`array", 
                    "]"}], "-", "1"}], "\[GreaterEqual]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    "ListTricks`Private`levelmin", ",", 
                    "ListTricks`Private`levelmax"}], "]"}]}]}], ":=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`expr", ",", 
                    "ListTricks`Private`level"}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`length", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"Length", ",", "ListTricks`Private`expr", ",", 
                    RowBox[{"{", "ListTricks`Private`level", "}"}]}], "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"#1", ",", "ListTricks`Private`length"}], "]"}], 
                    "&"}], ",", "ListTricks`Private`expr", ",", 
                    RowBox[{"{", "ListTricks`Private`level", "}"}]}], "]"}]}],
                     "]"}]}], "]"}], ",", "ListTricks`Private`array", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "ListTricks`Private`levelmin", ",", 
                    "ListTricks`Private`levelmax"}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Trim", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Trim] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Trim\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Trim\\\", \\\"[\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\"]\\\"]]\\) gives the largest full \
array that can be obtained by removing elements of a ragged \
array.\\n\\!\\(\\*RowBox[List[\\\"Trim\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) trims a ragged \
array on levels specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\
\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Trim\", \"[\", StyleBox[\"array\", \"TI\"], \
\"]\"]]\) gives the largest full array that can be obtained by removing \
elements of a ragged array.\n\!\(\*RowBox[List[\"Trim\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"levelspec\", \
\"TI\"]]], \"]\"]]\) trims a ragged array on levels specified by \
\!\(\*StyleBox[\"levelspec\", \"TI\"]\).", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Trim, {ListTricks`Trim[
         Pattern[ListTricks`Private`array, 
          Blank[List]]] :> 
       ListTricks`Trim[
        ListTricks`Private`array, {
         1, ListTricks`RaggedArrayDepth[ListTricks`Private`array] - 1}], 
       ListTricks`Trim[
         Pattern[ListTricks`Private`expr, 
          Except[
           Blank[List]]]] :> ListTricks`Private`expr, Condition[
         ListTricks`Trim[
          Pattern[ListTricks`Private`array, 
           Blank[]], 
          PatternTest[
           Pattern[ListTricks`Private`level, 
            Blank[Integer]], NonNegative]], 
         ListTricks`RaggedArrayDepth[ListTricks`Private`array] - 1 >= 
         ListTricks`Private`level] :> 
       ListTricks`Trim[
        ListTricks`Private`array, {1, ListTricks`Private`level}], Condition[
         ListTricks`Trim[
          Pattern[ListTricks`Private`array, 
           Blank[]], {
           PatternTest[
            Pattern[ListTricks`Private`level, 
             Blank[Integer]], NonNegative]}], 
         ListTricks`RaggedArrayDepth[ListTricks`Private`array] - 1 >= 
         ListTricks`Private`level] :> 
       ListTricks`Trim[
        ListTricks`Private`array, {
         ListTricks`Private`level, ListTricks`Private`level}], Condition[
         ListTricks`Trim[
          Pattern[ListTricks`Private`array, 
           Blank[]], {
           PatternTest[
            Pattern[ListTricks`Private`levelmin, 
             Blank[Integer]], NonNegative], 
           PatternTest[
            Pattern[ListTricks`Private`levelmax, 
             Blank[Integer]], NonNegative]}], 
         ListTricks`RaggedArrayDepth[ListTricks`Private`array] - 1 >= 
         Min[ListTricks`Private`levelmin, ListTricks`Private`levelmax]] :> 
       Fold[
         Function[{ListTricks`Private`expr, ListTricks`Private`level}, 
          With[{ListTricks`Private`length = Min[
              Map[
              Length, ListTricks`Private`expr, {ListTricks`Private`level}]]}, 
           Map[
           Take[#, ListTricks`Private`length]& , ListTricks`Private`expr, {
            ListTricks`Private`level}]]], ListTricks`Private`array, 
         Range[ListTricks`Private`levelmin, ListTricks`Private`levelmax]]}], 
    "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Trim, {
      SyntaxInformation[ListTricks`Trim] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Trim"], False]]], "Output",ExpressionUUID->"1d8cced8-5d07-\
44c3-8e32-7c1dbbf30c39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConstantArray", "[", 
    RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"5", ",", "10"}], "]"}]}]], "Input",ExpressionUUID->"a94a43fe-f2c4-\
4562-871f-154c37cee6c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9",
      ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
     ",", "10", ",", "10", ",", "10"}], "}"}]}], "}"}]], "Output",ExpressionUU\
ID->"b3a433d0-d2d2-4ba9-a215-ef45c79e244a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trim", "[", "%", "]"}]], "Input",ExpressionUUID->"214c01c3-e0cf-48ef-9f9d-921d548d5afe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "6", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "8", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "9", ",", "9", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "10", ",", "10", ",", "10"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"d1e79f87-bdb5-46d2-a543-39841a250e0f"]
}, Open  ]],

Cell[TextData[{
 "In order to use ",
 StyleBox["Transpose", "Input"],
 ", all rows must be of the same length."
}], "Text",ExpressionUUID->"197c25b3-226b-4182-a7d1-dc3842fc4352"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Range", "[", "50", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#2", "+", "1"}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"2", "^", "#1"}]}], "}"}]}], "]"}], "&"}], ")"}], "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}]], "Input",ExpressionUUID->\
"c100be41-49d2-4d49-9014-b9a1eec26a44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", 
     ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", 
     "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", 
     ",", "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", 
     "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", 
     ",", "48", ",", "49", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "5", ",", "9", ",", "13", ",", "17", ",", "21", ",", "25", ",", 
     "29", ",", "33", ",", "37", ",", "41", ",", "45", ",", "49"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "9", ",", "17", ",", "25", ",", "33", ",", "41", ",", "49"}], 
    "}"}]}], "}"}]], "Output",ExpressionUUID->"3874525f-9976-41fa-a0a3-\
570cd66fb819"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "%"}]], "Input",ExpressionUUID->"96bb6d64-98c7-4da1-bab4-b5f77210cec1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "13", ",", "7"}], "}"}]], "Output",ExpressionUUID->\
"92cf0b2e-9765-47ff-bebe-b947585eae40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"Trim", "[", "%%", "]"}], "]"}]], "Input",ExpressionUUID->"69989257-\
d351-4600-ad7e-a3230e15a681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "13", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "17", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "25", ",", "49"}], "}"}]}], "}"}]], "Output",ExpressionU\
UID->"2376b8c9-5a7e-41b5-8b10-540eacbeacce"]
}, Open  ]],

Cell["Trim a multidimensional array:", "Text",ExpressionUUID->"d160f6a4-951e-4107-a092-fcd132635b69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trim", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "f", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "h"}], "}"}], ",", 
      RowBox[{"{", "i", "}"}]}], "}"}]}], "}"}], "]"}]], "Input",ExpressionUUI\
D->"dd4a6d98-696b-43bb-a43c-30da191e6954"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "c", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", 
     RowBox[{"{", "g", "}"}]}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"32a99967-c0cd-4f4b-b645-bea7229b7e9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trim", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h"}], "}"}], ",", 
       RowBox[{"{", "i", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",ExpressionUUID->"cb651332-7608-\
4560-aa19-a6f7f41b0fec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "h"}], "}"}]}], "}"}]}], "}"}]], "Output",ExpressionUU\
ID->"ddb7ab84-e347-41e9-acc5-6345734a22e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trim", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h"}], "}"}], ",", 
       RowBox[{"{", "i", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",ExpressionUUID->"2f7f399c-fe69-\
43e7-a521-8c6888a4cda2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "c", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", 
     RowBox[{"{", "g", "}"}], ",", 
     RowBox[{"{", "i", "}"}]}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"fc7e8d72-9457-4b6b-a34b-bf673856d5cd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["UnpadLeft", "Input"],
 StyleBox[", ", "Text",
  FontWeight->"Plain"],
 StyleBox["UnpadRight", "Input"],
 StyleBox[", and ", "Text",
  FontWeight->"Plain"],
 StyleBox["Unpad", "Input"]
}], "Subsubsection",ExpressionUUID->"7f5d5d18-5c8a-4840-bd94-8feaf41c1947"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UnpadLeft"}]], "Input",ExpressionUUID->"ae0af443-3466-4952-ac6b-b5fedacc386d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
beginning of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) removes all elements \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning \
of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning of each \
level of \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"ListTricks`Private`pattern_", ":", "0"}]}], 
                    "]"}], ":=", 
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "ListTricks`Private`level"}], "}"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}], 
                    "}"}]}], "]"}], ":=", 
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level", ",", 
                    "ListTricks`Private`level"}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`list_List", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"LengthWhile", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{
                    "MatchQ", "[", "ListTricks`Private`pattern", "]"}]}], 
                    "]"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", "\[Infinity]"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`levelmin", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`levelspec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax_Integer", "?", 
                    "Positive"}]}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`depth", "=", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Take", "@@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`array", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"ListTricks`Private`levelmin", "-", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{
                    "Except", "[", "ListTricks`Private`pattern", "]"}], ",", 
                    RowBox[{"{", "ListTricks`Private`depth", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], ",", 
                    "All", ",", "ListTricks`Private`levelspec"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], "\[RuleDelayed]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax", "-", 
                    "ListTricks`Private`levelmin", "+", "1"}]}], "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`positions_", "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", "#1", "]"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    "Transpose", "[", "ListTricks`Private`positions", 
                    "]"}]}]}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{
                    "ListTricks`Private`depth", "-", 
                    "ListTricks`Private`levelmax"}]}], "]"}]}], "]"}]}], "/;", 
                    RowBox[{
                    "ListTricks`Private`levelmin", "\[LessEqual]", 
                    "ListTricks`Private`levelmax", "\[LessEqual]", 
                    "ListTricks`Private`depth"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "UnpadLeft", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`UnpadLeft] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`UnpadLeft\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
beginning of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) removes all elements \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning \
of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning of each \
level of \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadLeft\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"UnpadLeft\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"]]\) removes all zeros from the beginning of \!\(\*StyleBox[\"list\", \
\"TI\"]\).\n\!\(\*RowBox[List[\"UnpadLeft\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) removes all elements matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\) from the beginning of \
\!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"UnpadLeft\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) gives the smallest full array obtainable by removing \
elements matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) from the beginning of \
each level of \!\(\*StyleBox[\"array\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"UnpadLeft\", \"[\", RowBox[List[StyleBox[\"array\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"levelspec\", \
\"TI\"]]], \"]\"]]\) unpads on levels specified by \!\(\*StyleBox[\"levelspec\
\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`UnpadLeft, {ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`pattern, 
           Blank[]], 0]] :> 
       ListTricks`UnpadLeft[
        ListTricks`Private`array, ListTricks`Private`pattern, 
         ArrayDepth[ListTricks`Private`array]], ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`level, 
           Blank[Integer]], Positive]] :> 
       ListTricks`UnpadLeft[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         1, ListTricks`Private`level}], ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`level, 
            Blank[Integer]], Positive]}] :> 
       ListTricks`UnpadLeft[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`level, ListTricks`Private`level}], 
       ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`list, 
          Blank[List]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {1, 1}] :> Drop[ListTricks`Private`list, 
         LengthWhile[ListTricks`Private`list, 
          MatchQ[ListTricks`Private`pattern]]], ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`levelmin, 
            Blank[Integer]], Positive], 
          DirectedInfinity[1]}] :> 
       ListTricks`UnpadLeft[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`levelmin, 
          ArrayDepth[ListTricks`Private`array]}], ListTricks`UnpadLeft[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Pattern[ListTricks`Private`levelspec, {
           PatternTest[
            Pattern[ListTricks`Private`levelmin, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[ListTricks`Private`levelmax, 
             Blank[Integer]], Positive]}]] :> 
       With[{ListTricks`Private`depth = ArrayDepth[ListTricks`Private`array]}, 
         Condition[
          Apply[Take, 
           Join[{ListTricks`Private`array}, 
            ConstantArray[All, ListTricks`Private`levelmin - 1], 
            Replace[
             Take[
              Position[ListTricks`Private`array, 
               Except[ListTricks`Private`pattern], {ListTricks`Private`depth},
                Heads -> False], All, ListTricks`Private`levelspec], {{} :> 
              ConstantArray[
               0, ListTricks`Private`levelmax - ListTricks`Private`levelmin + 
                1], Pattern[ListTricks`Private`positions, 
                Blank[]] :> Map[{
                 Min[#], -1}& , 
                Transpose[ListTricks`Private`positions]]}], 
            ConstantArray[
            All, ListTricks`Private`depth - ListTricks`Private`levelmax]]], 
          ListTricks`Private`levelmin <= ListTricks`Private`levelmax <= 
          ListTricks`Private`depth]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`UnpadLeft, {
      SyntaxInformation[ListTricks`UnpadLeft] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`UnpadLeft"], False]]], "Output",ExpressionUUID->"359338eb-\
56bc-4433-acc0-2ce9926f6e45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UnpadRight"}]], "Input",ExpressionUUID->"ee2e459c-f2a5-4d83-b477-9401179abed8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
end of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) removes all elements \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the end of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the end of each level \
of \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"UnpadRight\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels \
specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"ListTricks`Private`pattern_", ":", "0"}]}], 
                    "]"}], ":=", 
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "ListTricks`Private`level"}], "}"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}], 
                    "}"}]}], "]"}], ":=", 
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level", ",", 
                    "ListTricks`Private`level"}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`list_List", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"ListTricks`Private`list", ",", 
                    RowBox[{"-", 
                    RowBox[{"LengthWhile", "[", 
                    RowBox[{
                    RowBox[{"Reverse", "[", "ListTricks`Private`list", "]"}], 
                    ",", 
                    RowBox[{
                    "MatchQ", "[", "ListTricks`Private`pattern", "]"}]}], 
                    "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", "\[Infinity]"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`levelmin", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`levelspec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax_Integer", "?", 
                    "Positive"}]}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`depth", "=", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Take", "@@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`array", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"ListTricks`Private`levelmin", "-", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{
                    "Except", "[", "ListTricks`Private`pattern", "]"}], ",", 
                    RowBox[{"{", "ListTricks`Private`depth", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], ",", 
                    "All", ",", "ListTricks`Private`levelspec"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], "\[RuleDelayed]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax", "-", 
                    "ListTricks`Private`levelmin", "+", "1"}]}], "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`positions_", "\[RuleDelayed]", 
                    RowBox[{"Max", "/@", 
                    RowBox[{
                    "Transpose", "[", "ListTricks`Private`positions", 
                    "]"}]}]}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{
                    "ListTricks`Private`depth", "-", 
                    "ListTricks`Private`levelmax"}]}], "]"}]}], "]"}]}], "/;", 
                    RowBox[{
                    "ListTricks`Private`levelmin", "\[LessEqual]", 
                    "ListTricks`Private`levelmax", "\[LessEqual]", 
                    "ListTricks`Private`depth"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "UnpadRight", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`UnpadRight] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`UnpadRight\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
end of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) removes all elements \
matching \\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the end of \
\\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"UnpadRight\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the end of each level \
of \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\
\"UnpadRight\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels \
specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"UnpadRight\", \"[\", StyleBox[\"list\", \"TI\"], \"]\
\"]]\) removes all zeros from the end of \!\(\*StyleBox[\"list\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"UnpadRight\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"pattern\", \"TI\"]]], \"]\"]]\) removes all \
elements matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) from the end of \
\!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"UnpadRight\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) gives the smallest full array obtainable by removing \
elements matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) from the end of each \
level of \!\(\*StyleBox[\"array\", \"TI\"]\).\n\!\(\*RowBox[List[\"UnpadRight\
\", \"[\", RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"pattern\
\", \"TI\"], \",\", StyleBox[\"levelspec\", \"TI\"]]], \"]\"]]\) unpads on \
levels specified by \!\(\*StyleBox[\"levelspec\", \"TI\"]\).", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`UnpadRight, {ListTricks`UnpadRight[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`pattern, 
           Blank[]], 0]] :> 
       ListTricks`UnpadRight[
        ListTricks`Private`array, ListTricks`Private`pattern, 
         ArrayDepth[ListTricks`Private`array]], ListTricks`UnpadRight[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`level, 
           Blank[Integer]], Positive]] :> 
       ListTricks`UnpadRight[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         1, ListTricks`Private`level}], ListTricks`UnpadRight[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`level, 
            Blank[Integer]], Positive]}] :> 
       ListTricks`UnpadRight[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`level, ListTricks`Private`level}], 
       ListTricks`UnpadRight[
         Pattern[ListTricks`Private`list, 
          Blank[List]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {1, 1}] :> Drop[ListTricks`Private`list, -LengthWhile[
           Reverse[ListTricks`Private`list], 
           MatchQ[ListTricks`Private`pattern]]], ListTricks`UnpadRight[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`levelmin, 
            Blank[Integer]], Positive], 
          DirectedInfinity[1]}] :> 
       ListTricks`UnpadRight[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`levelmin, 
          ArrayDepth[ListTricks`Private`array]}], ListTricks`UnpadRight[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Pattern[ListTricks`Private`levelspec, {
           PatternTest[
            Pattern[ListTricks`Private`levelmin, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[ListTricks`Private`levelmax, 
             Blank[Integer]], Positive]}]] :> 
       With[{ListTricks`Private`depth = ArrayDepth[ListTricks`Private`array]}, 
         Condition[
          Apply[Take, 
           Join[{ListTricks`Private`array}, 
            ConstantArray[All, ListTricks`Private`levelmin - 1], 
            Replace[
             Take[
              Position[ListTricks`Private`array, 
               Except[ListTricks`Private`pattern], {ListTricks`Private`depth},
                Heads -> False], All, ListTricks`Private`levelspec], {{} :> 
              ConstantArray[
               0, ListTricks`Private`levelmax - ListTricks`Private`levelmin + 
                1], Pattern[ListTricks`Private`positions, 
                Blank[]] :> Map[Max, 
                Transpose[ListTricks`Private`positions]]}], 
            ConstantArray[
            All, ListTricks`Private`depth - ListTricks`Private`levelmax]]], 
          ListTricks`Private`levelmin <= ListTricks`Private`levelmax <= 
          ListTricks`Private`depth]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`UnpadRight, {
      SyntaxInformation[ListTricks`UnpadRight] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`UnpadRight"], False]]], "Output",ExpressionUUID->"1c2b7b86-4bba-402f-ac3d-e03c93175daf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnpadLeft", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
   "}"}], "]"}]], "Input",ExpressionUUID->"c07cb144-3cde-4622-9fca-\
5c6c6ce95862"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]], "Output",ExpressionUUID\
->"a5c81803-a8f6-4ca8-9414-ad822684348a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnpadLeft", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "a", ",", "b", ",", "4", ",", "c", ",", "5",
      ",", "6"}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"e077aa8c-889b-4261-a630-a31f18b5bc8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "4", ",", "c", ",", "5", ",", "6"}], 
  "}"}]], "Output",ExpressionUUID->"be48ef40-eb1e-43d6-a4b3-b2c3af3686f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Unpad"}]], "Input",ExpressionUUID->"fc1765a5-57a5-45c6-95fe-ae9f33b5c878"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
beginning and end of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\\n\\!\\(\
\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) removes all elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning and end \
of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning and end \
of each level of \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{"ListTricks`Private`array_", ",", 
                    RowBox[{"ListTricks`Private`pattern_", ":", "0"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "ListTricks`Private`level"}], "}"}]}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level_Integer", "?", "Positive"}], 
                    "}"}]}], "]"}], ":=", 
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "ListTricks`Private`level", ",", 
                    "ListTricks`Private`level"}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`list_List", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"UnpadRight", "[", 
                    RowBox[{
                    RowBox[{"UnpadLeft", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", "\[Infinity]"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array", ",", 
                    "ListTricks`Private`pattern", ",", 
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`levelmin", ",", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unpad", "[", 
                    RowBox[{
                    "ListTricks`Private`array_", ",", 
                    "ListTricks`Private`pattern_", ",", 
                    RowBox[{"ListTricks`Private`levelspec", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "ListTricks`Private`levelmin_Integer", "?", "Positive"}], 
                    ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax_Integer", "?", 
                    "Positive"}]}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ListTricks`Private`depth", "=", 
                    RowBox[{
                    "ArrayDepth", "[", "ListTricks`Private`array", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Take", "@@", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`array", "}"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"ListTricks`Private`levelmin", "-", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"ListTricks`Private`array", ",", 
                    RowBox[{
                    "Except", "[", "ListTricks`Private`pattern", "]"}], ",", 
                    RowBox[{"{", "ListTricks`Private`depth", "}"}], ",", 
                    RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}], ",", 
                    "All", ",", "ListTricks`Private`levelspec"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "}"}], "\[RuleDelayed]", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    "ListTricks`Private`levelmax", "-", 
                    "ListTricks`Private`levelmin", "+", "1"}]}], "]"}]}], ",", 
                    RowBox[{"ListTricks`Private`positions_", "\[RuleDelayed]", 
                    RowBox[{"MinMax", "/@", 
                    RowBox[{
                    "Transpose", "[", "ListTricks`Private`positions", 
                    "]"}]}]}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"All", ",", 
                    RowBox[{
                    "ListTricks`Private`depth", "-", 
                    "ListTricks`Private`levelmax"}]}], "]"}]}], "]"}]}], "/;", 
                    RowBox[{
                    "ListTricks`Private`levelmin", "\[LessEqual]", 
                    "ListTricks`Private`levelmax", "\[LessEqual]", 
                    "ListTricks`Private`depth"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Unpad", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_.", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Unpad] = {"ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Unpad\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) removes all zeros from the \
beginning and end of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\).\\n\\!\\(\
\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", RowBox[List[StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \
\\\"]\\\"]]\\) removes all elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning and end \
of \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives the smallest \
full array obtainable by removing elements matching \
\\!\\(\\*StyleBox[\\\"pattern\\\", \\\"TI\\\"]\\) from the beginning and end \
of each level of \\!\\(\\*StyleBox[\\\"array\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unpad\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"pattern\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]]], \\\"]\\\"]]\\) unpads on levels specified by \
\\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Unpad\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"]]\) removes all zeros from the beginning and end of \
\!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Unpad\", \"[\", \
RowBox[List[StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) removes all elements matching \
\!\(\*StyleBox[\"pattern\", \"TI\"]\) from the beginning and end of \
\!\(\*StyleBox[\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Unpad\", \"[\", \
RowBox[List[StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"pattern\", \
\"TI\"]]], \"]\"]]\) gives the smallest full array obtainable by removing \
elements matching \!\(\*StyleBox[\"pattern\", \"TI\"]\) from the beginning \
and end of each level of \!\(\*StyleBox[\"array\", \"TI\"]\).\n\
\!\(\*RowBox[List[\"Unpad\", \"[\", RowBox[List[StyleBox[\"array\", \"TI\"], \
\",\", StyleBox[\"pattern\", \"TI\"], \",\", StyleBox[\"levelspec\", \
\"TI\"]]], \"]\"]]\) unpads on levels specified by \!\(\*StyleBox[\"levelspec\
\", \"TI\"]\).", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Unpad, {ListTricks`Unpad[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Optional[
          Pattern[ListTricks`Private`pattern, 
           Blank[]], 0]] :> 
       ListTricks`Unpad[ListTricks`Private`array, ListTricks`Private`pattern, 
         ArrayDepth[ListTricks`Private`array]], ListTricks`Unpad[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         PatternTest[
          Pattern[ListTricks`Private`level, 
           Blank[Integer]], Positive]] :> 
       ListTricks`Unpad[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         1, ListTricks`Private`level}], ListTricks`Unpad[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`level, 
            Blank[Integer]], Positive]}] :> 
       ListTricks`Unpad[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`level, ListTricks`Private`level}], 
       ListTricks`Unpad[
         Pattern[ListTricks`Private`list, 
          Blank[List]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {1, 1}] :> ListTricks`UnpadRight[
         ListTricks`UnpadLeft[
         ListTricks`Private`list, ListTricks`Private`pattern, {1, 1}], 
         ListTricks`Private`pattern, {1, 1}], ListTricks`Unpad[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], {
          PatternTest[
           Pattern[ListTricks`Private`levelmin, 
            Blank[Integer]], Positive], 
          DirectedInfinity[1]}] :> 
       ListTricks`Unpad[
        ListTricks`Private`array, ListTricks`Private`pattern, {
         ListTricks`Private`levelmin, 
          ArrayDepth[ListTricks`Private`array]}], ListTricks`Unpad[
         Pattern[ListTricks`Private`array, 
          Blank[]], 
         Pattern[ListTricks`Private`pattern, 
          Blank[]], 
         Pattern[ListTricks`Private`levelspec, {
           PatternTest[
            Pattern[ListTricks`Private`levelmin, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[ListTricks`Private`levelmax, 
             Blank[Integer]], Positive]}]] :> 
       With[{ListTricks`Private`depth = ArrayDepth[ListTricks`Private`array]}, 
         Condition[
          Apply[Take, 
           Join[{ListTricks`Private`array}, 
            ConstantArray[All, ListTricks`Private`levelmin - 1], 
            Replace[
             Take[
              Position[ListTricks`Private`array, 
               Except[ListTricks`Private`pattern], {ListTricks`Private`depth},
                Heads -> False], All, ListTricks`Private`levelspec], {{} :> 
              ConstantArray[
               0, ListTricks`Private`levelmax - ListTricks`Private`levelmin + 
                1], Pattern[ListTricks`Private`positions, 
                Blank[]] :> Map[MinMax, 
                Transpose[ListTricks`Private`positions]]}], 
            ConstantArray[
            All, ListTricks`Private`depth - ListTricks`Private`levelmax]]], 
          ListTricks`Private`levelmin <= ListTricks`Private`levelmax <= 
          ListTricks`Private`depth]]}], "SubValues" -> None, "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Unpad, {
      SyntaxInformation[ListTricks`Unpad] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Unpad"], False]]], "Output",ExpressionUUID->"806bb09d-6174-\
40eb-bd35-44246e4c376e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Unpad", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
   "}"}], "]"}]], "Input",ExpressionUUID->"af8e5556-5245-46d2-baee-\
2d3e20858a3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1"}], "}"}]], "Output",ExpressionUUID->\
"4b1f4974-51b8-4112-a1bb-a5fff61d2123"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Unpad", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "a", ",", "b", ",", "4", ",", "c", ",", "5",
      ",", "6"}], "}"}], ",", "_Integer"}], "]"}]], "Input",ExpressionUUID->\
"9608b78e-2b40-4865-9e9c-49552d428d1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "4", ",", "c"}], "}"}]], "Output",ExpressionUUID\
->"2f96f014-7dcb-4d01-bce2-3c97da491140"]
}, Open  ]],

Cell["\<\
This cellular automaton has a lot of white space on the right:\
\>", "Text",ExpressionUUID->"1243b8f9-b2e1-46ce-87c2-84b8a7a16927"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{"106", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["2", "7"], "-", "1"}], ",", "All"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",ExpressionUUID->\
"81edd898-84db-4623-8acc-cccd05d0bbcb"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzlnMtVBDEMBC0yISVCIAFSIHRgZBb1eDnXoeqxft5bj3Y+QtL06/vH2/vL
Wuvz+7Nq/UtZuKLw5E/DdR48WTX8/Njryaqhr/dz1dDn+7lq6J/7XDX00Z6r
hv3UX/e9hjVu+0v3CKjfPOBxBpQwADUCUMYA9K3/vtewb3rrvtewn/rrvtew
n/rrvtcw//23lQIudgHg2GvYNYBjr2HXAI69hl0DOPYaZvZrzIRrJn/GRLBm
7mPMg2o++o1pQHQBZB2BZpaAfOWgetQAjr2GedUL7wDZBTBeAdEFMJ4Acds3
Hn9MCAgvgJwPkAZgzAQ4AzBmApwBGDMBzgCMmQBnAMZMgDMAf6s0ACMDcAZg
ZADOAMyqKCyGIDIAZwBmWZjVghAZgDMAsy6OSmGIDMAZgNkYYLUgxEyAMwBj
JsAZgLIHYNTCnAEoewBGJcQZgGvdX0glEDET4AzAaAg5AzC7o6QSiGgIOQMw
28OgEIpoiToDMPvjnA6MmAlwBsBoGjAI2wBaDEE4B9BiCMI5gBZDEM4BtBiC
cA6gxRCEcwAthiCcA1gpDOEfQIshCP8AWgxB+AfQYgjCP4AWQxD+AbAWhPAP
gLUghH8AK4Uh/ANQJRDhHwBrQQj/AFgLQvgHwFoQwj8A1oIQ/gGwFgT7pGz6
B7BSGOxzkukfwEphCP8AVAlE+AegSiDCPwBVAhH+AaQQCvuETPoHgDow7PMR
6R9gJPwDjIR/gJHwDzAS/gFGwj/ASPgHGAn/ACNiB6FG7CDUiB2EGrGDUCN2
EGrEDkKN2EGoMXfGL8ylgAvxmwKN+E2BRvymQCN+U6CxZ8LmNwUaex5U9jTA
3BFo3OWgKnk5qNQdgcZ+BZg7Ag1+/F9ffX7F
   "], {{0, 0}, {256, 128}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"041428f1-080a-4e74-adfd-\
2dd5d74cda09"]
}, Open  ]],

Cell["Get rid of the white space:", "Text",ExpressionUUID->"1a2fcd35-dc89-454a-b849-6a310e8efed0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"UnpadRight", "[", 
    RowBox[{"CellularAutomaton", "[", 
     RowBox[{"106", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["2", "7"], "-", "1"}], ",", "All"}], "}"}]}], "]"}], 
    "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}]], "Input",ExpressionUUID->\
"84fa28b8-2bd8-47a5-befc-f0f84f8b56f0"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzF29FRxDAMhGEvndASJVwDtACdk7mLotXFvO7PHB7z5G+MYyRFfD6+vx4f
a62f4/t3/f+l2Nex1vaTFBwLbsakQFqbMSl4rngbkwKt3ZgUrO2YFOzHpGBd
h9/nSUEf/pV/EFT3wbUHIgQygRDB6wF4nycFMoEQwWvx93lSIBP0PCnocCAe
Gpyr9h8CnycFz5jgNk8KZAIhgr6IfZ4UyATAlSi/BpErUX4JIReS/ApAroOR
HaQzhVq1nz8gQNIVE9zmSUFvPHEKZnaA/BJGdoBswTj8CKBiAiRTKIHVDKg9
6JoBtQddM8DOAZUplMBqBtg5oDKFEvTInYMO1xmB3QTgfQDvAS7wYJkRCBd4
uM4IbG0yPhApsPCQjA9QgXCBhWdkfIAKLDQh4wNUYNkiGR+gAk9dGYFwgSfP
jEC4wNN3RuA/MAKk6WAI7AMJrPMAEnT9ANuDq37AnQPqzUIJun7AnQPqzUIJ
rP8AElj/ASSw/gNIIFxg/QeQQLigFyfvA/ocLGcAAus/gATWfwAJhAvgou7s
P4AEcEFz9h9AAricOPsPIIH1H0AC4QK4iDP7DyABXMCY/QeQAC4fzP4DSED8
z8IUdP2AElj/ASSw/gNI0PUDStAjJeA6kUqAPgia9QNKIFwAltFOAdeJVAIw
cT8FwgVgaHAK0D8KmvUDSsC9WSgBfCmjbxZKAF9I6JuFEsDXAZoplIB9FkUH
SGIzhRLAW4BmCiX4A6I1P8U=
   "], {{0, 0}, {129, 128}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"3c99b0dc-44e7-4cf8-90f3-\
e83360a0b8d0"]
}, Open  ]],

Cell["Shear it and get rid of the white space on both sides:", "Text",ExpressionUUID->"b5985bf7-0ca4-40e0-bf95-5aef5ca622c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Unpad", "[", 
    RowBox[{"Shear", "[", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"106", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["2", "7"], "-", "1"}], ",", "All"}], "}"}]}], "]"}], 
     "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}]], "Input",ExpressionUUID->\
"d0fc8032-dbcf-4306-a02f-761b8cebea76"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJx9lduxwjAMRC2q4JeWKIEGaIHSySREWe0DBsyOZq84sde6j9f7+bqttT7b
577+vSq8t49dK6z7t1krrNti1wrrwar6ByD6+BnVFfTx86or6ONLdQW9fm1Z
n21Z77ttdAXdj066gu5HIV1BNzLp8zFZn2SsK+j+U9IVdEvSFTQmfnj6PetX
5snfmSd/Z577z+QgMyYHmTE5yF+mDuTCb/2hjiFgft8/+EMdQ8P8rn5l3uy/
818Hovtv+wd/qEMqdf8Dv/WHOoaY+X3/4A91vADMP04B+McpAP84BeAfpwD8
co3mzKf+dArAX6YOM1/4rT/UYeYLv+8f/KEOM1/4XR1mvvBbv7vWc+YLv+8f
/O76zpkv/NYf6vYazZkv/L5/8Lv4z/kv/PTPovk55TP/3J9uMfCLfc5/4ecu
M//Kb/2hLlcR+H3/4A912Xrgd3WePMhv/e6xzORBft8/+B2+SQ7yW3+o2zZ+
c8ol5+rvXl8guQrc
   "], {{0, 0}, {24, 128}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->50,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",ExpressionUUID->"3987ef7b-28d3-446c-b37d-\
9780a0f7679e"]
}, Open  ]],

Cell["Control the level at which the unpadding is done:", "Text",ExpressionUUID->"2dee6d39-5059-4274-bbd2-b9db4ccefd08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnpadLeft", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a_", " ", ".."}], "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",ExpressionUUID->"76e577d8-df1a-\
48be-a708-eebd0316c23d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",Expression\
UUID->"3003f8ba-09ae-408a-83cb-df277826bc49"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Unriffle", "Input"]], "Subsubsection",ExpressionUUID->"c49352e5-50a3-4aa9-9589-6996d31a0f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Unriffle"}]], "Input",ExpressionUUID->"2e9b92dc-ffb8-4aee-a7e4-9753693d4d76"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Unriffle\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) lists whose MultiRiffle gives \\!\
\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unriffle\\\", \\\"[\\\", StyleBox[\
\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) unriffles \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) into two components.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Unriffle", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ListTricks`Private`m", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}]}], 
                    "]"}], ":=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", "ListTricks`Private`m"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"Unriffle", "[", 
                    RowBox[{"ListTricks`Private`list_List", ",", 
                    RowBox[{"ListTricks`Private`m", ":", 
                    RowBox[{"_Integer", "?", "Positive"}], ":", "2"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "ListTricks`Private`p", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    "ListTricks`Private`list", ",", "ListTricks`Private`m", 
                    ",", "ListTricks`Private`m", ",", "1", ",", 
                    "ListTricks`Private`p"}], "]"}], "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"ListTricks`Private`p", "\[Rule]", 
                    RowBox[{"Sequence", "[", "]"}]}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "Unriffle", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_."}], "}"}]}], "}"}]}]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ListTricks`Unriffle] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Optional[
                    Blank[]]}}}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`Unriffle\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[List[\\\"Unriffle\\\", \\\"[\\\", \
RowBox[List[StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]]], \\\"]\\\"]]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) lists whose MultiRiffle gives \\!\
\\(\\*StyleBox[\\\"list\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[List[\\\"Unriffle\\\", \\\"[\\\", StyleBox[\
\\\"list\\\", \\\"TI\\\"], \\\"]\\\"]]\\) unriffles \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) into two components.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[List[\"Unriffle\", \"[\", RowBox[List[StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"n\", \"TI\"]]], \"]\"]]\) gives a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) lists whose MultiRiffle gives \!\(\*StyleBox[\
\"list\", \"TI\"]\).\n\!\(\*RowBox[List[\"Unriffle\", \"[\", \
StyleBox[\"list\", \"TI\"], \"]\"]]\) unriffles \!\(\*StyleBox[\"list\", \"TI\
\"]\) into two components.", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ListTricks`Unriffle, {ListTricks`Unriffle[{}, 
         Optional[
          Pattern[ListTricks`Private`m, 
           PatternTest[
            Blank[Integer], Positive]], 2]] :> 
       ConstantArray[{}, ListTricks`Private`m], ListTricks`Unriffle[
         Pattern[ListTricks`Private`list, 
          Blank[List]], 
         Optional[
          Pattern[ListTricks`Private`m, 
           PatternTest[
            Blank[Integer], Positive]], 2]] :> Module[{ListTricks`Private`p}, 
         ReplaceAll[
          Transpose[
           Partition[
           ListTricks`Private`list, ListTricks`Private`m, 
            ListTricks`Private`m, 1, ListTricks`Private`p]], 
          ListTricks`Private`p -> Sequence[]]]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ListTricks`Unriffle, {
      SyntaxInformation[ListTricks`Unriffle] -> {"ArgumentsPattern" -> {
           Blank[], 
           Optional[
            Blank[]]}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`Unriffle"], False]]], "Output",ExpressionUUID->"3299dfe4-69c4-\
4bb3-9c2b-e58ca3fc75ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Unriffle", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "10", ",", "2", ",", "9", ",", "3", ",", "8", ",", "4", ",", "7",
     ",", "5", ",", "6", ",", "6", ",", "5", ",", "7", ",", "4", ",", "8", 
    ",", "3", ",", "9", ",", "2", ",", "10", ",", "1"}], "}"}], 
  "]"}]], "Input",ExpressionUUID->"9fd3339c-04b6-42d4-a3fc-bb5e88e7ccc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
     "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"ad0aeaa8-61ae-4f54-8ad2-6c14eb336a12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Unriffle", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", "7"}], "]"}]], "Input",ExpressionUU\
ID->"293fd8cc-ab20-46b8-bdf8-daac262e5f26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "11", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "12", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "13", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "14"}], "}"}]}], "}"}]], "Output",ExpressionUUID->\
"86fb833c-d2d1-4421-be77-9c0dfd1957c2"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Unriffle", "Input"],
 " is the inverse of ",
 StyleBox["MultiRiffle", "Input"],
 "."
}], "Text",ExpressionUUID->"958b76aa-628f-40ef-a28e-bc262886d305"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiRiffle", "@@", 
  RowBox[{"Unriffle", "[", 
   RowBox[{
    RowBox[{"Range", "[", "20", "]"}], ",", "7"}], "]"}]}]], "Input",Expressio\
nUUID->"de05e5c2-8600-4bdc-86c0-1969f030edb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",\
ExpressionUUID->"7263f727-5a63-4246-88e7-0187ab1fe8ad"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["$UserCloudDirectory", "Input"]], "Subsubsection",ExpressionUUID->"80ed2de5-42ca-4541-9d49-e60330934e8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "$UserCloudDirectory"}]], "Input",ExpressionUUID->"41634257-90a6-485b-9df3-b447c5aa4666"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"$UserCloudDirectory gives the user\[Hyphen]specific \
directory where the operating system keeps files stored on the cloud.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "OwnValues", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    "$UserCloudDirectory", 
                    "=", "\<\"/Users/ericrowland/Library/Mobile \
Documents/com~apple~CloudDocs\"\>"}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ListTricks`$UserCloudDirectory\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"$UserCloudDirectory gives the user\[Hyphen]specific \
directory where the operating system keeps files stored on the cloud.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "$UserCloudDirectory gives the user\[Hyphen]specific directory where the \
operating system keeps files stored on the cloud.", "Documentation" -> None, 
    "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, ListTricks`$UserCloudDirectory, {
      ListTricks`$UserCloudDirectory -> 
       "/Users/ericrowland/Library/Mobile Documents/com~apple~CloudDocs"}], 
    "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "ListTricks`$UserCloudDirectory"], False]]], "Output",ExpressionUUID->\
"7ac9dd69-6d38-404a-8a26-088160f3c4d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "$UserCloudDirectory", "]"}]], "Input",ExpressionU\
UID->"e1182777-76af-4aef-ba37-3a62d61f2cf7"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1264, 717},
WindowMargins->{{12, Automatic}, {Automatic, 2}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
CellLabelAutoDelete->True,
TrackCellChangeTimes->False,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 87, 0, 98, "Title",ExpressionUUID->"7c438206-6530-4633-a7ec-83d9559a89bd"],
Cell[657, 24, 97, 0, 53, "Subtitle",ExpressionUUID->"70993ec9-fb93-45fa-8e2b-b66b44cf6616"],
Cell[757, 26, 271, 6, 53, "Subsubtitle",ExpressionUUID->"75433290-58f5-488f-97e1-09222949c6ce"],
Cell[CellGroupData[{
Cell[1053, 36, 86, 0, 67, "Section",ExpressionUUID->"78234cc0-b5e0-41f0-bf7c-01e25a30a08e"],
Cell[1142, 38, 434, 7, 81, "Text",ExpressionUUID->"eef61d25-b272-484a-acdb-25daec421d77"],
Cell[1579, 47, 471, 11, 35, "Text",ExpressionUUID->"d40b2b82-9dcd-47fa-81a5-7da2dd0ee5a1"],
Cell[2053, 60, 109, 1, 52, "Code",ExpressionUUID->"51a07dfd-7bf3-4849-86dc-fb43cfdb3e7a"],
Cell[CellGroupData[{
Cell[2187, 65, 99, 0, 54, "Subsection",ExpressionUUID->"21d87200-ad8b-47a2-a4f0-7c627971d956"],
Cell[2289, 67, 383, 10, 58, "Text",ExpressionUUID->"1e8dc1a8-1333-4818-af5b-2a9c304ec5ea"],
Cell[CellGroupData[{
Cell[2697, 81, 792, 23, 47, "Input",ExpressionUUID->"73e9bbde-83dc-4a72-ab22-6a7e4f6bda9c"],
Cell[3492, 106, 9404, 181, 199, "Output",ExpressionUUID->"c6e04a8d-343e-4feb-90e6-01f77c6d1cac"]
}, Open  ]],
Cell[12911, 290, 268, 5, 35, "Text",ExpressionUUID->"09ebc347-ca27-4785-94f7-91f6157bda5a"],
Cell[CellGroupData[{
Cell[13204, 299, 111, 1, 30, "Input",ExpressionUUID->"e4effeab-c2d9-48cb-909b-0656719ef983"],
Cell[13318, 302, 602, 9, 34, "Output",ExpressionUUID->"205b3bdd-2218-471d-9260-d0a4d3d46336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13957, 316, 164, 4, 30, "Input",ExpressionUUID->"18858a39-3a80-4137-a979-0ac11247fc48"],
Cell[14124, 322, 280, 5, 34, "Output",ExpressionUUID->"fb377456-6eeb-48aa-b4fd-92837f2d20dd"]
}, Open  ]],
Cell[14419, 330, 155, 3, 35, "Text",ExpressionUUID->"a3d5425e-e404-48eb-b7e9-25a465121a97"],
Cell[CellGroupData[{
Cell[14599, 337, 180, 4, 30, "Input",ExpressionUUID->"211fc87d-1506-4138-b6c2-0bbac18b85f0"],
Cell[14782, 343, 705, 13, 34, "Output",ExpressionUUID->"4937773c-bfa0-4304-bfb5-9c42ab5803c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15524, 361, 148, 3, 30, "Input",ExpressionUUID->"5b65cac9-52ba-4437-9664-0c9f2c74574a"],
Cell[15675, 366, 281, 6, 34, "Output",ExpressionUUID->"3558767f-d55d-486c-b424-d518f7e75d8e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16005, 378, 84, 0, 38, "Subsection",ExpressionUUID->"a7871398-d392-426a-b21b-90a2d76cd9a7"],
Cell[16092, 380, 111, 0, 35, "Text",ExpressionUUID->"af44f1a0-d2b9-4088-9269-6cbecea0f8ae"],
Cell[16206, 382, 188, 3, 35, "Text",ExpressionUUID->"1256fd6e-0069-484f-8449-c3a37ac98b4e"],
Cell[CellGroupData[{
Cell[16419, 389, 278, 7, 30, "Input",ExpressionUUID->"e8ad88a6-9369-4cf1-a568-a675e475f03a"],
Cell[16700, 398, 150, 3, 34, "Output",ExpressionUUID->"3f0d3740-3532-46a9-af92-46f7714d08fc"]
}, Open  ]],
Cell[16865, 404, 176, 3, 35, "Text",ExpressionUUID->"462f1442-0f35-4871-a962-05240035c3ca"],
Cell[CellGroupData[{
Cell[17066, 411, 607, 15, 52, "Input",ExpressionUUID->"b7be621b-b08d-42a4-8d68-b44064e52eb8"],
Cell[17676, 428, 286, 5, 34, "Output",ExpressionUUID->"d58ac278-c78a-4e60-bddc-a0353f0dca88"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18011, 439, 91, 0, 38, "Subsection",ExpressionUUID->"fbab26af-ac75-4682-a637-479ef42b4d4b"],
Cell[18105, 441, 211, 3, 35, "Text",ExpressionUUID->"2f8478ab-9ba6-4157-9cbf-446c445b0afc"],
Cell[18319, 446, 218, 4, 35, "Text",ExpressionUUID->"3ec6033b-7622-48b6-bce6-3bf5ef3bd0de"],
Cell[CellGroupData[{
Cell[18562, 454, 196, 5, 30, "Input",ExpressionUUID->"0041e2e8-1242-4125-b681-ff647a9348a7"],
Cell[18761, 461, 533, 9, 34, "Output",ExpressionUUID->"d105b6e5-355f-45c1-b8f7-40ef1eee513d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19331, 475, 127, 1, 30, "Input",ExpressionUUID->"b7045cfd-1d08-4456-81a4-2725719a2a95"],
Cell[19461, 478, 533, 9, 34, "Output",ExpressionUUID->"ef06b0b6-6bfe-47f0-af84-ca17dd8a68e0"]
}, Open  ]],
Cell[20009, 490, 325, 5, 58, "Text",ExpressionUUID->"eb5a6c4d-a523-4029-b71f-a2b4fb32096b"],
Cell[CellGroupData[{
Cell[20359, 499, 188, 5, 30, "Input",ExpressionUUID->"9750250d-71b2-4b65-8967-9663848164e3"],
Cell[20550, 506, 1374, 35, 56, "Output",ExpressionUUID->"c75673ef-9d40-4fa1-9894-2f44c6720c92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21961, 546, 256, 7, 30, "Input",ExpressionUUID->"ae7a663a-6c34-448f-8465-552f1d914245"],
Cell[22220, 555, 584, 15, 34, "Output",ExpressionUUID->"ff1a14b1-5065-4013-80cb-6f1cb3694829"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22853, 576, 86, 0, 38, "Subsection",ExpressionUUID->"f282be1c-249e-4aa8-a6cf-f82814d92de5"],
Cell[22942, 578, 147, 2, 35, "Text",ExpressionUUID->"bb5bd02f-e494-46c9-bde8-761bc776e727"],
Cell[23092, 582, 341, 9, 35, "Text",ExpressionUUID->"bb56df11-862c-4c53-aca5-099d323ae990"],
Cell[CellGroupData[{
Cell[23458, 595, 304, 7, 38, "Input",ExpressionUUID->"f2e726b9-360c-4a66-a89b-c9bec875d7f1"],
Cell[23765, 604, 83, 0, 34, "Output",ExpressionUUID->"dbdec0a7-3eb1-4763-bf8a-637b641a4f4d"]
}, Open  ]],
Cell[23863, 607, 204, 4, 35, "Text",ExpressionUUID->"d6523f91-ee53-466a-b309-44635dc06eed"],
Cell[CellGroupData[{
Cell[24092, 615, 319, 9, 30, "Input",ExpressionUUID->"59669fa1-3c18-4fed-b0ab-d3c10c1eada0"],
Cell[24414, 626, 87, 0, 34, "Output",ExpressionUUID->"7d3aaa39-b72b-4527-9412-917ed979a860"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24538, 631, 121, 1, 30, "Input",ExpressionUUID->"78dce720-80e0-444d-9713-90bcdaf200f3"],
Cell[24662, 634, 232, 7, 34, "Output",ExpressionUUID->"4376408f-c653-424c-9cab-9ee97c47d7f4"]
}, Open  ]],
Cell[24909, 644, 475, 10, 58, "Text",ExpressionUUID->"18dfd97d-8548-4034-a61e-6e3bb081f645"],
Cell[CellGroupData[{
Cell[25409, 658, 313, 8, 30, "Input",ExpressionUUID->"ecc15c0e-0a76-4c6b-a3df-4380997cc606"],
Cell[25725, 668, 1440, 38, 77, "Output",ExpressionUUID->"a7e31f18-3854-4f29-8bce-1597ea366f07"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27214, 712, 89, 0, 38, "Subsection",ExpressionUUID->"46716cdf-7534-456d-97bd-c0c7999be602"],
Cell[27306, 714, 304, 6, 35, "Text",ExpressionUUID->"ce8f741c-954e-4e50-b8db-9adbe1077da8"],
Cell[CellGroupData[{
Cell[27635, 724, 454, 14, 30, "Input",ExpressionUUID->"664116a6-ce1d-49b9-91af-8c34d2a10410"],
Cell[28092, 740, 388, 11, 65, "Output",ExpressionUUID->"332cd88d-91a3-43a5-b390-0ac42b979d03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28517, 756, 457, 12, 33, "Input",ExpressionUUID->"36e4c70d-b3a8-499c-9348-dfeb9746fac3"],
Cell[28977, 770, 1014, 25, 145, "Output",ExpressionUUID->"224c7551-18d4-401e-ad4b-514815d81d01"]
}, Open  ]],
Cell[30006, 798, 177, 3, 35, "Text",ExpressionUUID->"034a83e3-b505-47bc-b8a1-853530d45180"],
Cell[CellGroupData[{
Cell[30208, 805, 1723, 41, 114, "Input",ExpressionUUID->"f7834980-9d92-46d8-88f6-5cbd04507ff8"],
Cell[31934, 848, 480, 6, 224, "Output",ExpressionUUID->"193f4d9b-196a-4c44-bbfe-e98ae83b4529"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32475, 861, 89, 0, 67, "Section",ExpressionUUID->"d3848e77-ac24-4812-bfc4-535ff40430b4"],
Cell[CellGroupData[{
Cell[32589, 865, 270, 7, 40, "Subsubsection",ExpressionUUID->"7d802f07-a77d-4e6b-b9d5-962e9be5a79d"],
Cell[CellGroupData[{
Cell[32884, 876, 105, 1, 30, "Input",ExpressionUUID->"8d2733b2-49ab-4afb-baf0-3998de992165"],
Cell[32992, 879, 20687, 453, 119, "Output",ExpressionUUID->"df92bb3e-9839-4e3f-a985-eba2dfbb0d73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53716, 1337, 150, 3, 30, "Input",ExpressionUUID->"96564500-a897-425f-b386-a242698b806c"],
Cell[53869, 1342, 224, 5, 34, "Output",ExpressionUUID->"83ed14b0-057b-4e18-a24e-70b08c04fee2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54130, 1352, 177, 4, 30, "Input",ExpressionUUID->"3193e646-1361-420e-8fbf-f89278b6de76"],
Cell[54310, 1358, 224, 5, 34, "Output",ExpressionUUID->"f99ff706-e15d-41f6-9104-27477eb58dac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54571, 1368, 178, 4, 30, "Input",ExpressionUUID->"aea499d1-6c85-4bcc-b0f7-c2b1db10b671"],
Cell[54752, 1374, 240, 5, 34, "Output",ExpressionUUID->"d99f87a1-6fea-43c2-ac5e-1c4dcec1ad37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55029, 1384, 176, 4, 30, "Input",ExpressionUUID->"9c021e74-8828-46b0-a4b7-91bfbc099a98"],
Cell[55208, 1390, 230, 5, 34, "Output",ExpressionUUID->"9d375892-fdb7-466c-8574-b205ccf7c750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55475, 1400, 177, 4, 30, "Input",ExpressionUUID->"21db99aa-43e7-4de3-ab63-03ac3bb8167b"],
Cell[55655, 1406, 1078, 30, 56, "Output",ExpressionUUID->"afdf643b-b4d2-4760-bf1d-5e66f7bdf195"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56770, 1441, 206, 5, 30, "Input",ExpressionUUID->"bad8f126-cf0c-4d87-b9e4-62e31baf1c59"],
Cell[56979, 1448, 1078, 30, 56, "Output",ExpressionUUID->"6e39fde4-4a3f-4a51-b012-9033ea59d76b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58094, 1483, 182, 4, 30, "Input",ExpressionUUID->"e5b8c682-963e-4293-b168-b85ea2ff7a72"],
Cell[58279, 1489, 218, 5, 34, "Output",ExpressionUUID->"e7f8f3ca-43a9-49cc-831b-5842b2f3d965"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58534, 1499, 145, 3, 30, "Input",ExpressionUUID->"07c134fe-4b7e-4551-bc6b-51bffe841d8c"],
Cell[58682, 1504, 218, 5, 34, "Output",ExpressionUUID->"c872d038-53b5-4bf6-b10d-b4f31aeda44e"]
}, Open  ]],
Cell[58915, 1512, 116, 1, 30, "Input",ExpressionUUID->"b0a6c085-e598-4348-9dd1-4e63cf51c4e2"],
Cell[CellGroupData[{
Cell[59056, 1517, 174, 4, 30, "Input",ExpressionUUID->"25155634-5384-4f81-8e0c-78780f833b3f"],
Cell[59233, 1523, 1128, 30, 56, "Output",ExpressionUUID->"6e13524c-8743-4d3a-93f1-323c7286da2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60398, 1558, 181, 4, 30, "Input",ExpressionUUID->"1016b74d-6de0-4d7a-a35d-28d71aeb5468"],
Cell[60582, 1564, 692, 11, 56, "Output",ExpressionUUID->"ca74c651-39e8-4877-b213-1393c1d0da9a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61323, 1581, 124, 0, 29, "Subsubsection",ExpressionUUID->"55d736bd-c8eb-45bf-b58a-3eb4af01f4eb"],
Cell[CellGroupData[{
Cell[61472, 1585, 113, 1, 30, "Input",ExpressionUUID->"75de8a2e-a861-4b9e-b228-7123cecb6e3e"],
Cell[61588, 1588, 13554, 319, 95, "Output",ExpressionUUID->"5aacb28f-939c-4bad-bdec-313f95d5f39c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75179, 1912, 286, 7, 30, "Input",ExpressionUUID->"4a634125-03b9-4805-8159-04761a05ed29"],
Cell[75468, 1921, 83, 0, 34, "Output",ExpressionUUID->"3d1cdb4e-e52c-4995-97d6-d134a5d5a96c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75588, 1926, 239, 5, 30, "Input",ExpressionUUID->"63ccc9e8-43d1-4036-837f-6c8a68de4209"],
Cell[75830, 1933, 83, 0, 34, "Output",ExpressionUUID->"9a7e5fca-7ef8-444a-9c1d-0769b21baa5f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75962, 1939, 117, 0, 29, "Subsubsection",ExpressionUUID->"3499c31a-8dd4-41ab-b1f4-5e849e68b8d0"],
Cell[CellGroupData[{
Cell[76104, 1943, 106, 1, 30, "Input",ExpressionUUID->"b91ee513-a9ce-4d3c-9ad4-0449ec6c814d"],
Cell[76213, 1946, 17390, 396, 119, "Output",ExpressionUUID->"64a9988b-89f7-409c-98f6-6b99b0ef7eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93640, 2347, 365, 10, 30, "Input",ExpressionUUID->"659a5408-5971-4d41-a285-365d3e0f098b"],
Cell[94008, 2359, 429, 11, 117, "Output",ExpressionUUID->"79c183fc-93b2-4feb-a2e0-f00b78ac5af4"]
}, Open  ]],
Cell[94452, 2373, 130, 0, 35, "Text",ExpressionUUID->"b1935520-47c2-49ad-855f-8ed69c96b6e1"],
Cell[CellGroupData[{
Cell[94607, 2377, 486, 13, 30, "Input",ExpressionUUID->"e6b856ba-63ff-49c5-9051-632259b06546"],
Cell[95096, 2392, 429, 11, 117, "Output",ExpressionUUID->"8f5e21ed-6252-4a8d-ae2a-8aa1ecc24fcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95562, 2408, 787, 22, 30, "Input",ExpressionUUID->"c100c23b-6efc-47ca-85a0-253b79f74611"],
Cell[96352, 2432, 565, 19, 55, "Output",ExpressionUUID->"28158391-4a28-4de7-95b9-ffe0626ab3a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96954, 2456, 787, 22, 30, "Input",ExpressionUUID->"fc2ea69b-7b2f-4a90-94ed-6145a69bdc81"],
Cell[97744, 2480, 571, 20, 75, "Output",ExpressionUUID->"77482d41-f9a8-4915-8491-3e516fa54042"]
}, Open  ]],
Cell[98330, 2503, 173, 4, 35, "Text",ExpressionUUID->"eabfd978-662f-48ca-bc61-4d6239331ca5"],
Cell[CellGroupData[{
Cell[98528, 2511, 756, 21, 30, "Input",ExpressionUUID->"b9eaa80a-610f-4d85-8317-6ecf39d6f95e"],
Cell[99287, 2534, 725, 20, 34, "Output",ExpressionUUID->"87aac3a8-80bf-4c68-ace7-02495572de60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100049, 2559, 804, 23, 30, "Input",ExpressionUUID->"c94b546f-74b3-40f9-8fbd-3b6e96ffd988"],
Cell[100856, 2584, 540, 14, 34, "Output",ExpressionUUID->"fd574b50-1d4b-4c1d-8eaa-85ed97fb1fa9"]
}, Open  ]],
Cell[101411, 2601, 201, 6, 35, "Text",ExpressionUUID->"e6f92be6-8571-4641-bae9-b8b1bbbaf87f"],
Cell[CellGroupData[{
Cell[101637, 2611, 964, 27, 52, "Input",ExpressionUUID->"31fb2dd5-ef58-443e-9a40-eed7e588cb9c"],
Cell[102604, 2640, 429, 11, 117, "Output",ExpressionUUID->"14edcc20-1d7e-4559-bfe4-45405cd99eb9"],
Cell[103036, 2653, 429, 11, 117, "Output",ExpressionUUID->"25a8a92f-fb20-4ea7-9de6-81f3434314e5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103514, 2670, 264, 7, 32, "Subsubsection",ExpressionUUID->"2e87d494-96b9-4f7e-bcbd-3312795c96a1"],
Cell[CellGroupData[{
Cell[103803, 2681, 107, 1, 30, "Input",ExpressionUUID->"8f56c036-6502-4d42-8053-9d37ad5dc4da"],
Cell[103913, 2684, 16413, 377, 119, "Output",ExpressionUUID->"d7af5ea2-857b-412e-b652-ed7b600cb235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120363, 3066, 370, 11, 30, "Input",ExpressionUUID->"54892767-9ffe-4acb-9a77-378206f4ba61"],
Cell[120736, 3079, 454, 14, 34, "Output",ExpressionUUID->"417e3058-42ea-4779-bdcd-8579efa322b0"]
}, Open  ]],
Cell[121205, 3096, 142, 2, 35, "Text",ExpressionUUID->"ab8454ac-7825-4d63-b0aa-ff4942532ffb"],
Cell[CellGroupData[{
Cell[121372, 3102, 654, 19, 47, "Input",ExpressionUUID->"63c3d161-bb74-4bca-999f-4cf61cb74bda"],
Cell[122029, 3123, 1517, 55, 51, "Output",ExpressionUUID->"4b6f9113-bee3-4acc-8df1-d0af27b792f3"]
}, Open  ]],
Cell[123561, 3181, 94, 0, 35, "Text",ExpressionUUID->"34fc7ddd-d816-4d27-819a-64f01ab3bceb"],
Cell[CellGroupData[{
Cell[123680, 3185, 701, 19, 52, "Input",ExpressionUUID->"7010220b-7d5a-40d0-b839-837b05001e07"],
Cell[124384, 3206, 733, 15, 185, "Output",ExpressionUUID->"a52303b3-c6e7-4386-8c1e-7e959fc074fa"]
}, Open  ]],
Cell[125132, 3224, 272, 7, 35, "Text",ExpressionUUID->"5a3734ba-f665-4365-8b66-fa2f259d8503"],
Cell[CellGroupData[{
Cell[125429, 3235, 146, 3, 30, "Input",ExpressionUUID->"7799e9aa-8a7d-4a68-89f1-11fb325bf001"],
Cell[125578, 3240, 1801, 53, 56, "Output",ExpressionUUID->"cb528612-30e6-4943-aa9c-298db4ebb6dc"]
}, Open  ]],
Cell[127394, 3296, 588, 15, 58, "Text",ExpressionUUID->"5a6a90cb-99ec-499c-a8e0-ec11bc3e6a33"],
Cell[CellGroupData[{
Cell[128007, 3315, 226, 5, 30, "Input",ExpressionUUID->"29b6e74d-2e8c-42ba-9f54-fbcf596f81fe"],
Cell[128236, 3322, 1404, 44, 56, "Output",ExpressionUUID->"655d409f-36ba-4336-b543-62e791c03876"]
}, Open  ]],
Cell[129655, 3369, 175, 4, 35, "Text",ExpressionUUID->"8db3e7d6-5c54-4fcf-a89a-2b0e2f9d8e3b"],
Cell[CellGroupData[{
Cell[129855, 3377, 199, 4, 30, "Input",ExpressionUUID->"08299cf1-1eb5-4138-882e-716887f03b2e"],
Cell[130057, 3383, 1382, 44, 56, "Output",ExpressionUUID->"c34a128d-f1c6-422b-9a4e-a45d7acd07e2"]
}, Open  ]],
Cell[131454, 3430, 117, 1, 30, "Input",ExpressionUUID->"6dfa8556-fe9c-4fec-8c9e-8580544811f8"]
}, Closed]],
Cell[CellGroupData[{
Cell[131608, 3436, 274, 7, 32, "Subsubsection",ExpressionUUID->"dc1f014e-a5d1-4d22-9322-25b4a1721eb8"],
Cell[CellGroupData[{
Cell[131907, 3447, 108, 1, 30, "Input",ExpressionUUID->"b4d2e78a-c7b3-4d20-b165-df5c26d9bccf"],
Cell[132018, 3450, 26311, 588, 143, "Output",ExpressionUUID->"93db99e8-a51b-4b61-83e0-9ad0e9f87725"]
}, Open  ]],
Cell[158344, 4041, 130, 0, 35, "Text",ExpressionUUID->"62c37217-2f8c-4b59-a887-152d22878828"],
Cell[CellGroupData[{
Cell[158499, 4045, 391, 11, 30, "Input",ExpressionUUID->"b869c001-370b-4c68-a457-77f24fcc5a1b"],
Cell[158893, 4058, 1522, 28, 185, "Output",ExpressionUUID->"b27be6c6-2479-4747-a16e-528062a3ecae"]
}, Open  ]],
Cell[160430, 4089, 118, 0, 35, "Text",ExpressionUUID->"b7a8cf45-79a1-4ffe-a96e-6f2d0c46daf5"],
Cell[CellGroupData[{
Cell[160573, 4093, 623, 18, 30, "Input",ExpressionUUID->"07e143aa-3c66-460b-b937-be9dd6b7877e"],
Cell[161199, 4113, 1772, 36, 277, "Output",ExpressionUUID->"b65b764a-476d-4d49-a5f9-e241efbe7f5f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[163020, 4155, 120, 0, 29, "Subsubsection",ExpressionUUID->"e1c52490-8259-4279-b697-3f121e4a41f7"],
Cell[CellGroupData[{
Cell[163165, 4159, 109, 1, 30, "Input",ExpressionUUID->"083c50f0-cd4c-4bd2-ac4a-87b742a63ad2"],
Cell[163277, 4162, 19757, 403, 119, "Output",ExpressionUUID->"64789bae-0b28-41dd-a916-a37e22fb0ee3"]
}, Open  ]],
Cell[183049, 4568, 199, 3, 35, "Text",ExpressionUUID->"4570f8c0-bcae-49f2-bad6-a94a62b453b3"],
Cell[CellGroupData[{
Cell[183273, 4575, 262, 7, 30, "Input",ExpressionUUID->"d007629d-c710-4beb-a7b1-81eb8a469ffe"],
Cell[183538, 4584, 230, 7, 34, "Output",ExpressionUUID->"530e56ad-ae1d-4936-af8c-ebd6d93301d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183805, 4596, 673, 21, 30, "Input",ExpressionUUID->"c76e2e62-b014-4447-b918-b362c2c8ad78"],
Cell[184481, 4619, 1987, 40, 177, "Output",ExpressionUUID->"fe098924-637d-4062-82fe-2593a9c5861d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[186517, 4665, 212, 5, 32, "Subsubsection",ExpressionUUID->"58870be6-fa46-4231-b5c5-2be64ac0bd82"],
Cell[CellGroupData[{
Cell[186754, 4674, 106, 1, 30, "Input",ExpressionUUID->"b24a0505-b0ed-41ec-85ce-54f77877efcb"],
Cell[186863, 4677, 20603, 448, 119, "Output",ExpressionUUID->"c2004668-54ac-40a5-a5bf-3cc064a4bd0b"]
}, Open  ]],
Cell[207481, 5128, 83, 0, 35, "Text",ExpressionUUID->"9485baef-392a-4c58-93e3-81f456f89f16"],
Cell[CellGroupData[{
Cell[207589, 5132, 225, 6, 30, "Input",ExpressionUUID->"e40d4379-259b-49bf-8db7-b866b3dd240e"],
Cell[207817, 5140, 246, 7, 34, "Output",ExpressionUUID->"e9da16e3-06e7-49ce-8839-ff4b0d672429"]
}, Open  ]],
Cell[208078, 5150, 108, 0, 35, "Text",ExpressionUUID->"dbd4391e-c4fb-4070-8729-3e403627404d"],
Cell[CellGroupData[{
Cell[208211, 5154, 914, 28, 30, "Input",ExpressionUUID->"db62beda-d60f-40df-b5c3-416981f8e4d2"],
Cell[209128, 5184, 156, 4, 34, "Output",ExpressionUUID->"2e4d0d15-087b-4254-8223-808f3d55ff1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209321, 5193, 113, 1, 30, "Input",ExpressionUUID->"bb6bb5e0-464a-4a90-8696-9f6c353032e8"],
Cell[209437, 5196, 20846, 452, 119, "Output",ExpressionUUID->"2e673cd8-8ba8-4d8d-bbbf-cac1f3f8051f"]
}, Open  ]],
Cell[230298, 5651, 309, 7, 35, "Text",ExpressionUUID->"90e071cb-4c26-4b96-90be-29f30e56ae13"],
Cell[CellGroupData[{
Cell[230632, 5662, 232, 6, 30, "Input",ExpressionUUID->"7a1cbef6-86c2-45a4-a979-1f2687eaef36"],
Cell[230867, 5670, 100, 1, 34, "Output",ExpressionUUID->"4b4f4b71-c2cf-4056-b6ae-8d6a694e048c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231004, 5676, 232, 6, 30, "Input",ExpressionUUID->"0d786325-5a3f-4049-8f10-13b60b09aa50"],
Cell[231239, 5684, 315, 9, 34, "Output",ExpressionUUID->"a944cde3-558e-4aef-aa2e-82a9f3c53d40"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[231603, 5699, 127, 0, 29, "Subsubsection",ExpressionUUID->"20a45048-58ee-4bad-8c71-3aeb8b91772c"],
Cell[CellGroupData[{
Cell[231755, 5703, 116, 1, 30, "Input",ExpressionUUID->"aba40118-c697-4ba7-950c-acb9fdd9a1a2"],
Cell[231874, 5706, 13971, 329, 119, "Output",ExpressionUUID->"9489e603-ef2d-42e8-b477-82b8c6c15e57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245882, 6040, 208, 5, 30, "Input",ExpressionUUID->"aa2716e9-064d-4d9d-a336-011d5fb6b3d8"],
Cell[246093, 6047, 298, 5, 34, "Output",ExpressionUUID->"7e6074bd-cbd5-4f87-946c-dc6fd2373919"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246428, 6057, 132, 1, 30, "Input",ExpressionUUID->"56f57490-5689-41b3-b6bf-09fcb5b7ea65"],
Cell[246563, 6060, 91, 0, 34, "Output",ExpressionUUID->"d90aa707-8967-4f09-8881-ff09da8a9e30"]
}, Open  ]],
Cell[246669, 6063, 119, 1, 30, "Input",ExpressionUUID->"7459b746-ae54-4b55-9926-3b8f9cd3a69c"],
Cell[246791, 6066, 231, 5, 35, "Text",ExpressionUUID->"5fa1bb35-cda4-472a-a9f8-4bba19274358"],
Cell[247025, 6073, 226, 6, 33, "Input",ExpressionUUID->"db3db579-7302-4044-91b8-73b612ebfe45"],
Cell[CellGroupData[{
Cell[247276, 6083, 276, 7, 30, "Input",ExpressionUUID->"7081dc53-eea3-4d1a-b4ef-324117d8441f"],
Cell[247555, 6092, 141, 3, 34, "Output",ExpressionUUID->"c0ac46e0-ae34-40f4-8c02-c078be9938e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247733, 6100, 255, 6, 30, "Input",ExpressionUUID->"2abb6bc2-167f-47d3-86f6-81727e315199"],
Cell[247991, 6108, 141, 3, 34, "Output",ExpressionUUID->"b6aa58a0-d632-4d8d-94b5-6ed2e108dbdd"]
}, Open  ]],
Cell[248147, 6114, 116, 1, 30, "Input",ExpressionUUID->"4e58f7a3-d656-4534-9a8a-095add1ab8c8"]
}, Closed]],
Cell[CellGroupData[{
Cell[248300, 6120, 128, 0, 29, "Subsubsection",ExpressionUUID->"5ff0b908-6bdc-4f20-b90c-3ab67228612a"],
Cell[CellGroupData[{
Cell[248453, 6124, 117, 1, 30, "Input",ExpressionUUID->"223d981d-0986-4cd4-83f5-6ccf5a9bf1c3"],
Cell[248573, 6127, 15236, 354, 119, "Output",ExpressionUUID->"11035dae-ad18-4690-9391-197f4f6b09de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263846, 6486, 230, 5, 30, "Input",ExpressionUUID->"c59cf6f4-e196-482f-b9ad-8898aaec1348"],
Cell[264079, 6493, 181, 3, 34, "Output",ExpressionUUID->"8588e353-245e-4885-b100-e641083bf91d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264297, 6501, 148, 3, 30, "Input",ExpressionUUID->"7623bab7-2447-47e9-9d1a-84b931559554"],
Cell[264448, 6506, 1165, 17, 56, "Output",ExpressionUUID->"edac68ba-a98b-4e5d-bc1a-597740058816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265650, 6528, 127, 1, 30, "Input",ExpressionUUID->"45ec664e-9e2c-466b-99c2-4341eab07f96"],
Cell[265780, 6531, 1165, 17, 56, "Output",ExpressionUUID->"717dbac5-4ab4-41b3-956e-e929941cb479"]
}, Open  ]],
Cell[266960, 6551, 230, 5, 35, "Text",ExpressionUUID->"1c1e9990-3731-48ae-b055-484e3b89deb1"],
Cell[CellGroupData[{
Cell[267215, 6560, 514, 13, 52, "Input",ExpressionUUID->"d60e32fb-e9dc-4dbf-8ed6-30070561ca3a"],
Cell[267732, 6575, 181, 3, 34, "Output",ExpressionUUID->"515e4a11-aa59-4419-9fb4-2f4fce29dd3b"],
Cell[267916, 6580, 181, 3, 34, "Output",ExpressionUUID->"0604c296-bc50-4d45-b649-77d5ba3297d1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[268146, 6589, 125, 0, 29, "Subsubsection",ExpressionUUID->"57b0b35e-1bc5-499d-8696-157b031516a2"],
Cell[CellGroupData[{
Cell[268296, 6593, 114, 1, 30, "Input",ExpressionUUID->"9ae05083-54d7-4f3b-9975-a3c4c7272612"],
Cell[268413, 6596, 16054, 375, 119, "Output",ExpressionUUID->"d55fb113-1153-4052-b82c-1d33dadb2b38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284504, 6976, 188, 4, 30, "Input",ExpressionUUID->"73700b4b-bdf0-4bbd-bb07-65498a6ae959"],
Cell[284695, 6982, 289, 7, 34, "Output",ExpressionUUID->"e2853606-13bb-45f4-8877-fa98747a22a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285021, 6994, 205, 5, 30, "Input",ExpressionUUID->"6e8a2675-12b8-4f38-83ac-fcf8ce9c6786"],
Cell[285229, 7001, 212, 5, 34, "Output",ExpressionUUID->"b2de9560-d3ac-4332-9dbc-6612db96a5f9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[285490, 7012, 258, 4, 29, "Subsubsection",ExpressionUUID->"a9b031e1-ac4b-4e9f-9251-f17bc6516abb"],
Cell[CellGroupData[{
Cell[285773, 7020, 112, 1, 30, "Input",ExpressionUUID->"697bdad6-49ff-4bb4-8c00-c82b706e46bc"],
Cell[285888, 7023, 12569, 301, 95, "Output",ExpressionUUID->"b7a824c8-9de7-479f-a838-42712f1f5e9a"]
}, Open  ]],
Cell[298472, 7327, 178, 3, 35, "Text",ExpressionUUID->"ce8c709a-46eb-4e74-b1e0-4ba95919e866"],
Cell[CellGroupData[{
Cell[298675, 7334, 411, 12, 30, "Input",ExpressionUUID->"b2f021bf-f1e5-4fde-aac0-456efee2cbfe"],
Cell[299089, 7348, 896, 28, 34, "Output",ExpressionUUID->"6d3d9b80-253d-4eaa-8dcf-95492854df28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300022, 7381, 305, 8, 30, "Input",ExpressionUUID->"d0c5fa4c-71fd-4eb1-a444-c5e1920f2ad0"],
Cell[300330, 7391, 158, 2, 34, "Output",ExpressionUUID->"969d929e-f949-4b9a-acbd-46842e140f38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300525, 7398, 153, 3, 30, "Input",ExpressionUUID->"00e9aa61-8a19-44b2-8ac3-2a5351d2479e"],
Cell[300681, 7403, 360, 5, 476, "Output",ExpressionUUID->"5a21a322-560b-4ef8-97ca-7e27b07de196"]
}, Open  ]],
Cell[301056, 7411, 121, 1, 30, "Input",ExpressionUUID->"11c6406b-0fa9-4986-8dab-b76aee66554c"],
Cell[301180, 7414, 116, 1, 30, "Input",ExpressionUUID->"c8f3fd64-9287-421f-a2f3-900f2b414297"]
}, Closed]],
Cell[CellGroupData[{
Cell[301333, 7420, 266, 7, 32, "Subsubsection",ExpressionUUID->"e77d03de-e3aa-4294-8666-8239d93806b7"],
Cell[CellGroupData[{
Cell[301624, 7431, 110, 1, 30, "Input",ExpressionUUID->"eb1b29c9-1d09-43b8-a1a4-bac5b25561b8"],
Cell[301737, 7434, 12584, 304, 95, "Output",ExpressionUUID->"f6c2b785-1c02-4ac4-814e-6fa7d7b20467"]
}, Open  ]],
Cell[314336, 7741, 102, 0, 35, "Text",ExpressionUUID->"765ab859-142b-45a8-b6d6-1754d138c15e"],
Cell[CellGroupData[{
Cell[314463, 7745, 104, 1, 30, "Input",ExpressionUUID->"8b7ecded-c9e6-4a9f-8738-1b52b2394295"],
Cell[314570, 7748, 83, 0, 34, "Output",ExpressionUUID->"446c2662-d885-4e06-b2c3-8e443a8ffc0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314690, 7753, 115, 1, 30, "Input",ExpressionUUID->"2bb276a3-7779-4887-b3c2-ecfb4620e9c5"],
Cell[314808, 7756, 146, 3, 34, "Output",ExpressionUUID->"e54b81f8-5d6d-47c4-a17d-eb25580ef522"]
}, Open  ]],
Cell[314969, 7762, 210, 4, 35, "Text",ExpressionUUID->"d17f359f-4413-4485-a3e9-50b286a5d86a"],
Cell[CellGroupData[{
Cell[315204, 7770, 286, 6, 52, "Input",ExpressionUUID->"6b13b5e6-4e0a-4b00-ad39-528c91e5e7db"],
Cell[315493, 7778, 131, 0, 34, "Output",ExpressionUUID->"6a691f5b-d7b7-44f2-8fdd-5de0c110a03c"],
Cell[315627, 7780, 146, 3, 34, "Output",ExpressionUUID->"68509a8a-e567-4efa-bdfc-e79e100f9e76"]
}, Open  ]],
Cell[315788, 7786, 105, 0, 35, "Text",ExpressionUUID->"9eab1cc6-dff0-4fbc-9db6-8746a39c5da0"],
Cell[CellGroupData[{
Cell[315918, 7790, 315, 10, 43, "Input",ExpressionUUID->"0e18123c-3d84-430d-aed7-6e88e34bb487"],
Cell[316236, 7802, 316, 10, 47, "Output",ExpressionUUID->"336716f6-f3be-4663-afc7-795bec6517a8"]
}, Open  ]],
Cell[316567, 7815, 225, 6, 35, "Text",ExpressionUUID->"d5a7719c-391d-4939-bd88-54f1cbbe5282"],
Cell[CellGroupData[{
Cell[316817, 7825, 111, 1, 30, "Input",ExpressionUUID->"74d3cc4b-69dd-49d1-ada0-aca8dfbe5650"],
Cell[316931, 7828, 418, 5, 56, "Output",ExpressionUUID->"fa7815c3-df37-4a6c-b43d-0dcac3c6934f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317386, 7838, 140, 3, 30, "Input",ExpressionUUID->"d353d7d9-585c-4cce-a37d-7b6427da1531"],
Cell[317529, 7843, 363, 11, 47, "Output",ExpressionUUID->"50ee0779-f50b-40f4-94cc-1e2b95f55546"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[317941, 7860, 128, 0, 29, "Subsubsection",ExpressionUUID->"717a04a8-fabc-49db-aa18-11cb3b31898f"],
Cell[CellGroupData[{
Cell[318094, 7864, 117, 1, 30, "Input",ExpressionUUID->"eab58ac3-1106-4b3d-9968-71ae41a1e19e"],
Cell[318214, 7867, 17085, 401, 143, "Output",ExpressionUUID->"6522745c-ae99-4099-a54f-65accba167e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335336, 8273, 127, 1, 30, "Input",ExpressionUUID->"9ce4de2d-66c4-482f-b2d7-7b93b004e3f6"],
Cell[335466, 8276, 1200, 34, 56, "Output",ExpressionUUID->"b4e05aa3-4c09-4cc6-a81e-207ab19e7631"]
}, Open  ]],
Cell[336681, 8313, 176, 3, 35, "Text",ExpressionUUID->"44a52710-fd7c-439b-a424-7e5ca555be62"],
Cell[CellGroupData[{
Cell[336882, 8320, 312, 6, 52, "Input",ExpressionUUID->"38d8e361-9e4b-4a71-8d8b-8ba28a6508f5"],
Cell[337197, 8328, 569, 16, 34, "Output",ExpressionUUID->"b0753ad7-3317-4242-ad9a-7183c5f68bb8"],
Cell[337769, 8346, 86, 0, 34, "Output",ExpressionUUID->"7ac48274-e33c-4833-a9a8-b3f954eb8991"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[337904, 8352, 118, 0, 29, "Subsubsection",ExpressionUUID->"fe178ebf-da31-43c0-a5c8-0a099e4aeaab"],
Cell[CellGroupData[{
Cell[338047, 8356, 107, 1, 30, "Input",ExpressionUUID->"4729bab2-4b94-49dc-83fb-f0a6275c54cc"],
Cell[338157, 8359, 15368, 343, 95, "Output",ExpressionUUID->"91cb96f3-0c6d-426c-b212-afa2f2e998a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353562, 8707, 260, 7, 30, "Input",ExpressionUUID->"ca2151d3-69f8-4300-8c53-640f359cb1ab"],
Cell[353825, 8716, 227, 6, 34, "Output",ExpressionUUID->"cb9b535f-6491-432b-8f2e-20d1642c50c7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[354101, 8728, 116, 0, 29, "Subsubsection",ExpressionUUID->"4f444c0a-820e-493d-bc63-43ef66d52435"],
Cell[CellGroupData[{
Cell[354242, 8732, 105, 1, 30, "Input",ExpressionUUID->"87b24e11-2e62-46cb-80e5-31ccc8c28ce4"],
Cell[354350, 8735, 12964, 309, 95, "Output",ExpressionUUID->"ce5e3323-f557-4983-8c60-d9bfc98c88f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367351, 9049, 217, 6, 30, "Input",ExpressionUUID->"340353ee-a807-4f05-8e27-37d3f15ad16c"],
Cell[367571, 9057, 426, 11, 34, "Output",ExpressionUUID->"b3959b68-f2b8-4cc6-83e5-268dc57ec04e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368034, 9073, 283, 8, 30, "Input",ExpressionUUID->"034b047c-4e1e-4187-a0bd-57b90e1ed093"],
Cell[368320, 9083, 950, 31, 34, "Output",ExpressionUUID->"4d5fc00d-8ed3-49e3-9925-75693c8ed8eb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[369319, 9120, 120, 0, 29, "Subsubsection",ExpressionUUID->"dc9e3f4b-8fe6-4d0f-9f20-a333c2029666"],
Cell[CellGroupData[{
Cell[369464, 9124, 109, 1, 30, "Input",ExpressionUUID->"bfe9b679-b93d-4f3e-b3f0-d37a887bfa7e"],
Cell[369576, 9127, 12461, 298, 95, "Output",ExpressionUUID->"0ca6f4b4-8191-4877-a249-ffaa26df1cd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382074, 9430, 221, 5, 30, "Input",ExpressionUUID->"9b6fe5dc-cb8f-4e19-a0cb-62c9568e2bd7"],
Cell[382298, 9437, 83, 0, 34, "Output",ExpressionUUID->"92b6ac94-2c64-46b2-97c8-b537891eb9b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[382430, 9443, 129, 0, 29, "Subsubsection",ExpressionUUID->"01a88e66-9a42-4fe2-8ed6-1c0da7a73554"],
Cell[CellGroupData[{
Cell[382584, 9447, 118, 1, 30, "Input",ExpressionUUID->"d7ed723f-8c23-4ecc-b881-cb7d2ac67d08"],
Cell[382705, 9450, 27779, 625, 119, "Output",ExpressionUUID->"220782ee-5726-4a7a-b478-5257d8a138ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410521, 10080, 558, 16, 33, "Input",ExpressionUUID->"614ef625-9c2b-4b13-b57c-160f26ef4b02"],
Cell[411082, 10098, 19642, 329, 449, "Output",ExpressionUUID->"cc4665b7-a7a4-40bc-b52f-2c119284b8e4"]
}, Open  ]],
Cell[430739, 10430, 108, 0, 35, "Text",ExpressionUUID->"5bb10c2b-3d5d-432d-99ad-236e904732f2"],
Cell[CellGroupData[{
Cell[430872, 10434, 689, 19, 33, "Input",ExpressionUUID->"2a09f609-7497-478f-b1c4-f71ddc5b168c"],
Cell[431564, 10455, 50997, 843, 215, "Output",ExpressionUUID->"ed089353-9acd-40ce-967a-6643f9102825"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[482610, 11304, 270, 7, 32, "Subsubsection",ExpressionUUID->"31f62c06-3031-4c20-9ece-d883eb2dd20d"],
Cell[CellGroupData[{
Cell[482905, 11315, 109, 1, 30, "Input",ExpressionUUID->"e8b9efc0-4801-49fb-bebe-a994a89cf4af"],
Cell[483017, 11318, 17470, 375, 95, "Output",ExpressionUUID->"18288afd-0035-430b-b960-c795f186627a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500524, 11698, 362, 9, 30, "Input",ExpressionUUID->"f79a0c07-98aa-4987-8511-839fbd4d8fe2"],
Cell[500889, 11709, 237, 5, 34, "Output",ExpressionUUID->"d7121bf6-c3ec-40eb-824a-665090002d24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501163, 11719, 399, 11, 30, "Input",ExpressionUUID->"b94fd124-f21f-499c-b397-0098432ff726"],
Cell[501565, 11732, 205, 5, 34, "Output",ExpressionUUID->"2d078a62-7e9e-4dd7-8157-6d9c75845a4f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[501819, 11743, 126, 0, 29, "Subsubsection",ExpressionUUID->"a26616b9-2b5d-49f2-bde5-7fb6bdaceceb"],
Cell[CellGroupData[{
Cell[501970, 11747, 115, 1, 30, "Input",ExpressionUUID->"6d17e5c9-e446-4328-b623-1304e8231947"],
Cell[502088, 11750, 28166, 628, 119, "Output",ExpressionUUID->"90ca1df6-a8ef-4134-a746-e84004d34a51"]
}, Open  ]],
Cell[530269, 12381, 105, 0, 35, "Text",ExpressionUUID->"775d39a9-688d-464f-8d8c-878ed8d1ff1d"],
Cell[CellGroupData[{
Cell[530399, 12385, 342, 9, 33, "Input",ExpressionUUID->"8d40abf3-524b-4c02-b5e6-387ab4687ef9"],
Cell[530744, 12396, 845, 21, 37, "Output",ExpressionUUID->"99c2fe65-2a4d-4b54-9d50-ff08fae29d5a"]
}, Open  ]],
Cell[531604, 12420, 98, 0, 35, "Text",ExpressionUUID->"c74b4b25-58be-4fdd-b85c-a56f675b9efb"],
Cell[CellGroupData[{
Cell[531727, 12424, 380, 10, 33, "Input",ExpressionUUID->"c45fe77c-bf9b-4324-8a53-7664472be881"],
Cell[532110, 12436, 915, 22, 307, "Output",ExpressionUUID->"dcf0c1b5-e4d0-41d1-9444-241933ff7f93"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[533074, 12464, 127, 0, 29, "Subsubsection",ExpressionUUID->"974fda74-231d-4025-a8de-91e28bfaf96a"],
Cell[CellGroupData[{
Cell[533226, 12468, 116, 1, 30, "Input",ExpressionUUID->"1e0e8248-31ec-4bd8-a5bd-75d754d9e294"],
Cell[533345, 12471, 12999, 308, 95, "Output",ExpressionUUID->"d45b107b-7bb8-4fb8-a7cb-4c02c6ec7ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546381, 12784, 324, 8, 30, "Input",ExpressionUUID->"ad8e7a9a-056f-4464-943a-d6648347a8cc"],
Cell[546708, 12794, 128, 2, 34, "Output",ExpressionUUID->"c44a92a1-aa97-4d30-969d-95e6ed794050"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[546885, 12802, 262, 7, 32, "Subsubsection",ExpressionUUID->"531caa77-1e68-46ed-841f-b10d8ece1bf1"],
Cell[CellGroupData[{
Cell[547172, 12813, 107, 1, 30, "Input",ExpressionUUID->"f85396db-9c55-49a0-bf20-92c44fb00df5"],
Cell[547282, 12816, 26809, 595, 143, "Output",ExpressionUUID->"fbef5115-3273-47f5-9682-8bfdc765f836"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574128, 13416, 201, 5, 30, "Input",ExpressionUUID->"f69eac06-c61a-428b-b15a-5ca244920730"],
Cell[574332, 13423, 1285, 39, 56, "Output",ExpressionUUID->"587f7560-061d-4c09-ac22-bd6de3a2d947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575654, 13467, 224, 6, 30, "Input",ExpressionUUID->"266052ed-1beb-49ac-8469-8fefd2ec7309"],
Cell[575881, 13475, 995, 33, 34, "Output",ExpressionUUID->"20a1e286-ac35-48a6-b765-7a6ae31aff2c"]
}, Open  ]],
Cell[576891, 13511, 145, 3, 35, "Text",ExpressionUUID->"964a918a-8ad1-44ca-ac0e-a530561846be"],
Cell[CellGroupData[{
Cell[577061, 13518, 197, 5, 30, "Input",ExpressionUUID->"601f0ea2-34dc-45af-af27-d8ca061da029"],
Cell[577261, 13525, 3974, 115, 98, "Output",ExpressionUUID->"11dbbe56-54dd-470f-b600-8feb10c01212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581272, 13645, 435, 13, 30, "Input",ExpressionUUID->"0e1ad9ef-3353-4a98-995d-147b32419cf7"],
Cell[581710, 13660, 86, 0, 34, "Output",ExpressionUUID->"60f57b53-b47d-4ee5-bcb8-794eb95edc7b"]
}, Open  ]],
Cell[581811, 13663, 150, 3, 35, "Text",ExpressionUUID->"4d05356d-bc8b-450d-85c4-051104aacd22"],
Cell[CellGroupData[{
Cell[581986, 13670, 199, 5, 30, "Input",ExpressionUUID->"52e30911-cc6f-4d41-83b1-ab835cfcfb5a"],
Cell[582188, 13677, 8390, 243, 224, "Output",ExpressionUUID->"13d923cb-294e-4a94-ada8-2b9bf4619dd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590615, 13925, 442, 13, 30, "Input",ExpressionUUID->"39dc8b46-4348-40f2-a87e-c3dd7728b2cc"],
Cell[591060, 13940, 86, 0, 34, "Output",ExpressionUUID->"36979937-63cd-4560-963d-c000c36fd21b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[591195, 13946, 118, 0, 29, "Subsubsection",ExpressionUUID->"50600572-540f-4aa2-908c-4bf680f946ea"],
Cell[CellGroupData[{
Cell[591338, 13950, 107, 1, 30, "Input",ExpressionUUID->"a5e0da97-97e6-4457-954e-26dcaf059ad8"],
Cell[591448, 13953, 23708, 528, 120, "Output",ExpressionUUID->"de6e1efb-c5a5-430c-bbde-96adb3a4dae2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615193, 14486, 270, 7, 30, "Input",ExpressionUUID->"f4956014-d0c1-4b0a-b2d4-490e89043d9d"],
Cell[615466, 14495, 140, 3, 34, "Output",ExpressionUUID->"61a875d9-31b3-4063-a614-0e49672ca469"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615643, 14503, 270, 7, 30, "Input",ExpressionUUID->"0aba393c-2bc6-45d2-8093-9854a094aa43"],
Cell[615916, 14512, 140, 3, 34, "Output",ExpressionUUID->"7bf81aff-5aca-4d7f-a6bc-addda6f71617"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616093, 14520, 295, 8, 30, "Input",ExpressionUUID->"dcb37b77-ff8a-4946-a49f-3f94133ca8bf"],
Cell[616391, 14530, 194, 4, 34, "Output",ExpressionUUID->"d39cb9d0-a552-4e9f-8511-a6f70655980e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616622, 14539, 342, 9, 30, "Input",ExpressionUUID->"917dd5ef-4f26-4ccc-8ab8-f4b9ce1009e2"],
Cell[616967, 14550, 194, 4, 34, "Output",ExpressionUUID->"98815b17-022a-4284-b6f1-b71ad20961b4"]
}, Open  ]],
Cell[617176, 14557, 87, 0, 35, "Text",ExpressionUUID->"0340a356-e145-42b7-b908-e8dab5a34a53"],
Cell[CellGroupData[{
Cell[617288, 14561, 408, 12, 33, "Input",ExpressionUUID->"58ba56ca-77e8-4501-92c4-3690998087d0"],
Cell[617699, 14575, 1374, 35, 56, "Output",ExpressionUUID->"de0e8724-83c6-4372-9d94-64df8b40b95d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619110, 14615, 188, 5, 30, "Input",ExpressionUUID->"1505bc44-1da3-4a2e-9325-d3281fc1a89f"],
Cell[619301, 14622, 287, 6, 34, "Output",ExpressionUUID->"5006c842-5d78-4b7b-a27c-3c4e79cc7cb3"]
}, Open  ]],
Cell[619603, 14631, 92, 0, 35, "Text",ExpressionUUID->"9e626f88-6b6c-4496-97a2-8a3b289c492e"],
Cell[CellGroupData[{
Cell[619720, 14635, 523, 16, 33, "Input",ExpressionUUID->"f0f0bccb-f1fb-4708-b3c4-09552e1e799f"],
Cell[620246, 14653, 287, 6, 34, "Output",ExpressionUUID->"2a133a4c-4891-45b4-9eee-a180da336a60"]
}, Open  ]],
Cell[620548, 14662, 107, 0, 35, "Text",ExpressionUUID->"e6e65da3-0f82-4534-8a0e-a239ca1481d1"],
Cell[CellGroupData[{
Cell[620680, 14666, 495, 14, 30, "Input",ExpressionUUID->"9dfd2b74-0a96-4a42-8a21-ae458e6efbbc"],
Cell[621178, 14682, 154, 3, 34, "Output",ExpressionUUID->"83c16f06-39cd-485f-ba60-7e1fe9266786"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[621381, 14691, 269, 7, 32, "Subsubsection",ExpressionUUID->"21f8bed9-94bb-4d54-93cd-862fd606f837"],
Cell[CellGroupData[{
Cell[621675, 14702, 108, 1, 30, "Input",ExpressionUUID->"7e993a72-b0de-465a-871f-fcb20f7f04b0"],
Cell[621786, 14705, 21802, 479, 167, "Output",ExpressionUUID->"0bdb9122-6b45-47ae-a1be-60de5ffa4787"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643625, 15189, 257, 6, 30, "Input",ExpressionUUID->"71cb51b9-d174-461a-935d-2703297a5113"],
Cell[643885, 15197, 83, 0, 34, "Output",ExpressionUUID->"5ed14162-1a29-4153-b9ae-726ac97e81de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644005, 15202, 233, 6, 30, "Input",ExpressionUUID->"25639a50-6ab7-41f5-97b4-80e67fe7515c"],
Cell[644241, 15210, 131, 1, 34, "Output",ExpressionUUID->"189e2b84-127e-49c5-a5d3-016e3915d6c0"]
}, Open  ]],
Cell[644387, 15214, 125, 0, 35, "Text",ExpressionUUID->"103fa856-ea40-4a6c-b29d-7394eea6ccd1"],
Cell[CellGroupData[{
Cell[644537, 15218, 348, 8, 30, "Input",ExpressionUUID->"97352266-ade3-4c03-a219-bf51c4f2d6f8"],
Cell[644888, 15228, 84, 0, 34, "Output",ExpressionUUID->"91df3194-f0cc-4d4b-a732-d47aa8c42533"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645009, 15233, 390, 9, 30, "Input",ExpressionUUID->"9ea2ab60-e80d-4772-964a-d6c4c0761543"],
Cell[645402, 15244, 229, 7, 34, "Output",ExpressionUUID->"46612bed-7ea3-46d0-b825-06a19fc6fc85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645668, 15256, 392, 9, 30, "Input",ExpressionUUID->"05a75d16-2204-454c-aaaf-736a9bc68c9f"],
Cell[646063, 15267, 83, 0, 34, "Output",ExpressionUUID->"e8f6dd53-3cfb-4220-bb95-47efd2cfab92"]
}, Open  ]],
Cell[646161, 15270, 292, 8, 35, "Text",ExpressionUUID->"bb0d5f28-7808-4efb-a979-ed60b4d1e412"],
Cell[CellGroupData[{
Cell[646478, 15282, 298, 9, 30, "Input",ExpressionUUID->"4ce4f23a-583e-458c-a85d-971c84d69d9c"],
Cell[646779, 15293, 131, 1, 34, "Output",ExpressionUUID->"f1f538c4-e29a-435e-a2c0-1fac0a4ac465"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[646959, 15300, 113, 0, 29, "Subsubsection",ExpressionUUID->"7288f27b-516d-49ab-88a2-baec0a96f273"],
Cell[CellGroupData[{
Cell[647097, 15304, 102, 1, 30, "Input",ExpressionUUID->"5770003c-4070-4722-934d-9f9fe8093ec2"],
Cell[647202, 15307, 14302, 341, 119, "Output",ExpressionUUID->"ebe492cf-a566-4282-91f6-faafd7e9d2b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661541, 15653, 320, 8, 73, "Input",ExpressionUUID->"f11113bc-65bd-446a-aa94-95b6c2a85f50"],
Cell[661864, 15663, 89, 0, 34, "Output",ExpressionUUID->"689b7033-9cb0-40fb-a9a9-ae0b5ab12aea"],
Cell[661956, 15665, 83, 0, 34, "Output",ExpressionUUID->"38f4ebe6-088f-4e45-8b50-427f2049a37b"],
Cell[662042, 15667, 89, 0, 34, "Output",ExpressionUUID->"4198af3a-332b-4a88-b591-92035200256c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662168, 15672, 399, 11, 73, "Input",ExpressionUUID->"f52ac283-d563-4076-8c03-5f1737411320"],
Cell[662570, 15685, 85, 0, 34, "Output",ExpressionUUID->"f63066bb-c46d-4ce0-ad7c-26deeef28207"],
Cell[662658, 15687, 83, 0, 34, "Output",ExpressionUUID->"c585c762-440f-4998-bddc-8f02becd946a"],
Cell[662744, 15689, 85, 0, 34, "Output",ExpressionUUID->"58343e83-9da3-4f20-91cc-e8739d3cec5e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[662878, 15695, 272, 7, 32, "Subsubsection",ExpressionUUID->"7f6f3e07-3579-4c27-9bff-2ea7d1c1bfab"],
Cell[CellGroupData[{
Cell[663175, 15706, 103, 1, 30, "Input",ExpressionUUID->"eb68e9e7-e73f-4cf1-959c-be985890420e"],
Cell[663281, 15709, 16865, 377, 119, "Output",ExpressionUUID->"32a24965-8299-46db-93bb-5b27472b50d7"]
}, Open  ]],
Cell[680161, 16089, 264, 8, 35, "Text",ExpressionUUID->"efbe5019-7d08-4a56-a406-e9e4366e7ccb"],
Cell[CellGroupData[{
Cell[680450, 16101, 339, 10, 30, "Input",ExpressionUUID->"1657749f-8179-40bc-944b-b9c4d9ccd2d5"],
Cell[680792, 16113, 211, 5, 34, "Output",ExpressionUUID->"2432f778-aaa4-4458-9709-5ebe6006b422"]
}, Open  ]],
Cell[681018, 16121, 245, 6, 35, "Text",ExpressionUUID->"dc43261b-f5b5-4f1c-9716-3039d4c9c7aa"],
Cell[CellGroupData[{
Cell[681288, 16131, 247, 7, 30, "Input",ExpressionUUID->"733a389b-5607-4b2e-9573-e06ac742ac71"],
Cell[681538, 16140, 239, 5, 34, "Output",ExpressionUUID->"de760fdb-1973-46b1-a520-8c67714e3ddf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681814, 16150, 256, 7, 30, "Input",ExpressionUUID->"c697e7f5-79b6-495d-ad54-a5fb0c40046b"],
Cell[682073, 16159, 249, 5, 34, "Output",ExpressionUUID->"b224eaff-6320-45d7-89e1-1fc6c92f718f"]
}, Open  ]],
Cell[682337, 16167, 121, 0, 35, "Text",ExpressionUUID->"4ced4781-b292-42b3-8a2a-41159d49c5a3"],
Cell[CellGroupData[{
Cell[682483, 16171, 475, 13, 30, "Input",ExpressionUUID->"a9c583f5-9e51-4330-b970-d48ad589363b"],
Cell[682961, 16186, 198, 4, 34, "Output",ExpressionUUID->"a103e817-c680-49ea-a4ff-e691d95c2ad3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[683208, 16196, 129, 0, 29, "Subsubsection",ExpressionUUID->"41e59a80-cc37-4e45-9c5b-7dfe53772b23"],
Cell[CellGroupData[{
Cell[683362, 16200, 118, 1, 30, "Input",ExpressionUUID->"f8e55e2a-fb3b-449f-bdee-35f0952f1df6"],
Cell[683483, 16203, 17684, 392, 119, "Output",ExpressionUUID->"91e46323-fd43-46a2-b352-76fd6aceac74"]
}, Open  ]],
Cell[701182, 16598, 243, 4, 35, "Text",ExpressionUUID->"208da000-cf7b-4a9b-8dd4-faec51af87d3"],
Cell[701428, 16604, 286, 6, 35, "Text",ExpressionUUID->"e7d4ab6b-0286-4a90-8c1b-ce49b8fd4b3a"],
Cell[CellGroupData[{
Cell[701739, 16614, 275, 7, 30, "Input",ExpressionUUID->"35bb626d-7ad4-4267-9061-7b3206d59ffc"],
Cell[702017, 16623, 584, 15, 34, "Output",ExpressionUUID->"2e7e192a-008f-4948-939c-c949e390f6a1"]
}, Open  ]],
Cell[702616, 16641, 127, 0, 35, "Text",ExpressionUUID->"a990cc62-8690-4904-929e-23c4ce85083b"],
Cell[CellGroupData[{
Cell[702768, 16645, 372, 11, 30, "Input",ExpressionUUID->"14c146fe-9556-4814-80b2-e48d6ac99448"],
Cell[703143, 16658, 426, 11, 34, "Output",ExpressionUUID->"e7b3f9c7-8f0a-4f36-b964-36c3baae6153"]
}, Open  ]],
Cell[703584, 16672, 155, 2, 35, "Text",ExpressionUUID->"20b96571-86cc-4a11-bfb6-267784cfc46b"],
Cell[CellGroupData[{
Cell[703764, 16678, 514, 14, 30, "Input",ExpressionUUID->"dad64396-c6dc-4867-bed8-8470ffab53ad"],
Cell[704281, 16694, 116, 1, 34, "Output",ExpressionUUID->"a9a82841-2d85-47a2-98ec-73dbf075ab7c"]
}, Open  ]],
Cell[704412, 16698, 191, 3, 35, "Text",ExpressionUUID->"95a08b0b-cddf-43e3-9f3e-5d9f0a5711e8"],
Cell[CellGroupData[{
Cell[704628, 16705, 401, 11, 30, "Input",ExpressionUUID->"32a7aa58-321a-4054-8ea1-7bf6d9101822"],
Cell[705032, 16718, 505, 13, 34, "Output",ExpressionUUID->"6617c58b-2da4-4e33-bfdb-27c90085e7f3"]
}, Open  ]],
Cell[705552, 16734, 196, 3, 35, "Text",ExpressionUUID->"96d589f9-c8c9-458c-88c8-bb70c24ffea2"],
Cell[CellGroupData[{
Cell[705773, 16741, 241, 7, 30, "Input",ExpressionUUID->"9e06432e-8e05-452f-9140-686021d894e9"],
Cell[706017, 16750, 149, 4, 34, "Output",ExpressionUUID->"bea156b0-4886-4c78-9e9f-69da1d16f572"]
}, Open  ]],
Cell[706181, 16757, 221, 3, 35, "Text",ExpressionUUID->"b8327322-5c47-439e-ae78-db3f8f6bdcac"],
Cell[CellGroupData[{
Cell[706427, 16764, 401, 12, 30, "Input",ExpressionUUID->"44b7c2b6-83f5-4e24-ae63-ce3b7e172b54"],
Cell[706831, 16778, 128, 2, 34, "Output",ExpressionUUID->"93e44db5-6a3e-409c-8e1f-33b7c18e376a"]
}, Open  ]],
Cell[706974, 16783, 173, 3, 35, "Text",ExpressionUUID->"907bb569-3056-4216-b5ac-6b7dcd9e34b6"],
Cell[CellGroupData[{
Cell[707172, 16790, 401, 12, 30, "Input",ExpressionUUID->"bdf393c7-1ff5-4c8e-904f-5dd53004783a"],
Cell[707576, 16804, 105, 1, 34, "Output",ExpressionUUID->"a763da3b-b5a7-494d-8be3-8a0a398a3b05"]
}, Open  ]],
Cell[707696, 16808, 158, 3, 35, "Text",ExpressionUUID->"87562602-59ab-4d84-8ce1-2cd88ddc8cd9"],
Cell[CellGroupData[{
Cell[707879, 16815, 295, 8, 30, "Input",ExpressionUUID->"4cc3aec1-82cb-4ed3-bce5-79b0e8ed09ba"],
Cell[708177, 16825, 90, 0, 34, "Output",ExpressionUUID->"bfb91778-8222-44e5-a118-baa40104c425"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[708316, 16831, 123, 0, 29, "Subsubsection",ExpressionUUID->"a4222c63-e506-4583-acc0-64b686d6bf78"],
Cell[CellGroupData[{
Cell[708464, 16835, 112, 1, 30, "Input",ExpressionUUID->"046a252c-760d-4522-a7bc-78735e8cc107"],
Cell[708579, 16838, 13981, 325, 95, "Output",ExpressionUUID->"357218b4-9912-4b22-88ed-1a577175dfca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722597, 17168, 186, 4, 30, "Input",ExpressionUUID->"9ee40127-8969-4b9b-9302-028bb99e8ea5"],
Cell[722786, 17174, 150, 3, 34, "Output",ExpressionUUID->"056aaf12-8684-4961-bbac-50c7ca2ac53e"]
}, Open  ]],
Cell[722951, 17180, 167, 4, 35, "Text",ExpressionUUID->"f2ad614f-e217-4bf0-9196-57b6696b019f"],
Cell[CellGroupData[{
Cell[723143, 17188, 221, 5, 30, "Input",ExpressionUUID->"d014b297-51ab-43eb-8ec9-1392aaf977b8"],
Cell[723367, 17195, 150, 3, 34, "Output",ExpressionUUID->"9f2980c4-ead1-45d1-8393-d88440899554"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[723566, 17204, 218, 5, 32, "Subsubsection",ExpressionUUID->"dcf14bd6-7aac-47fd-906e-98c591ce3d95"],
Cell[CellGroupData[{
Cell[723809, 17213, 112, 1, 30, "Input",ExpressionUUID->"6288c59b-f683-47c3-838e-64d54b07f60d"],
Cell[723924, 17216, 14623, 343, 119, "Output",ExpressionUUID->"a3cbdb62-2b0a-4ce2-95f2-e7be3fd7bac5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738584, 17564, 235, 6, 30, "Input",ExpressionUUID->"16f9e4d2-60f5-406e-8439-daa4abdbf0ab"],
Cell[738822, 17572, 658, 19, 34, "Output",ExpressionUUID->"33751ef8-1b84-4145-8ebb-7f4047152c76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739517, 17596, 113, 1, 30, "Input",ExpressionUUID->"438cb7d9-8401-4581-8801-87f0f6c1b1ef"],
Cell[739633, 17599, 14515, 340, 119, "Output",ExpressionUUID->"8d56e584-6e19-43c5-9c15-c40943f1301e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754185, 17944, 236, 6, 30, "Input",ExpressionUUID->"efca39c4-b530-4451-99b2-681a6ccfba68"],
Cell[754424, 17952, 682, 20, 34, "Output",ExpressionUUID->"9925ca0f-f93d-47b3-af55-23d9424db75c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[755155, 17978, 120, 0, 29, "Subsubsection",ExpressionUUID->"96e1fd16-1ce7-472f-9524-6f5f01e5ac6d"],
Cell[CellGroupData[{
Cell[755300, 17982, 109, 1, 30, "Input",ExpressionUUID->"fc1d365f-d575-40fb-9b7a-744f47590b3e"],
Cell[755412, 17985, 17594, 399, 119, "Output",ExpressionUUID->"6c3aefba-0454-46bc-8a9e-bf470511556b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773043, 18389, 297, 8, 30, "Input",ExpressionUUID->"05c49b5b-239f-423d-8d24-b6620819f80a"],
Cell[773343, 18399, 297, 9, 34, "Output",ExpressionUUID->"55e8aa93-2c8a-4178-a82f-cfc35cfd485a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773677, 18413, 248, 6, 30, "Input",ExpressionUUID->"80fda6b3-ac3b-4ffa-844e-c494a5b42e25"],
Cell[773928, 18421, 259, 7, 34, "Output",ExpressionUUID->"e070b187-9343-41e2-a6af-3b155d977425"]
}, Open  ]],
Cell[CellGroupData[{
Cell[774224, 18433, 338, 8, 30, "Input",ExpressionUUID->"3ac95696-1a44-46aa-8a5b-ce0df1208a12"],
Cell[774565, 18443, 398, 12, 34, "Output",ExpressionUUID->"a0a83ffd-5c67-41eb-81a2-d36368925adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775000, 18460, 350, 10, 33, "Input",ExpressionUUID->"d72bc782-8b53-4aeb-816d-589d2ec085fd"],
Cell[775353, 18472, 194, 4, 34, "Output",ExpressionUUID->"7c682a88-9614-4996-9131-390adc22c235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775584, 18481, 371, 12, 33, "Input",ExpressionUUID->"36c30723-6f29-4d8e-803b-110dd620f0b3"],
Cell[775958, 18495, 240, 5, 34, "Output",ExpressionUUID->"7f24631b-0029-4536-bb51-1c9096261ba2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[776247, 18506, 207, 5, 32, "Subsubsection",ExpressionUUID->"4ffc285a-f93a-4d0a-90b3-4ef7351dfdee"],
Cell[CellGroupData[{
Cell[776479, 18515, 104, 1, 30, "Input",ExpressionUUID->"7270ad30-836b-4133-99fd-f15dda495d5a"],
Cell[776586, 18518, 11839, 288, 95, "Output",ExpressionUUID->"6a7b31ab-a2b2-4efd-9fb8-d22d16c6e6ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788462, 18811, 232, 6, 30, "Input",ExpressionUUID->"04f52ff3-17d5-487d-b3bc-a0f8ea72c896"],
Cell[788697, 18819, 140, 3, 34, "Output",ExpressionUUID->"0855f5f1-bd14-43dc-b619-a216facf72dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788874, 18827, 183, 4, 30, "Input",ExpressionUUID->"6dfe67ba-4fa7-4943-af08-057e80caec16"],
Cell[789060, 18833, 105, 1, 34, "Output",ExpressionUUID->"8185a3b2-c2f0-4f58-a67f-2f0f607aabbc"]
}, Open  ]],
Cell[789180, 18837, 572, 15, 35, "Text",ExpressionUUID->"48645564-a243-4714-9e7f-85a4f164271e"],
Cell[CellGroupData[{
Cell[789777, 18856, 177, 4, 30, "Input",ExpressionUUID->"1460a0b3-924a-4652-8adb-f86da697b3b9"],
Cell[789957, 18862, 128, 2, 34, "Output",ExpressionUUID->"820ec9e0-8226-4409-ae34-9a53999dfec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790122, 18869, 205, 6, 30, "Input",ExpressionUUID->"6910307e-9a44-4af2-9f8e-89fefdd5911e"],
Cell[790330, 18877, 341, 7, 24, "Message",ExpressionUUID->"95ee3eba-cdb0-4735-948d-1b4d622402d9"],
Cell[790674, 18886, 128, 2, 34, "Output",ExpressionUUID->"794d3113-6602-4104-a410-ad1056aec4dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790839, 18893, 110, 1, 30, "Input",ExpressionUUID->"b1bd225b-42fb-413b-95fc-a89462f73499"],
Cell[790952, 18896, 13882, 331, 95, "Output",ExpressionUUID->"fd12bd6b-b79e-4316-9f04-2afd7c86a84a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804871, 19232, 238, 6, 30, "Input",ExpressionUUID->"5050799e-0025-458a-9b43-5ffe511522aa"],
Cell[805112, 19240, 83, 0, 34, "Output",ExpressionUUID->"c09a92a5-5726-4e7e-8129-b88e21d60a37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805232, 19245, 189, 4, 30, "Input",ExpressionUUID->"7b814320-510b-4215-9ff9-bf338cd57d3e"],
Cell[805424, 19251, 83, 0, 34, "Output",ExpressionUUID->"d3ef5dc3-1cec-4b7d-9d29-8b507d0867e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805544, 19256, 200, 4, 30, "Input",ExpressionUUID->"5f9e336f-fea2-458b-8a04-21f9c5818b2f"],
Cell[805747, 19262, 365, 7, 24, "Message",ExpressionUUID->"554fa065-1c85-420a-bf85-09b7bf7927dc"],
Cell[806115, 19271, 83, 0, 34, "Output",ExpressionUUID->"fed0f43d-6d3e-4831-9161-1c890132c529"]
}, Open  ]],
Cell[806213, 19274, 143, 2, 35, "Text",ExpressionUUID->"4557b04e-834a-4584-8ea7-762203ff3d01"],
Cell[CellGroupData[{
Cell[806381, 19280, 341, 10, 48, "Input",ExpressionUUID->"13c21396-0df9-40da-a6c1-33c914607f77"],
Cell[806725, 19292, 1817, 25, 98, "Output",ExpressionUUID->"ac8f4411-ffcf-4d4a-ab29-27e3ea7441f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808579, 19322, 114, 1, 30, "Input",ExpressionUUID->"d077e05b-86fb-43bb-a0d2-4926141fd207"],
Cell[808696, 19325, 85, 0, 34, "Output",ExpressionUUID->"89b4162d-284f-4c69-8592-ecd484886d72"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[808830, 19331, 116, 0, 29, "Subsubsection",ExpressionUUID->"71b084cd-f4bf-4af2-a484-824b3a3dd632"],
Cell[CellGroupData[{
Cell[808971, 19335, 105, 1, 30, "Input",ExpressionUUID->"e428b592-f670-4f8d-b566-fd96f3706f70"],
Cell[809079, 19338, 18736, 418, 176, "Output",ExpressionUUID->"9cf7881b-bf9d-473f-89fb-24b3eb1f3ded"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827852, 19761, 150, 3, 30, "Input",ExpressionUUID->"d8e19c9b-6af0-4623-94ae-a400b413bc9a"],
Cell[828005, 19766, 171, 3, 34, "Output",ExpressionUUID->"82a0834a-a9b7-48e1-a4f8-1daa363732d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828213, 19774, 196, 5, 47, "Input",ExpressionUUID->"f5ca5b38-6890-4357-a4b3-b2db14f02331"],
Cell[828412, 19781, 171, 3, 34, "Output",ExpressionUUID->"25636555-6a37-484f-a776-ef0de3094dbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[828620, 19789, 206, 5, 47, "Input",ExpressionUUID->"1324f60f-fa3d-40fd-84f3-0ec9279f16c1"],
Cell[828829, 19796, 162, 3, 34, "Output",ExpressionUUID->"0534e0c5-46ed-48e9-9f3c-d172e74ce6e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[829028, 19804, 196, 5, 48, "Input",ExpressionUUID->"e7704ee1-fe1c-4489-8b95-033a175ae5a5"],
Cell[829227, 19811, 194, 4, 34, "Output",ExpressionUUID->"d139a9e7-c83b-417d-b0b8-03285e026b68"]
}, Open  ]],
Cell[829436, 19818, 106, 0, 35, "Text",ExpressionUUID->"36694df8-4e5b-468c-bf6d-9704b5051e5f"],
Cell[CellGroupData[{
Cell[829567, 19822, 207, 5, 48, "Input",ExpressionUUID->"6cfcec4c-e6fe-46cc-acb1-fec0c7fbc28f"],
Cell[829777, 19829, 493, 8, 34, "Output",ExpressionUUID->"2fa28271-2168-4f41-ae63-7a807f293222"]
}, Open  ]],
Cell[830285, 19840, 110, 0, 35, "Text",ExpressionUUID->"20b12de6-38d1-4aba-8f28-4590e6c2ff46"],
Cell[CellGroupData[{
Cell[830420, 19844, 256, 7, 48, "Input",ExpressionUUID->"b3efdd61-e9d1-4fc8-9c00-6a0df7463246"],
Cell[830679, 19853, 877, 13, 56, "Output",ExpressionUUID->"8a711e68-4a0f-4984-9cef-751fc1a0d30b"]
}, Open  ]],
Cell[831571, 19869, 116, 0, 35, "Text",ExpressionUUID->"eda33364-5bf4-49ac-86a0-028a9d1465c3"],
Cell[CellGroupData[{
Cell[831712, 19873, 699, 20, 47, "Input",ExpressionUUID->"d6de785f-c8de-44a5-9027-019e5cc6dc9e"],
Cell[832414, 19895, 86, 0, 34, "Output",ExpressionUUID->"aa6f2fff-ca4d-4a12-9ad9-f5df4efab16b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[832549, 19901, 125, 0, 29, "Subsubsection",ExpressionUUID->"7220b506-0528-404e-a69a-583faff691b0"],
Cell[CellGroupData[{
Cell[832699, 19905, 114, 1, 30, "Input",ExpressionUUID->"e979e9c6-5df3-4dc4-a034-5fadc40234fd"],
Cell[832816, 19908, 13014, 311, 95, "Output",ExpressionUUID->"38865d03-bc60-472a-8e43-cad3f9705ff1"]
}, Open  ]],
Cell[845845, 20222, 115, 0, 35, "Text",ExpressionUUID->"9191e964-2047-4583-899e-37ea3ec0ef10"],
Cell[CellGroupData[{
Cell[845985, 20226, 514, 16, 30, "Input",ExpressionUUID->"a69e6766-2d6f-46a0-ab6e-74ada205e9ef"],
Cell[846502, 20244, 83, 0, 34, "Output",ExpressionUUID->"b8b45482-d6aa-48a4-aee6-05bf74cded14"]
}, Open  ]],
Cell[846600, 20247, 121, 0, 35, "Text",ExpressionUUID->"2cf2af36-2587-4873-86a3-9e67f08ca89f"],
Cell[CellGroupData[{
Cell[846746, 20251, 224, 6, 30, "Input",ExpressionUUID->"082fa989-36d5-4496-96b8-36f610e9bbe7"],
Cell[846973, 20259, 83, 0, 34, "Output",ExpressionUUID->"fdf64330-68a2-4d39-bab2-f78090b37ceb"]
}, Open  ]],
Cell[847071, 20262, 201, 6, 35, "Text",ExpressionUUID->"61fe3cdd-7ed9-408a-b625-be00ff3e48d6"],
Cell[CellGroupData[{
Cell[847297, 20272, 295, 8, 30, "Input",ExpressionUUID->"a2214221-9f40-4340-887d-89d64beca819"],
Cell[847595, 20282, 83, 0, 34, "Output",ExpressionUUID->"dd894fb6-b72d-491c-8cd7-d3deb41e3fd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847715, 20287, 289, 8, 30, "Input",ExpressionUUID->"67b8d117-ce86-432f-8384-770275ad775a"],
Cell[848007, 20297, 83, 0, 34, "Output",ExpressionUUID->"4e7e2a2e-14d7-4980-9a67-598f9a8d409e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[848139, 20303, 122, 0, 29, "Subsubsection",ExpressionUUID->"9d0dad21-7ce6-49eb-b6ca-ea60e7e3cbdb"],
Cell[CellGroupData[{
Cell[848286, 20307, 111, 1, 30, "Input",ExpressionUUID->"aa0c49c1-69f9-45a6-a14d-6c446796ca2e"],
Cell[848400, 20310, 21491, 482, 119, "Output",ExpressionUUID->"2e812043-aa24-4b32-8bc9-aa06cb6ebce5"]
}, Open  ]],
Cell[869906, 20795, 504, 14, 35, "Text",ExpressionUUID->"f84fec8f-9deb-474c-9510-09e9cf9bfd12"],
Cell[CellGroupData[{
Cell[870435, 20813, 157, 3, 30, "Input",ExpressionUUID->"336c9144-2555-4e4d-b410-ed71a8bb4b43"],
Cell[870595, 20818, 1153, 34, 51, "Output",ExpressionUUID->"6432c0e9-8ec9-454f-91e3-6848cd44ab86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871785, 20857, 215, 5, 30, "Input",ExpressionUUID->"f149033d-3a1a-4b96-8ab7-2b141ca10e1a"],
Cell[872003, 20864, 506, 15, 51, "Output",ExpressionUUID->"4ea38d2d-10be-4a27-8ff0-a3752c5da0bf"]
}, Open  ]],
Cell[872524, 20882, 260, 6, 35, "Text",ExpressionUUID->"2af7827a-dd59-4385-b56e-5f300d163973"],
Cell[CellGroupData[{
Cell[872809, 20892, 263, 7, 48, "Input",ExpressionUUID->"10b613fa-7cb5-4cf8-9f3a-f4a4f05faa9f"],
Cell[873075, 20901, 211, 6, 51, "Output",ExpressionUUID->"f99ab356-d038-4aa6-8707-4a4ee2db0330"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[873335, 20913, 119, 0, 29, "Subsubsection",ExpressionUUID->"84493758-e980-403d-b1c7-801f615a45d5"],
Cell[CellGroupData[{
Cell[873479, 20917, 108, 1, 30, "Input",ExpressionUUID->"b10bf871-d546-4c7f-822c-fdfb47158d1f"],
Cell[873590, 20920, 12029, 292, 95, "Output",ExpressionUUID->"3cea6bf8-5164-4e34-a06b-0067e358e94b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885656, 21217, 650, 19, 30, "Input",ExpressionUUID->"c33f0b1b-a634-4f1d-a823-e29a86a6f983"],
Cell[886309, 21238, 18247, 479, 227, "Output",ExpressionUUID->"21314084-8b53-41a1-abc5-7de66800c741"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[904605, 21723, 226, 5, 32, "Subsubsection",ExpressionUUID->"b7b9a2ce-8db5-409e-9ffd-ee45ea1cad14"],
Cell[CellGroupData[{
Cell[904856, 21732, 113, 1, 30, "Input",ExpressionUUID->"83cdc2fd-5af7-45ac-aabf-fc31e3e2d393"],
Cell[904972, 21735, 13275, 318, 119, "Output",ExpressionUUID->"b664f428-8690-4ba8-8fe5-7e8e15782e14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[918284, 22058, 120, 1, 30, "Input",ExpressionUUID->"06e350cb-7eaa-4697-ad12-6200ffebe3b6"],
Cell[918407, 22061, 13489, 321, 119, "Output",ExpressionUUID->"562ddf5d-92df-4b03-94e3-d345269df848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[931933, 22387, 385, 10, 30, "Input",ExpressionUUID->"265ce052-2c12-42f4-999b-417c578a6ce6"],
Cell[932321, 22399, 289, 8, 69, "Output",ExpressionUUID->"1e0930fa-295d-43c9-80d1-3d3dcfd18a06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[932647, 22412, 435, 11, 30, "Input",ExpressionUUID->"17d7146c-525e-417d-9e50-09dbf6f74909"],
Cell[933085, 22425, 295, 9, 87, "Output",ExpressionUUID->"f2e2bdf0-6ed1-43a1-ba77-7e9f39566d9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[933417, 22439, 471, 13, 30, "Input",ExpressionUUID->"d67da738-ee0b-4749-896e-7bd53fb7d13a"],
Cell[933891, 22454, 289, 8, 69, "Output",ExpressionUUID->"9ece5b38-db29-437b-96b9-6e60c138bdd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[934217, 22467, 442, 11, 30, "Input",ExpressionUUID->"5aa7aa5b-a8b4-4be0-abe0-5600d0ff7c42"],
Cell[934662, 22480, 295, 9, 87, "Output",ExpressionUUID->"62728338-66d3-4be6-9e98-2d72a12fa431"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[935006, 22495, 214, 5, 32, "Subsubsection",ExpressionUUID->"3f518332-212c-41cc-a4f5-71caf2286f52"],
Cell[CellGroupData[{
Cell[935245, 22504, 110, 1, 30, "Input",ExpressionUUID->"e885d496-6d7a-40d8-abc2-9696c876252d"],
Cell[935358, 22507, 14095, 329, 119, "Output",ExpressionUUID->"c7063cff-7b7d-448f-8cfc-47d00aebbcf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[949490, 22841, 252, 6, 38, "Input",ExpressionUUID->"0bca673c-972c-4cdc-9927-d88f0a204c02"],
Cell[949745, 22849, 180, 4, 39, "Output",ExpressionUUID->"0ac91bcb-5ccc-4d05-bb5c-6d89b5168964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[949962, 22858, 210, 4, 30, "Input",ExpressionUUID->"a0ad9529-bf59-4aac-84e8-d17de65a6ed0"],
Cell[950175, 22864, 171, 3, 34, "Output",ExpressionUUID->"de6de82b-2fbb-4e9a-92ca-e83b88887c00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[950383, 22872, 111, 1, 30, "Input",ExpressionUUID->"23385554-ac9a-4251-b245-aa2430109b07"],
Cell[950497, 22875, 14101, 327, 119, "Output",ExpressionUUID->"611c9117-d20a-4c31-9929-8ef999c293a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964635, 23207, 253, 6, 38, "Input",ExpressionUUID->"1bdd3541-c725-4098-8451-e4765d556435"],
Cell[964891, 23215, 181, 4, 39, "Output",ExpressionUUID->"370d5935-5036-4d0a-a246-c744efa43582"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965109, 23224, 211, 4, 30, "Input",ExpressionUUID->"817d8396-0e9b-4c15-b041-3045bf5c48cd"],
Cell[965323, 23230, 171, 3, 34, "Output",ExpressionUUID->"071584db-ac3e-48c8-ace9-17caa4c3ea56"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[965543, 23239, 115, 0, 29, "Subsubsection",ExpressionUUID->"4b096df4-c743-4441-baa5-0a71f8ec484e"],
Cell[CellGroupData[{
Cell[965683, 23243, 104, 1, 30, "Input",ExpressionUUID->"9c67e7ef-5891-4f4c-9af9-8a87b68b0b4b"],
Cell[965790, 23246, 15719, 380, 119, "Output",ExpressionUUID->"6e848fd8-7ee6-4918-b344-73579a054e0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981546, 23631, 173, 4, 30, "Input",ExpressionUUID->"5ac9d901-cb58-4459-bae8-ac8d69dcb61e"],
Cell[981722, 23637, 83, 0, 34, "Output",ExpressionUUID->"46e2de22-60fe-4476-b638-9fd7e51330f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981842, 23642, 187, 5, 30, "Input",ExpressionUUID->"34aa3ec8-e40b-46b4-8e81-0d042f06374d"],
Cell[982032, 23649, 106, 1, 34, "Output",ExpressionUUID->"d46f7214-d87a-40cf-be1d-a84b85865403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982175, 23655, 132, 2, 30, "Input",ExpressionUUID->"ff5cf6bd-db71-4ee2-8911-5fa9d187582e"],
Cell[982310, 23659, 288, 6, 24, "Message",ExpressionUUID->"c357b282-7bf4-4c1f-9a57-230f2c88f1e2"],
Cell[982601, 23667, 135, 3, 34, "Output",ExpressionUUID->"bbb692f2-06b0-4030-9e42-b96e5ffb6954"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982773, 23675, 169, 4, 30, "Input",ExpressionUUID->"bf6d1e7a-50c6-4996-9a21-d5950933dfd9"],
Cell[982945, 23681, 94, 0, 34, "Output",ExpressionUUID->"a1d92580-d8c4-43df-b5f4-e1e9f542ec59"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[983088, 23687, 114, 0, 29, "Subsubsection",ExpressionUUID->"e1bc0f85-0230-4c13-b071-168b513603a3"],
Cell[CellGroupData[{
Cell[983227, 23691, 103, 1, 30, "Input",ExpressionUUID->"c86a6296-f7c3-4516-b045-56b50271a304"],
Cell[983333, 23694, 24241, 528, 143, "Output",ExpressionUUID->"a11e0b6d-5b6f-4133-946e-4f0f5acf4468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007611, 24227, 267, 7, 30, "Input",ExpressionUUID->"736c2ab0-d86c-426a-a627-002919451ae3"],
Cell[1007881, 24236, 781, 15, 185, "Output",ExpressionUUID->"04cdf055-49e6-4a87-bc2c-44a5610e3293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008699, 24256, 318, 9, 47, "Input",ExpressionUUID->"d5038034-948a-4515-82ff-f88178e72610"],
Cell[1009020, 24267, 781, 15, 185, "Output",ExpressionUUID->"556791ce-8978-4fa6-8072-f6af6a667911"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009838, 24287, 306, 8, 30, "Input",ExpressionUUID->"7d0f6ba0-9997-4ba8-8dd3-de9408102dbb"],
Cell[1010147, 24297, 781, 15, 185, "Output",ExpressionUUID->"dd538c6f-9363-43fa-965a-f6b805e08397"]
}, Open  ]],
Cell[1010943, 24315, 364, 11, 58, "Text",ExpressionUUID->"e23fb646-ead6-448f-b255-b148b13d5821"],
Cell[CellGroupData[{
Cell[1011332, 24330, 339, 9, 30, "Input",ExpressionUUID->"ea3ca7c3-5962-471f-a1d1-cad3cfcfb62c"],
Cell[1011674, 24341, 781, 15, 185, "Output",ExpressionUUID->"103bef06-045d-462e-b79e-ebafb0efb6ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012492, 24361, 454, 12, 30, "Input",ExpressionUUID->"ae50a974-b493-4f2f-b176-26578ab32af6"],
Cell[1012949, 24375, 3380, 63, 122, "Output",ExpressionUUID->"43e815e1-90cb-4c6e-aa17-fc49aa8bcd47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016366, 24443, 485, 13, 30, "Input",ExpressionUUID->"713cf6df-bae0-4450-b67d-9843043e74b1"],
Cell[1016854, 24458, 3380, 63, 122, "Output",ExpressionUUID->"58fdde64-df66-4564-b9b4-b212ec5c592c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020271, 24526, 573, 15, 33, "Input",ExpressionUUID->"dc80ccdb-1559-43af-a544-73ad4105243f"],
Cell[1020847, 24543, 14476, 245, 273, "Output",ExpressionUUID->"7700aa2a-33df-4462-96b0-15da92fe1145"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035360, 24793, 307, 8, 33, "Input",ExpressionUUID->"b4b4fd8f-12f6-4529-9ec8-a9bfe4d36a82"],
Cell[1035670, 24803, 1712, 51, 65, "Output",ExpressionUUID->"2be5653d-f17d-466e-9b85-bfea6960c798"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1037419, 24859, 430, 13, 33, "Input",ExpressionUUID->"5ed880dc-a007-4797-b274-185c4454e75c"],
Cell[1037852, 24874, 1712, 51, 65, "Output",ExpressionUUID->"4a70b943-68fc-4bf4-82df-ed7a8b489d79"]
}, Open  ]],
Cell[1039579, 24928, 103, 0, 35, "Text",ExpressionUUID->"16d77ce8-6d22-4ce2-82cd-208ce29a4598"],
Cell[CellGroupData[{
Cell[1039707, 24932, 1555, 47, 73, "Input",ExpressionUUID->"94ec43a7-5e86-4880-bdfc-ce6e327ab832"],
Cell[1041265, 24981, 96100, 1453, 176, "Output",ExpressionUUID->"b00744ef-0183-49e0-9917-847bc4c857dc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1137414, 26440, 113, 0, 29, "Subsubsection",ExpressionUUID->"31bb08f1-b762-4167-8e91-f16944db30a3"],
Cell[CellGroupData[{
Cell[1137552, 26444, 102, 1, 30, "Input",ExpressionUUID->"005aa970-5a87-4dc6-b9a1-025a12ab8f2f"],
Cell[1137657, 26447, 17565, 408, 119, "Output",ExpressionUUID->"18809bcb-9555-43f4-8dce-72e2bb629eec"]
}, Open  ]],
Cell[1155237, 26858, 123, 0, 35, "Text",ExpressionUUID->"17b4e9fa-69db-480d-839e-a9227b14764a"],
Cell[CellGroupData[{
Cell[1155385, 26862, 301, 8, 30, "Input",ExpressionUUID->"71967b34-767b-4f56-9f25-2422f893c463"],
Cell[1155689, 26872, 340, 6, 34, "Output",ExpressionUUID->"04ce2047-4e28-44d8-979f-557c8a10726c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156066, 26883, 106, 1, 30, "Input",ExpressionUUID->"1a4acc1c-ccc3-4f23-9292-90a256ebf161"],
Cell[1156175, 26886, 8711, 218, 95, "Output",ExpressionUUID->"5b4e98fb-7a3c-4ca6-824c-19e09c21910a"]
}, Open  ]],
Cell[1164901, 27107, 101, 0, 35, "Text",ExpressionUUID->"273457eb-0a5a-4764-84cc-448934ef2127"],
Cell[CellGroupData[{
Cell[1165027, 27111, 354, 10, 30, "Input",ExpressionUUID->"ce329e29-8a9d-409e-b295-da991dd5b274"],
Cell[1165384, 27123, 225, 5, 34, "Output",ExpressionUUID->"63bdee5a-319a-4cbf-9b9e-00b5c4574490"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1165658, 27134, 221, 5, 32, "Subsubsection",ExpressionUUID->"75d371a4-cd54-43bb-8062-8daeef57ceb6"],
Cell[CellGroupData[{
Cell[1165904, 27143, 114, 1, 30, "Input",ExpressionUUID->"fde54de8-c458-417e-85e7-f2033bb0661a"],
Cell[1166021, 27146, 22434, 485, 143, "Output",ExpressionUUID->"cf97aedb-c1e4-4891-a2fe-c28863549964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188492, 27636, 138, 3, 30, "Input",ExpressionUUID->"e53cf264-b650-423a-a4cf-51f1faf54e39"],
Cell[1188633, 27641, 22407, 484, 143, "Output",ExpressionUUID->"adba9b83-375c-4033-96d8-737270074a40"]
}, Open  ]],
Cell[1211055, 28128, 205, 5, 30, "Input",ExpressionUUID->"8413e19f-8bd3-4859-8242-6b466ff999af"],
Cell[CellGroupData[{
Cell[1211285, 28137, 127, 1, 30, "Input",ExpressionUUID->"6c1c2421-41dd-4176-9b57-af06f9b4a580"],
Cell[1211415, 28140, 554, 17, 34, "Output",ExpressionUUID->"01e4d4e1-28c8-444e-b10b-9f72054cc729"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212006, 28162, 127, 1, 30, "Input",ExpressionUUID->"4fef4dc8-f9d4-4e4b-8d83-9a623854189b"],
Cell[1212136, 28165, 1101, 35, 56, "Output",ExpressionUUID->"43fb7031-9040-4be8-a37c-9b5338d1645f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213274, 28205, 232, 6, 30, "Input",ExpressionUUID->"04a5925a-21cd-4c1c-b1ef-502b4c3b2f24"],
Cell[1213509, 28213, 18398, 461, 244, "Output",ExpressionUUID->"fc589f6d-a135-432e-97af-eef5f2da4c6c"]
}, Open  ]],
Cell[1231922, 28677, 116, 1, 30, "Input",ExpressionUUID->"fa9ec544-5df6-4e4b-b1f8-fab3a726998b"],
Cell[1232041, 28680, 114, 0, 35, "Text",ExpressionUUID->"06758135-a32f-4af8-b86d-5e3ca4ab0fef"],
Cell[CellGroupData[{
Cell[1232180, 28684, 275, 7, 30, "Input",ExpressionUUID->"474338e4-0be3-418d-a484-040722ebfd7d"],
Cell[1232458, 28693, 1838, 55, 56, "Output",ExpressionUUID->"170fd167-cc59-43ca-90b5-66e4d7281752"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1234345, 28754, 264, 7, 32, "Subsubsection",ExpressionUUID->"ced2f336-ecb7-4d6b-b2b4-75529d437ddd"],
Cell[CellGroupData[{
Cell[1234634, 28765, 102, 1, 30, "Input",ExpressionUUID->"c19e34db-e392-4028-bf03-d09fa4cad0ef"],
Cell[1234739, 28768, 21702, 461, 144, "Output",ExpressionUUID->"1b4cfbfa-b9cc-400a-b819-fbf4d54d59b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256478, 29234, 255, 7, 30, "Input",ExpressionUUID->"5e6a2db0-b7e4-40a8-9a7f-a958434b6beb"],
Cell[1256736, 29243, 150, 3, 34, "Output",ExpressionUUID->"48e7040b-61ae-4bd9-a8e2-fe01b6c1a45d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256923, 29251, 275, 7, 30, "Input",ExpressionUUID->"076c5dd8-10dd-44ca-af6d-57cc427ab53d"],
Cell[1257201, 29260, 160, 3, 34, "Output",ExpressionUUID->"d6d8acb2-f2d1-4a7b-a7c6-fe5cb472b1fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1257398, 29268, 334, 9, 30, "Input",ExpressionUUID->"d7cee0af-589a-4d48-8edc-dfc7a5ddf153"],
Cell[1257735, 29279, 160, 3, 34, "Output",ExpressionUUID->"163347b6-d200-4bca-846e-f248016e54b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1257932, 29287, 346, 9, 30, "Input",ExpressionUUID->"9a64ff49-ed1e-4287-8eb9-24bdb89a681b"],
Cell[1258281, 29298, 160, 3, 34, "Output",ExpressionUUID->"b6e837f8-77ca-4673-801f-fd80d782372d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1258478, 29306, 482, 13, 30, "Input",ExpressionUUID->"d157b3eb-a36e-4a9a-8055-a7d893d2708b"],
Cell[1258963, 29321, 160, 3, 34, "Output",ExpressionUUID->"c93fa40a-e8e6-457a-b24f-73d7bfbafaea"]
}, Open  ]],
Cell[1259138, 29327, 101, 0, 35, "Text",ExpressionUUID->"63d0100c-7583-443d-a2d2-a1ff94197a6d"],
Cell[CellGroupData[{
Cell[1259264, 29331, 447, 15, 30, "Input",ExpressionUUID->"446433be-8677-4d03-8451-23494918e4bf"],
Cell[1259714, 29348, 228, 7, 34, "Output",ExpressionUUID->"6efa6ec6-535a-4e0e-b705-f3f174c895c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1259991, 29361, 372, 11, 32, "Subsubsection",ExpressionUUID->"98f15b7a-e0f0-4282-885a-ea5b4466cfc2"],
Cell[CellGroupData[{
Cell[1260388, 29376, 107, 1, 30, "Input",ExpressionUUID->"218cd3c4-ebae-41ce-a7d9-60a07ce5f2a3"],
Cell[1260498, 29379, 14522, 336, 119, "Output",ExpressionUUID->"01ef6e90-ccbb-4f66-9ef1-b2075a1109c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275057, 29720, 249, 6, 38, "Input",ExpressionUUID->"6fd3b567-1487-4138-a8cc-9bd1d08fd340"],
Cell[1275309, 29728, 143, 4, 39, "Output",ExpressionUUID->"a34593ee-d32c-498d-bc39-d09e4f3d7f37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275489, 29737, 278, 7, 38, "Input",ExpressionUUID->"0eb77952-fe8e-411b-a933-b2695b058798"],
Cell[1275770, 29746, 117, 2, 39, "Output",ExpressionUUID->"d0fd7ebc-d9f1-4866-ae64-7145bb5d2a62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275924, 29753, 108, 1, 30, "Input",ExpressionUUID->"388bfad4-a37f-40ee-b35e-57ba1d30da2f"],
Cell[1276035, 29756, 14701, 339, 119, "Output",ExpressionUUID->"84834737-4066-4824-9201-ee743a130cd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290773, 30100, 250, 6, 38, "Input",ExpressionUUID->"71a11030-23cc-444a-bc27-514279610a2d"],
Cell[1291026, 30108, 137, 3, 34, "Output",ExpressionUUID->"f86ae208-2d90-4b4b-805a-0ec00d29293c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291200, 30116, 279, 7, 38, "Input",ExpressionUUID->"1d1351ad-3c68-4b52-ae28-6921e80d1ded"],
Cell[1291482, 30125, 147, 3, 34, "Output",ExpressionUUID->"58b24332-37ee-4025-bd1d-fbed3ac25c70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291666, 30133, 107, 1, 30, "Input",ExpressionUUID->"68993112-a871-4f77-bf2d-f850cae9f323"],
Cell[1291776, 30136, 14522, 336, 119, "Output",ExpressionUUID->"300dbdaf-a594-4c63-95e2-c785e2a3a66f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306335, 30477, 249, 6, 38, "Input",ExpressionUUID->"1fec822b-4b54-4eb3-b210-81c87193eddb"],
Cell[1306587, 30485, 147, 3, 34, "Output",ExpressionUUID->"0856d3a6-8097-4742-8b01-f879c46181a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306771, 30493, 278, 7, 38, "Input",ExpressionUUID->"96d3fdf1-8e47-4146-b879-9688f75e2bb6"],
Cell[1307052, 30502, 157, 3, 34, "Output",ExpressionUUID->"6d8596d3-bd13-493d-923e-f0ee28d7fff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307246, 30510, 108, 1, 30, "Input",ExpressionUUID->"6b72445d-6dbd-4859-a3bc-18e89caa69e2"],
Cell[1307357, 30513, 14701, 339, 119, "Output",ExpressionUUID->"35768896-ebad-4110-827e-360206b29efb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1322095, 30857, 250, 6, 38, "Input",ExpressionUUID->"2d8c7bf9-63c3-4c13-85cb-fcf5d7badad0"],
Cell[1322348, 30865, 153, 4, 39, "Output",ExpressionUUID->"d7af43e4-cdc0-4543-92c9-573b480595b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1322538, 30874, 279, 7, 38, "Input",ExpressionUUID->"6a4e285c-541f-4989-969f-fa414ecd6074"],
Cell[1322820, 30883, 143, 4, 39, "Output",ExpressionUUID->"c76bb0a7-1ae3-4b3a-b9c3-575f7aed397c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1323012, 30893, 113, 0, 29, "Subsubsection",ExpressionUUID->"4af7688d-06ba-4d8c-879e-16b1286b52d9"],
Cell[CellGroupData[{
Cell[1323150, 30897, 102, 1, 30, "Input",ExpressionUUID->"1e2b01d8-9b18-4962-a84d-b27b669e4d99"],
Cell[1323255, 30900, 16878, 392, 119, "Output",ExpressionUUID->"3d284697-e1be-4c2b-a584-00546fb27379"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340170, 31297, 171, 4, 30, "Input",ExpressionUUID->"fc509a6e-c858-4a73-b69c-1f7148668d11"],
Cell[1340344, 31303, 247, 5, 34, "Output",ExpressionUUID->"7aa01817-d173-4b7c-94c9-3b5b13d9670a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340628, 31313, 401, 12, 30, "Input",ExpressionUUID->"46e4193b-536d-49a2-beb2-90c5975b3467"],
Cell[1341032, 31327, 498, 12, 133, "Output",ExpressionUUID->"ccd6c979-2f27-44d3-b869-5797650eacb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1341567, 31344, 410, 12, 30, "Input",ExpressionUUID->"00a0b949-f439-4f91-8a7c-c5332469a8ad"],
Cell[1341980, 31358, 836, 20, 376, "Output",ExpressionUUID->"963e9ffe-8ff5-48c4-b0a0-dae31fe52d50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342853, 31383, 241, 6, 30, "Input",ExpressionUUID->"a052babe-ddb1-4645-ac1c-9a7d65017809"],
Cell[1343097, 31391, 569, 19, 34, "Output",ExpressionUUID->"d711a61f-d010-4249-bdd3-0786ea02c0e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1343703, 31415, 1109, 32, 30, "Input",ExpressionUUID->"dfa12d8f-b82d-4025-a7c1-8c8b952754a4"],
Cell[1344815, 31449, 3940, 65, 408, "Output",ExpressionUUID->"c25491e8-1679-4d8f-90e9-e8e96ba394d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1348792, 31519, 317, 9, 30, "Input",ExpressionUUID->"829616a0-f448-4999-abad-1a3497b6c22f"],
Cell[1349112, 31530, 332, 6, 34, "Output",ExpressionUUID->"d8f67ddd-10c7-49db-96b0-dc9e4ba6012e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1349493, 31542, 113, 0, 29, "Subsubsection",ExpressionUUID->"3b0e45e1-42c0-4fae-8edb-331994a0482b"],
Cell[CellGroupData[{
Cell[1349631, 31546, 102, 1, 30, "Input",ExpressionUUID->"64fea020-9199-49fa-8217-b98165a1cd3e"],
Cell[1349736, 31549, 19129, 447, 119, "Output",ExpressionUUID->"1d8cced8-5d07-44c3-8e32-7c1dbbf30c39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1368902, 32001, 248, 7, 30, "Input",ExpressionUUID->"a94a43fe-f2c4-4562-871f-154c37cee6c4"],
Cell[1369153, 32010, 846, 23, 34, "Output",ExpressionUUID->"b3a433d0-d2d2-4ba9-a215-ef45c79e244a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370036, 32038, 112, 1, 30, "Input",ExpressionUUID->"214c01c3-e0cf-48ef-9f9d-921d548d5afe"],
Cell[1370151, 32041, 650, 15, 34, "Output",ExpressionUUID->"d1e79f87-bdb5-46d2-a543-39841a250e0f"]
}, Open  ]],
Cell[1370816, 32059, 178, 4, 35, "Text",ExpressionUUID->"197c25b3-226b-4182-a7d1-dc3842fc4352"],
Cell[CellGroupData[{
Cell[1371019, 32067, 605, 20, 30, "Input",ExpressionUUID->"c100be41-49d2-4d49-9014-b9a1eec26a44"],
Cell[1371627, 32089, 1055, 22, 56, "Output",ExpressionUUID->"3874525f-9976-41fa-a0a3-570cd66fb819"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1372719, 32116, 110, 1, 30, "Input",ExpressionUUID->"96bb6d64-98c7-4da1-bab4-b5f77210cec1"],
Cell[1372832, 32119, 142, 3, 34, "Output",ExpressionUUID->"92cf0b2e-9765-47ff-bebe-b947585eae40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1373011, 32127, 151, 3, 30, "Input",ExpressionUUID->"69989257-d351-4600-ad7e-a3230e15a681"],
Cell[1373165, 32132, 602, 17, 34, "Output",ExpressionUUID->"2376b8c9-5a7e-41b5-8b10-540eacbeacce"]
}, Open  ]],
Cell[1373782, 32152, 101, 0, 35, "Text",ExpressionUUID->"d160f6a4-951e-4107-a092-fcd132635b69"],
Cell[CellGroupData[{
Cell[1373908, 32156, 502, 16, 30, "Input",ExpressionUUID->"dd4a6d98-696b-43bb-a43c-30da191e6954"],
Cell[1374413, 32174, 332, 11, 34, "Output",ExpressionUUID->"32a99967-c0cd-4f4b-b645-bea7229b7e9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374782, 32190, 563, 18, 30, "Input",ExpressionUUID->"cb651332-7608-4560-aa19-a6f7f41b0fec"],
Cell[1375348, 32210, 423, 14, 34, "Output",ExpressionUUID->"ddb7ab84-e347-41e9-acc5-6345734a22e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375808, 32229, 563, 18, 30, "Input",ExpressionUUID->"2f7f399c-fe69-43e7-a521-8c6888a4cda2"],
Cell[1376374, 32249, 368, 12, 34, "Output",ExpressionUUID->"fc7e8d72-9457-4b6b-a34b-bf673856d5cd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1376791, 32267, 286, 8, 32, "Subsubsection",ExpressionUUID->"7f5d5d18-5c8a-4840-bd94-8feaf41c1947"],
Cell[CellGroupData[{
Cell[1377102, 32279, 107, 1, 30, "Input",ExpressionUUID->"ae0af443-3466-4952-ac6b-b5fedacc386d"],
Cell[1377212, 32282, 24702, 555, 167, "Output",ExpressionUUID->"359338eb-56bc-4433-acc0-2ce9926f6e45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1401951, 32842, 108, 1, 30, "Input",ExpressionUUID->"ee2e459c-f2a5-4d83-b477-9401179abed8"],
Cell[1402062, 32845, 24567, 549, 167, "Output",ExpressionUUID->"1c2b7b86-4bba-402f-ac3d-e03c93175daf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1426666, 33399, 220, 5, 30, "Input",ExpressionUUID->"c07cb144-3cde-4622-9fca-5c6c6ce95862"],
Cell[1426889, 33406, 150, 3, 34, "Output",ExpressionUUID->"a5c81803-a8f6-4ca8-9414-ad822684348a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427076, 33414, 279, 7, 30, "Input",ExpressionUUID->"e077aa8c-889b-4261-a630-a31f18b5bc8c"],
Cell[1427358, 33423, 171, 3, 34, "Output",ExpressionUUID->"be48ef40-eb1e-43d6-a4b3-b2c3af3686f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427566, 33431, 103, 1, 30, "Input",ExpressionUUID->"fc1765a5-57a5-45c6-95fe-ae9f33b5c878"],
Cell[1427672, 33434, 24543, 552, 167, "Output",ExpressionUUID->"806bb09d-6174-40eb-bd35-44246e4c376e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1452252, 33991, 216, 5, 30, "Input",ExpressionUUID->"af8e5556-5245-46d2-baee-2d3e20858a3d"],
Cell[1452471, 33998, 140, 3, 34, "Output",ExpressionUUID->"4b1f4974-51b8-4112-a1bb-a5fff61d2123"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1452648, 34006, 275, 7, 30, "Input",ExpressionUUID->"9608b78e-2b40-4865-9e9c-49552d428d1a"],
Cell[1452926, 34015, 150, 3, 34, "Output",ExpressionUUID->"2f96f014-7dcb-4d01-bce2-3c97da491140"]
}, Open  ]],
Cell[1453091, 34021, 141, 2, 35, "Text",ExpressionUUID->"1243b8f9-b2e1-46ce-87c2-84b8a7a16927"],
Cell[CellGroupData[{
Cell[1453257, 34027, 491, 15, 33, "Input",ExpressionUUID->"81edd898-84db-4623-8acc-cccd05d0bbcb"],
Cell[1453751, 34044, 1631, 34, 148, "Output",ExpressionUUID->"041428f1-080a-4e74-adfd-2dd5d74cda09"]
}, Open  ]],
Cell[1455397, 34081, 98, 0, 35, "Text",ExpressionUUID->"1a2fcd35-dc89-454a-b849-6a310e8efed0"],
Cell[CellGroupData[{
Cell[1455520, 34085, 540, 16, 33, "Input",ExpressionUUID->"84fa28b8-2bd8-47a5-befc-f0f84f8b56f0"],
Cell[1456063, 34103, 1497, 32, 265, "Output",ExpressionUUID->"3c99b0dc-44e7-4cf8-90f3-e83360a0b8d0"]
}, Open  ]],
Cell[1457575, 34138, 125, 0, 35, "Text",ExpressionUUID->"b5985bf7-0ca4-40e0-bf95-5aef5ca622c5"],
Cell[CellGroupData[{
Cell[1457725, 34142, 579, 17, 33, "Input",ExpressionUUID->"d0fc8032-dbcf-4306-a02f-761b8cebea76"],
Cell[1458307, 34161, 1243, 28, 267, "Output",ExpressionUUID->"3987ef7b-28d3-446c-b37d-9780a0f7679e"]
}, Open  ]],
Cell[1459565, 34192, 120, 0, 35, "Text",ExpressionUUID->"2dee6d39-5059-4274-bbd2-b9db4ccefd08"],
Cell[CellGroupData[{
Cell[1459710, 34196, 624, 18, 30, "Input",ExpressionUUID->"76e577d8-df1a-48be-a708-eebd0316c23d"],
Cell[1460337, 34216, 320, 9, 34, "Output",ExpressionUUID->"3003f8ba-09ae-408a-83cb-df277826bc49"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1460706, 34231, 117, 0, 29, "Subsubsection",ExpressionUUID->"c49352e5-50a3-4aa9-9589-6996d31a0f53"],
Cell[CellGroupData[{
Cell[1460848, 34235, 106, 1, 30, "Input",ExpressionUUID->"2e9b92dc-ffb8-4aee-a7e4-9753693d4d76"],
Cell[1460957, 34238, 14277, 338, 119, "Output",ExpressionUUID->"3299dfe4-69c4-4bb3-9c2b-e58ca3fc75ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475271, 34581, 362, 7, 30, "Input",ExpressionUUID->"9fd3339c-04b6-42d4-a3fc-bb5e88e7ccc8"],
Cell[1475636, 34590, 412, 11, 34, "Output",ExpressionUUID->"ad0aeaa8-61ae-4f54-8ad2-6c14eb336a12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476085, 34606, 175, 4, 30, "Input",ExpressionUUID->"293fd8cc-ab20-46b8-bdf8-daac262e5f26"],
Cell[1476263, 34612, 594, 17, 34, "Output",ExpressionUUID->"86fb833c-d2d1-4421-be77-9c0dfd1957c2"]
}, Open  ]],
Cell[1476872, 34632, 178, 5, 35, "Text",ExpressionUUID->"958b76aa-628f-40ef-a28e-bc262886d305"],
Cell[CellGroupData[{
Cell[1477075, 34641, 211, 5, 30, "Input",ExpressionUUID->"de05e5c2-8600-4bdc-86c0-1969f030edb7"],
Cell[1477289, 34648, 332, 6, 34, "Output",ExpressionUUID->"7263f727-5a63-4246-88e7-0187ab1fe8ad"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1477670, 34660, 128, 0, 29, "Subsubsection",ExpressionUUID->"80ed2de5-42ca-4541-9d49-e60330934e8e"],
Cell[CellGroupData[{
Cell[1477823, 34664, 117, 1, 30, "Input",ExpressionUUID->"41634257-90a6-485b-9df3-b447c5aa4666"],
Cell[1477943, 34667, 9937, 246, 95, "Output",ExpressionUUID->"7ac9dd69-6d38-404a-8a26-088160f3c4d7"]
}, Open  ]],
Cell[1487895, 34916, 138, 2, 30, "Input",ExpressionUUID->"e1182777-76af-4aef-ba37-3a62d61f2cf7"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

